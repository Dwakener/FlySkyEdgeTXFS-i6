

***************************************************************************************
***                                                                                 ***
***                                  Parse script                                   ***
***                                                                                 ***
***************************************************************************************

  Define symbols added by command line:
      Define symbol __STACKSIZE__ as 256
      Define global symbol __STACKSIZE__ = 0x00000100
      Define symbol __STACKSIZE_PROCESS__ as 0
      Define global symbol __STACKSIZE_PROCESS__ = 0x00000000
      Define symbol __HEAPSIZE__ as 0
      Define global symbol __HEAPSIZE__ = 0x00000000
      Define symbol __SEGGER_RTL_vfprintf as __SEGGER_RTL_vfprintf_int_nwp
      Define symbol __SEGGER_RTL_vfscanf as __SEGGER_RTL_vfscanf_int
      Define symbol __dso_handle as 0
      Define global symbol __dso_handle = 0x00000000


***************************************************************************************
***                                                                                 ***
***                                  Check options                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                     Ingest                                      ***
***                                                                                 ***
***************************************************************************************

  Loading 30 sections from 'system_MKL16Z4.o'
  Loading 22 symbols from 'system_MKL16Z4.o'
  Loading 101 sections from 'lcd.o'
  Loading 155 symbols from 'lcd.o'
  Loading 141 sections from 'BoardI6.o'
  Loading 340 symbols from 'BoardI6.o'
  Loading 217 sections from 'er9x.o'
      Removing SHF_WRITE from section .init_array (er9x.o)
  Loading 408 symbols from 'er9x.o'
  Loading 68 sections from 'A7105_SPI.o'
  Loading 90 symbols from 'A7105_SPI.o'
  Loading 43 sections from 'AFHDS2A_a7105.o'
  Loading 70 symbols from 'AFHDS2A_a7105.o'
  Loading 67 sections from 'audio.o'
  Loading 103 symbols from 'audio.o'
  Loading 55 sections from 'drivers.o'
  Loading 78 symbols from 'drivers.o'
  Loading 71 sections from 'file.o'
  Loading 101 symbols from 'file.o'
  Loading 471 sections from 'menus.o'
  Loading 904 symbols from 'menus.o'
  Loading 70 sections from 'pulses.o'
  Loading 113 symbols from 'pulses.o'
  Loading 20 sections from 'stamp.o'
  Loading 8 symbols from 'stamp.o'
  Loading 32 sections from 'templates.o'
  Loading 27 symbols from 'templates.o'
  Loading 24 sections from 'main.o'
  Loading 13 symbols from 'main.o'
  Loading 18 sections from 'Vario.o'
  Loading 7 symbols from 'Vario.o'
  Loading 30 sections from 'AFHDS.o'
  Loading 26 symbols from 'AFHDS.o'
  Loading 73 sections from 'elrsV2.o'
  Loading 94 symbols from 'elrsV2.o'
  Loading 38 sections from 'crc_crsf.o'
  Loading 32 symbols from 'crc_crsf.o'
  Loading 62 sections from 'crossfire.o'
  Loading 87 symbols from 'crossfire.o'
  Loading 71 sections from 'pers.o'
  Loading 125 symbols from 'pers.o'
  Loading 47 sections from 'common.o'
  Loading 47 symbols from 'common.o'
  Loading 36 sections from 'OTA.o'
  Loading 32 symbols from 'OTA.o'
  Loading 111 sections from 'SX127x.o'
      Removing SHF_WRITE from section .init_array (SX127x.o)
  Loading 176 symbols from 'SX127x.o'
  Loading 57 sections from 'SX127xHal.o'
  Loading 73 symbols from 'SX127xHal.o'
  Loading 83 sections from 'ELRS.o'
      Removing SHF_WRITE from section .init_array (ELRS.o)
  Loading 142 symbols from 'ELRS.o'
  Loading 18 sections from 'config.o'
  Loading 7 symbols from 'config.o'
  Loading 35 sections from 'FHSS.o'
  Loading 26 symbols from 'FHSS.o'
  Loading 37 sections from 'random.o'
  Loading 33 symbols from 'random.o'
  Loading 21 sections from 'POWERMGNT.o'
  Loading 9 symbols from 'POWERMGNT.o'
  Loading 33 sections from 'stubborn_receiver.o'
  Loading 32 symbols from 'stubborn_receiver.o'
  Loading 36 sections from 'stubborn_sender.o'
  Loading 33 symbols from 'stubborn_sender.o'
  Loading 32 sections from 'crc.o'
  Loading 32 symbols from 'crc.o'
  Loading 18 sections from 'CRSF.o'
  Loading 7 symbols from 'CRSF.o'
  Loading 48 sections from 'fsl_adc16.o'
  Loading 57 symbols from 'fsl_adc16.o'
  Loading 110 sections from 'fsl_clock.o'
  Loading 218 symbols from 'fsl_clock.o'
  Loading 46 sections from 'fsl_cmp.o'
  Loading 56 symbols from 'fsl_cmp.o'
  Loading 31 sections from 'fsl_common.o'
  Loading 23 symbols from 'fsl_common.o'
  Loading 33 sections from 'fsl_cop.o'
  Loading 25 symbols from 'fsl_cop.o'
  Loading 50 sections from 'fsl_dac.o'
  Loading 59 symbols from 'fsl_dac.o'
  Loading 64 sections from 'fsl_dma.o'
  Loading 77 symbols from 'fsl_dma.o'
  Loading 34 sections from 'fsl_dmamux.o'
  Loading 25 symbols from 'fsl_dmamux.o'
  Loading 80 sections from 'fsl_flash.o'
  Loading 126 symbols from 'fsl_flash.o'
  Loading 49 sections from 'fsl_gpio.o'
  Loading 53 symbols from 'fsl_gpio.o'
  Loading 99 sections from 'fsl_i2c.o'
  Loading 160 symbols from 'fsl_i2c.o'
  Loading 44 sections from 'fsl_i2c_dma.o'
  Loading 47 symbols from 'fsl_i2c_dma.o'
  Loading 32 sections from 'fsl_llwu.o'
  Loading 30 symbols from 'fsl_llwu.o'
  Loading 85 sections from 'fsl_lpsci.o'
  Loading 129 symbols from 'fsl_lpsci.o'
  Loading 65 sections from 'fsl_lpsci_dma.o'
  Loading 83 symbols from 'fsl_lpsci_dma.o'
  Loading 37 sections from 'fsl_lptmr.o'
  Loading 30 symbols from 'fsl_lptmr.o'
  Loading 36 sections from 'fsl_pit.o'
  Loading 29 symbols from 'fsl_pit.o'
  Loading 29 sections from 'fsl_pmc.o'
  Loading 19 symbols from 'fsl_pmc.o'
  Loading 27 sections from 'fsl_rcm.o'
  Loading 16 symbols from 'fsl_rcm.o'
  Loading 51 sections from 'fsl_rtc.o'
  Loading 58 symbols from 'fsl_rtc.o'
  Loading 82 sections from 'fsl_sai.o'
  Loading 133 symbols from 'fsl_sai.o'
  Loading 65 sections from 'fsl_sai_dma.o'
  Loading 90 symbols from 'fsl_sai_dma.o'
  Loading 23 sections from 'fsl_sim.o'
  Loading 12 symbols from 'fsl_sim.o'
  Loading 34 sections from 'fsl_smc.o'
  Loading 40 symbols from 'fsl_smc.o'
  Loading 88 sections from 'fsl_spi.o'
  Loading 135 symbols from 'fsl_spi.o'
  Loading 52 sections from 'fsl_spi_dma.o'
  Loading 58 symbols from 'fsl_spi_dma.o'
  Loading 59 sections from 'fsl_tpm.o'
  Loading 71 symbols from 'fsl_tpm.o'
  Loading 42 sections from 'fsl_tsi_v4.o'
  Loading 49 symbols from 'fsl_tsi_v4.o'
  Loading 93 sections from 'fsl_uart.o'
  Loading 144 symbols from 'fsl_uart.o'
  Loading 65 sections from 'fsl_uart_dma.o'
  Loading 83 symbols from 'fsl_uart_dma.o'
  Loading 18 sections from 'Kinetis_KL_Startup.o'
  Loading 19 symbols from 'Kinetis_KL_Startup.o'
  Loading 20 sections from 'MKL16Z4_Vectors.o'
  Loading 60 symbols from 'MKL16Z4_Vectors.o'
      Strong symbol DMA0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol SPI0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol UART2_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM1_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM2_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PIT_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PORTC_PORTD_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
  Loading 18 sections from 'SEGGER_THUMB_Startup.o'
  Loading 18 symbols from 'SEGGER_THUMB_Startup.o'
  Loading archive: libc_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 461 sections from 'codesets.o (libc_v6m_t_le_eabi_small.a)'
      Loading 605 symbols from 'codesets.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'compilerasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 20 symbols from 'compilerasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 sections from 'config.o (libc_v6m_t_le_eabi_small.a)'
      Loading 2 symbols from 'config.o (libc_v6m_t_le_eabi_small.a)'
      Loading 51 sections from 'convops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 73 symbols from 'convops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'errno.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 symbols from 'errno.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'errno_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 5 symbols from 'errno_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 24 sections from 'execops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 30 symbols from 'execops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 70 sections from 'fileops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 95 symbols from 'fileops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'fenvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from 'fenvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 71 sections from 'floatasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 167 symbols from 'floatasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 635 sections from 'floatops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 856 symbols from 'floatops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'heapops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 21 symbols from 'heapops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 38 sections from 'intasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 67 symbols from 'intasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'intops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 41 symbols from 'intops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'jumpasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 11 symbols from 'jumpasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 5585 sections from 'locales.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10013 symbols from 'locales.o (libc_v6m_t_le_eabi_small.a)'
      Loading 282 sections from 'mbops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 438 symbols from 'mbops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 sections from 'phantomops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 2 symbols from 'phantomops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'sortops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 7 symbols from 'sortops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 sections from 'strasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 37 symbols from 'strasmops_arm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 82 sections from 'strops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 110 symbols from 'strops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 68 sections from 'timeops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 101 symbols from 'timeops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'utilops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 26 symbols from 'utilops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 sections from 'wconvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 44 symbols from 'wconvops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 20 sections from 'wprinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 63 symbols from 'wprinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'wscanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 35 symbols from 'wscanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 54 sections from 'wstrops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 72 symbols from 'wstrops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'scanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 33 symbols from 'scanops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 48 sections from 'prinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 60 symbols from 'prinops.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_int_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 25 symbols from '__SEGGER_RTL_vfprintf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 15 symbols from '__SEGGER_RTL_vfprintf_long_long_nwp.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 55 symbols from '__SEGGER_RTL_vfprintf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 55 symbols from '__SEGGER_RTL_vfprintf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_short_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_short_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_int_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_int_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_int_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_int_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 10 sections from '__SEGGER_RTL_vfprintf_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from '__SEGGER_RTL_vfprintf_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 9 sections from '__SEGGER_RTL_vfprintf_long_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 symbols from '__SEGGER_RTL_vfprintf_long_long_nwp_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 59 symbols from '__SEGGER_RTL_vfprintf_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 65 symbols from '__SEGGER_RTL_vfprintf_short_float_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 16 sections from '__SEGGER_RTL_vfprintf_short_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 65 symbols from '__SEGGER_RTL_vfprintf_short_float_long_long_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 symbols from '__SEGGER_RTL_vfscanf_int.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_int_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from '__SEGGER_RTL_vfscanf_int_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 17 symbols from '__SEGGER_RTL_vfscanf_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from '__SEGGER_RTL_vfscanf_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from '__SEGGER_RTL_vfscanf_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from '__SEGGER_RTL_vfscanf_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 28 symbols from '__SEGGER_RTL_vfscanf_float_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 31 symbols from '__SEGGER_RTL_vfscanf_float_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 28 symbols from '__SEGGER_RTL_vfscanf_float_long_long.o (libc_v6m_t_le_eabi_small.a)'
      Loading 13 sections from '__SEGGER_RTL_vfscanf_float_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 31 symbols from '__SEGGER_RTL_vfscanf_float_long_long_cc.o (libc_v6m_t_le_eabi_small.a)'
  Loading 24 sections from 'SEGGER_crtinit_v6m_little.o'
  Loading 53 symbols from 'SEGGER_crtinit_v6m_little.o'
      Strong symbol __assert_func [fsl_common.o] kept after finding weak definition [SEGGER_crtinit_v6m_little.o]
  Loading archive: heapops_basic_v6m_little.a
      Detected symbol lookup table
      Loading 17 sections from 'heapops_basic.o (heapops_basic_v6m_little.a)'
      Loading 25 symbols from 'heapops_basic.o (heapops_basic_v6m_little.a)'
  Loading archive: libcxxabi_noexcept_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 12 sections from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 12 symbols from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 17 sections from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 26 symbols from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 20 sections from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
          Removing SHF_WRITE from section .init_array (cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a))
      Loading 30 symbols from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 15 sections from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 17 symbols from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 29 sections from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 48 symbols from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 8 symbols from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 43 symbols from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 22 sections from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 35 symbols from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 545 sections from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 831 symbols from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 31 sections from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 44 symbols from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 46 sections from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 80 symbols from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'


***************************************************************************************
***                                                                                 ***
***                                  Wrap symbols                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet
  
  Selecting Kinetis_KL_Startup.o to define Reset_Handler
      Definition:     Reset_Handler
      Pushing section .init to worklist [originates from symbol Reset_Handler]
  
  Processing section: .init from Kinetis_KL_Startup.o
      Load REL relocations for .init (Kinetis_KL_Startup.o)
      Reference:      __RAM_segment_end__
      Reference:      SystemInit
  
  Selecting system_MKL16Z4.o to define SystemInit
      Definition:     SystemInit
      Pushing section .init.SystemInit to worklist [originates from symbol SystemInit]
  
  Processing section: .init.SystemInit from system_MKL16Z4.o
  
  Selecting SEGGER_THUMB_Startup.o to define _start
      Definition:     _start
      Pushing section .init._start to worklist [originates from symbol _start]
  
  Processing section: .init._start from SEGGER_THUMB_Startup.o
      Load REL relocations for .init._start (SEGGER_THUMB_Startup.o)
      Reference:      main
      Reference:      __SEGGER_init_table__
  
  Selecting MKL16Z4_Vectors.o to define _vectors
      Definition:     _vectors
      Pushing section .vectors to worklist [originates from symbol _vectors]
  
  Processing section: .vectors from MKL16Z4_Vectors.o
      Load REL relocations for .vectors (MKL16Z4_Vectors.o)
      Reference:      __stack_end__
      Weak reference: NMI_Handler
      Weak reference: HardFault_Handler
      Weak reference: SVC_Handler
      Weak reference: PendSV_Handler
      Weak reference: SysTick_Handler
      Weak reference: DMA0_IRQHandler
      Weak reference: DMA1_IRQHandler
      Weak reference: DMA2_IRQHandler
      Weak reference: DMA3_IRQHandler
      Local section:  .init from MKL16Z4_Vectors.o using relocation R_ARM_ABS32
      Weak reference: FTFA_IRQHandler
      Weak reference: LVD_LVW_IRQHandler
      Weak reference: LLW_IRQHandler
      Weak reference: I2C0_IRQHandler
      Weak reference: I2C1_IRQHandler
      Weak reference: SPI0_IRQHandler
      Weak reference: SPI1_IRQHandler
      Weak reference: UART0_IRQHandler
      Weak reference: UART1_IRQHandler
      Weak reference: UART2_IRQHandler
      Weak reference: ADC0_IRQHandler
      Weak reference: CMP0_IRQHandler
      Weak reference: TPM0_IRQHandler
      Weak reference: TPM1_IRQHandler
      Weak reference: TPM2_IRQHandler
      Weak reference: RTC_IRQHandler
      Weak reference: RTC_Seconds_IRQHandler
      Weak reference: PIT_IRQHandler
      Weak reference: I2S0_IRQHandler
      Weak reference: DAC0_IRQHandler
      Weak reference: TSI0_IRQHandler
      Weak reference: LPTimer_IRQHandler
      Weak reference: PORTA_IRQHandler
      Weak reference: PORTC_PORTD_IRQHandler
  
  Processing section: .init from MKL16Z4_Vectors.o
  
  Selecting MKL16Z4_Vectors.o to define ADC0_IRQHandler
      Definition:     ADC0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define CMP0_IRQHandler
      Definition:     CMP0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DAC0_IRQHandler
      Definition:     DAC0_IRQHandler
  
  Selecting BoardI6.o to define DMA0_IRQHandler
      Definition:     DMA0_IRQHandler
      Pushing section .text.DMA0_IRQHandler to worklist [originates from symbol DMA0_IRQHandler]
  
  Processing section: .text.DMA0_IRQHandler from BoardI6.o
      Load REL relocations for .text.DMA0_IRQHandler (BoardI6.o)
      Reference:      process_read_dma_data()
      Reference:      start_lpsci_DMA_receive()
  
  Selecting MKL16Z4_Vectors.o to define DMA1_IRQHandler
      Definition:     DMA1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA2_IRQHandler
      Definition:     DMA2_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA3_IRQHandler
      Definition:     DMA3_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define FTFA_IRQHandler
      Definition:     FTFA_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define HardFault_Handler
      Definition:     HardFault_Handler
  
  Selecting MKL16Z4_Vectors.o to define I2C0_IRQHandler
      Definition:     I2C0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2C1_IRQHandler
      Definition:     I2C1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2S0_IRQHandler
      Definition:     I2S0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LLW_IRQHandler
      Definition:     LLW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LPTimer_IRQHandler
      Definition:     LPTimer_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LVD_LVW_IRQHandler
      Definition:     LVD_LVW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define NMI_Handler
      Definition:     NMI_Handler
  
  Selecting BoardI6.o to define PIT_IRQHandler
      Definition:     PIT_IRQHandler
      Pushing section .text.PIT_IRQHandler to worklist [originates from symbol PIT_IRQHandler]
  
  Processing section: .text.PIT_IRQHandler from BoardI6.o
      Load REL relocations for .text.PIT_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER0_COMP_vect
      Reference:      g_tmr16KHz
      Reference:      tmrEEPROM
  
  Selecting er9x.o to define ISR_TIMER0_COMP_vect
      Definition:     ISR_TIMER0_COMP_vect
      Pushing section .text.ISR_TIMER0_COMP_vect to worklist [originates from symbol ISR_TIMER0_COMP_vect]
      Pushing section .init_array to worklist as %init_array is required for this file
  
  Processing section: .text.ISR_TIMER0_COMP_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER0_COMP_vect (er9x.o)
      Reference:      audioQueue::heartbeat()
      Reference:      per10ms()
      Reference:      audio
      Reference:      heartbeat
      Reference:      AlarmControl
  
  Processing section: .init_array from er9x.o
      Load REL relocations for .init_array (er9x.o)
      Local section:  .text._GLOBAL__sub_I_er9x.cpp from er9x.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Load REL relocations for .text._GLOBAL__sub_I_er9x.cpp (er9x.o)
      Reference:      audioQueue::audioQueue()
  
  Selecting er9x.o to define AlarmControl
      Definition:     AlarmControl
      Pushing section .data.AlarmControl to worklist [originates from symbol AlarmControl]
  
  Processing section: .data.AlarmControl from er9x.o
  
  Selecting MKL16Z4_Vectors.o to define PORTA_IRQHandler
      Definition:     PORTA_IRQHandler
  
  Selecting BoardI6.o to define PORTC_PORTD_IRQHandler
      Definition:     PORTC_PORTD_IRQHandler
      Pushing section .text.PORTC_PORTD_IRQHandler to worklist [originates from symbol PORTC_PORTD_IRQHandler]
  
  Processing section: .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Load REL relocations for .text.PORTC_PORTD_IRQHandler (BoardI6.o)
      Reference:      ActionAFHDS2A
      Reference:      RadioState
  
  Selecting AFHDS2A_a7105.o to define ActionAFHDS2A
      Definition:     ActionAFHDS2A
      Pushing section .text.ActionAFHDS2A to worklist [originates from symbol ActionAFHDS2A]
  
  Processing section: .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.ActionAFHDS2A (AFHDS2A_a7105.o)
      Reference:      A7105_AdjustLOBaseFreq()
      Reference:      A7105_SetPower()
      Reference:      A7105_SetTxRxMode(unsigned char)
      Reference:      A7105_Strobe(unsigned char)
      Reference:      EnableGIO
      Reference:      A7105_ReadData(unsigned char)
      Reference:      A7105_ReadReg(unsigned char)
      Reference:      AFHDS2A_build_packet(unsigned char)
      Reference:      __aeabi_memset
      Reference:      A7105_AntSwitch()
      Reference:      A7105_WriteData(unsigned char, unsigned char)
      Reference:      __aeabi_uidivmod
      Reference:      __aeabi_llsl
      Reference:      memcmp
      Reference:      __aeabi_uidiv
      Local section:  .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o using relocation R_ARM_THM_CALL
      Reference:      RadioActive
      Reference:      protocol_flags
      Reference:      packet
      Reference:      ID
      Reference:      g_model
      Reference:      AFHDS2A_tel_res_cnt
      Reference:      AFHDS2A_tel_status
      Reference:      AFHDS2A_tel_data
      Local section:  .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Reference:      hopping_frequency_no
      Reference:      hopping_frequency
      Reference:      bind_phase
      Reference:      packet_count
  
  Processing section: .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.processFlySkySensor(unsigned char const*, unsigned char) (AFHDS2A_a7105.o)
      Reference:      __aeabi_idiv
      Reference:      AFHDS2A_tel
      Reference:      GAltOffset
      Reference:      AltOffset
  
  Processing section: .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel
      Definition:     AFHDS2A_tel
      Pushing section .rodata.AFHDS2A_tel to worklist [originates from symbol AFHDS2A_tel]
  
  Processing section: .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_data
      Definition:     AFHDS2A_tel_data
      Pushing section .bss.AFHDS2A_tel_data to worklist [originates from symbol AFHDS2A_tel_data]
  
  Processing section: .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_res_cnt
      Definition:     AFHDS2A_tel_res_cnt
      Pushing section .bss.AFHDS2A_tel_res_cnt to worklist [originates from symbol AFHDS2A_tel_res_cnt]
  
  Processing section: .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_status
      Definition:     AFHDS2A_tel_status
      Pushing section .bss.AFHDS2A_tel_status to worklist [originates from symbol AFHDS2A_tel_status]
  
  Processing section: .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AltOffset
      Definition:     AltOffset
      Pushing section .bss.AltOffset to worklist [originates from symbol AltOffset]
  
  Processing section: .bss.AltOffset from AFHDS2A_a7105.o
  
  Selecting BoardI6.o to define EnableGIO
      Definition:     EnableGIO
      Pushing section .text.EnableGIO to worklist [originates from symbol EnableGIO]
  
  Processing section: .text.EnableGIO from BoardI6.o
  
  Selecting AFHDS2A_a7105.o to define GAltOffset
      Definition:     GAltOffset
      Pushing section .bss.GAltOffset to worklist [originates from symbol GAltOffset]
  
  Processing section: .bss.GAltOffset from AFHDS2A_a7105.o
  
  Selecting A7105_SPI.o to define ID
      Definition:     ID
      Pushing section .bss.ID to worklist [originates from symbol ID]
  
  Processing section: .bss.ID from A7105_SPI.o
  
  Selecting MKL16Z4_Vectors.o to define PendSV_Handler
      Definition:     PendSV_Handler
  
  Selecting MKL16Z4_Vectors.o to define RTC_IRQHandler
      Definition:     RTC_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define RTC_Seconds_IRQHandler
      Definition:     RTC_Seconds_IRQHandler
  
  Selecting pulses.o to define RadioActive
      Definition:     RadioActive
      Pushing section .bss.RadioActive to worklist [originates from symbol RadioActive]
  
  Processing section: .bss.RadioActive from pulses.o
  
  Selecting A7105_SPI.o to define RadioState
      Definition:     RadioState
      Pushing section .bss.RadioState to worklist [originates from symbol RadioState]
  
  Processing section: .bss.RadioState from A7105_SPI.o
  
  Selecting BoardI6.o to define SPI0_IRQHandler
      Definition:     SPI0_IRQHandler
      Pushing section .text.SPI0_IRQHandler to worklist [originates from symbol SPI0_IRQHandler]
  
  Processing section: .text.SPI0_IRQHandler from BoardI6.o
      Load REL relocations for .text.SPI0_IRQHandler (BoardI6.o)
      Reference:      SPI_BufferPtr
      Reference:      SPI_Size
  
  Selecting MKL16Z4_Vectors.o to define SPI1_IRQHandler
      Definition:     SPI1_IRQHandler
  
  Selecting BoardI6.o to define SPI_BufferPtr
      Definition:     SPI_BufferPtr
      Pushing section .bss.SPI_BufferPtr to worklist [originates from symbol SPI_BufferPtr]
  
  Processing section: .bss.SPI_BufferPtr from BoardI6.o
  
  Selecting BoardI6.o to define SPI_Size
      Definition:     SPI_Size
      Pushing section .bss.SPI_Size to worklist [originates from symbol SPI_Size]
  
  Processing section: .bss.SPI_Size from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define SVC_Handler
      Definition:     SVC_Handler
  
  Selecting MKL16Z4_Vectors.o to define SysTick_Handler
      Definition:     SysTick_Handler
  
  Selecting BoardI6.o to define TPM0_IRQHandler
      Definition:     TPM0_IRQHandler
      Pushing section .text.TPM0_IRQHandler to worklist [originates from symbol TPM0_IRQHandler]
  
  Processing section: .text.TPM0_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM0_IRQHandler (BoardI6.o)
      Reference:      crsf_action()
      Reference:      ActionAFHDS
      Reference:      PausePulses
  
  Selecting AFHDS.o to define ActionAFHDS
      Definition:     ActionAFHDS
      Pushing section .text.ActionAFHDS to worklist [originates from symbol ActionAFHDS]
  
  Processing section: .text.ActionAFHDS from AFHDS.o
  
  Selecting pulses.o to define PausePulses
      Definition:     PausePulses
      Pushing section .bss.PausePulses to worklist [originates from symbol PausePulses]
  
  Processing section: .bss.PausePulses from pulses.o
  
  Selecting BoardI6.o to define TPM1_IRQHandler
      Definition:     TPM1_IRQHandler
      Pushing section .text.TPM1_IRQHandler to worklist [originates from symbol TPM1_IRQHandler]
  
  Processing section: .text.TPM1_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM1_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER2_OVF_vect
  
  Selecting er9x.o to define ISR_TIMER2_OVF_vect
      Definition:     ISR_TIMER2_OVF_vect
      Pushing section .text.ISR_TIMER2_OVF_vect to worklist [originates from symbol ISR_TIMER2_OVF_vect]
  
  Processing section: .text.ISR_TIMER2_OVF_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER2_OVF_vect (er9x.o)
      Reference:      audioQueue::busy()
      Weak reference: audioQueue::driver()
  
  Selecting BoardI6.o to define TPM2_IRQHandler
      Definition:     TPM2_IRQHandler
      Pushing section .text.TPM2_IRQHandler to worklist [originates from symbol TPM2_IRQHandler]
  
  Processing section: .text.TPM2_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM2_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER1_COMPA_vect
  
  Selecting pulses.o to define ISR_TIMER1_COMPA_vect
      Definition:     ISR_TIMER1_COMPA_vect
      Pushing section .text.ISR_TIMER1_COMPA_vect to worklist [originates from symbol ISR_TIMER1_COMPA_vect]
  
  Processing section: .text.ISR_TIMER1_COMPA_vect from pulses.o
      Load REL relocations for .text.ISR_TIMER1_COMPA_vect (pulses.o)
      Reference:      GetPPMTimCompare
      Reference:      SetPPMTimCompare
      Reference:      SetStartPulsePol()
      Reference:      setupPulses()
      Local section:  .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o using relocation R_ARM_ABS32
      Reference:      pulses2MHz
  
  Processing section: .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Load REL relocations for .data.ISR_TIMER1_COMPA_vect::pulsePtr (pulses.o)
  
  Selecting BoardI6.o to define GetPPMTimCompare
      Definition:     GetPPMTimCompare
      Pushing section .text.GetPPMTimCompare to worklist [originates from symbol GetPPMTimCompare]
  
  Processing section: .text.GetPPMTimCompare from BoardI6.o
  
  Selecting BoardI6.o to define SetPPMTimCompare
      Definition:     SetPPMTimCompare
      Pushing section .text.SetPPMTimCompare to worklist [originates from symbol SetPPMTimCompare]
  
  Processing section: .text.SetPPMTimCompare from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define TSI0_IRQHandler
      Definition:     TSI0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define UART0_IRQHandler
      Definition:     UART0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define UART1_IRQHandler
      Definition:     UART1_IRQHandler
  
  Selecting BoardI6.o to define UART2_IRQHandler
      Definition:     UART2_IRQHandler
      Pushing section .text.UART2_IRQHandler to worklist [originates from symbol UART2_IRQHandler]
  
  Processing section: .text.UART2_IRQHandler from BoardI6.o
      Load REL relocations for .text.UART2_IRQHandler (BoardI6.o)
      Reference:      voice_rx_idx
      Reference:      voice_uart_recv_buf
      Reference:      g_voice_cb
      Reference:      voice_tx_idx
      Reference:      voice_uart_send_buf
  
  Selecting crossfire.o to define crsf_action()
      Definition:     crsf_action()
      Pushing section .text.crsf_action() to worklist [originates from symbol crsf_action()]
  
  Processing section: .text.crsf_action() from crossfire.o
      Load REL relocations for .text.crsf_action() (crossfire.o)
      Reference:      crsf_is_sending
      Reference:      setupPulsesCrossfire()
      Reference:      crsf_send_data
      Reference:      g_crossfire
  
  Selecting pulses.o to define setupPulses()
      Definition:     setupPulses()
      Pushing section .text.setupPulses() to worklist [originates from symbol setupPulses()]
  
  Processing section: .text.setupPulses() from pulses.o
      Load REL relocations for .text.setupPulses() (pulses.o)
      Reference:      setupPulsesPPM(unsigned char)
      Reference:      EnablePPMTim
      Reference:      DisableGIO
      Reference:      DisablePRTTim
      Reference:      A7105_Sleep()
      Reference:      DisablePPMOut
      Reference:      crsf_init()
      Reference:      crsf_shutdown()
      Reference:      EnablePPMOut
      Reference:      initAFHDS2A
      Reference:      initAFHDS
      Reference:      EnablePRTTim
      Reference:      Current_protocol
  
  Selecting pulses.o to define Current_protocol
      Definition:     Current_protocol
      Pushing section .bss.Current_protocol to worklist [originates from symbol Current_protocol]
  
  Processing section: .bss.Current_protocol from pulses.o
  
  Selecting BoardI6.o to define DisableGIO
      Definition:     DisableGIO
      Pushing section .text.DisableGIO to worklist [originates from symbol DisableGIO]
  
  Processing section: .text.DisableGIO from BoardI6.o
  
  Selecting BoardI6.o to define DisablePPMOut
      Definition:     DisablePPMOut
      Pushing section .text.DisablePPMOut to worklist [originates from symbol DisablePPMOut]
  
  Processing section: .text.DisablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define DisablePRTTim
      Definition:     DisablePRTTim
      Pushing section .text.DisablePRTTim to worklist [originates from symbol DisablePRTTim]
  
  Processing section: .text.DisablePRTTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMOut
      Definition:     EnablePPMOut
      Pushing section .text.EnablePPMOut to worklist [originates from symbol EnablePPMOut]
  
  Processing section: .text.EnablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMTim
      Definition:     EnablePPMTim
      Pushing section .text.EnablePPMTim to worklist [originates from symbol EnablePPMTim]
  
  Processing section: .text.EnablePPMTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePRTTim
      Definition:     EnablePRTTim
      Pushing section .text.EnablePRTTim to worklist [originates from symbol EnablePRTTim]
  
  Processing section: .text.EnablePRTTim from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Sleep()
      Definition:     A7105_Sleep()
      Pushing section .text.A7105_Sleep() to worklist [originates from symbol A7105_Sleep()]
  
  Processing section: .text.A7105_Sleep() from A7105_SPI.o
      Load REL relocations for .text.A7105_Sleep() (A7105_SPI.o)
      Reference:      TX_RX_PutVal
  
  Selecting BoardI6.o to define TX_RX_PutVal
      Definition:     TX_RX_PutVal
      Pushing section .text.TX_RX_PutVal to worklist [originates from symbol TX_RX_PutVal]
  
  Processing section: .text.TX_RX_PutVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Strobe(unsigned char)
      Definition:     A7105_Strobe(unsigned char)
      Pushing section .text.A7105_Strobe(unsigned char) to worklist [originates from symbol A7105_Strobe(unsigned char)]
  
  Processing section: .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_Strobe(unsigned char) (A7105_SPI.o)
      Reference:      a7105_csn_off
      Reference:      SPI_RADIO_SendBlock
      Reference:      a7105_csn_on
  
  Selecting BoardI6.o to define SPI_RADIO_SendBlock
      Definition:     SPI_RADIO_SendBlock
      Pushing section .text.SPI_RADIO_SendBlock to worklist [originates from symbol SPI_RADIO_SendBlock]
  
  Processing section: .text.SPI_RADIO_SendBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_SendBlock (BoardI6.o)
  
  Selecting A7105_SPI.o to define A7105_ReadReg(unsigned char)
      Definition:     A7105_ReadReg(unsigned char)
      Pushing section .text.A7105_ReadReg(unsigned char) to worklist [originates from symbol A7105_ReadReg(unsigned char)]
  
  Processing section: .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadReg(unsigned char) (A7105_SPI.o)
      Reference:      SPI_RADIO_ReceiveBlock
  
  Selecting BoardI6.o to define SPI_RADIO_ReceiveBlock
      Definition:     SPI_RADIO_ReceiveBlock
      Pushing section .text.SPI_RADIO_ReceiveBlock to worklist [originates from symbol SPI_RADIO_ReceiveBlock]
  
  Processing section: .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_ReceiveBlock (BoardI6.o)
  
  Selecting crossfire.o to define crsf_shutdown()
      Definition:     crsf_shutdown()
      Pushing section .text.crsf_shutdown() to worklist [originates from symbol crsf_shutdown()]
  
  Processing section: .text.crsf_shutdown() from crossfire.o
      Load REL relocations for .text.crsf_shutdown() (crossfire.o)
      Reference:      shutdown_crsf_serial_port
  
  Selecting A7105_SPI.o to define A7105_ReadData(unsigned char)
      Definition:     A7105_ReadData(unsigned char)
      Pushing section .text.A7105_ReadData(unsigned char) to worklist [originates from symbol A7105_ReadData(unsigned char)]
  
  Processing section: .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadData(unsigned char) (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_SetPower()
      Definition:     A7105_SetPower()
      Pushing section .text.A7105_SetPower() to worklist [originates from symbol A7105_SetPower()]
  
  Processing section: .text.A7105_SetPower() from A7105_SPI.o
      Load REL relocations for .text.A7105_SetPower() (A7105_SPI.o)
      Reference:      A7105_WriteReg(unsigned char, unsigned char)
      Reference:      prev_power
  
  Selecting A7105_SPI.o to define A7105_WriteReg(unsigned char, unsigned char)
      Definition:     A7105_WriteReg(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteReg(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteReg(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_SPI.o)
  
  Selecting pulses.o to define setupPulsesPPM(unsigned char)
      Definition:     setupPulsesPPM(unsigned char)
      Pushing section .text.setupPulsesPPM(unsigned char) to worklist [originates from symbol setupPulsesPPM(unsigned char)]
  
  Processing section: .text.setupPulsesPPM(unsigned char) from pulses.o
      Load REL relocations for .text.setupPulsesPPM(unsigned char) (pulses.o)
      Reference:      g_chans512
      Reference:      B3_comp_value
  
  Selecting pulses.o to define B3_comp_value
      Definition:     B3_comp_value
      Pushing section .bss.B3_comp_value to worklist [originates from symbol B3_comp_value]
  
  Processing section: .bss.B3_comp_value from pulses.o
  
  Selecting A7105_SPI.o to define A7105_AntSwitch()
      Definition:     A7105_AntSwitch()
      Pushing section .text.A7105_AntSwitch() to worklist [originates from symbol A7105_AntSwitch()]
  
  Processing section: .text.A7105_AntSwitch() from A7105_SPI.o
      Load REL relocations for .text.A7105_AntSwitch() (A7105_SPI.o)
      Reference:      RF0_ClrVal
      Reference:      RF1_SetVal
      Reference:      RF1_ClrVal
      Reference:      RF0_SetVal
      Local section:  .bss.A7105_AntSwitch()::sw from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .bss.A7105_AntSwitch()::sw from A7105_SPI.o
  
  Selecting BoardI6.o to define RF0_ClrVal
      Definition:     RF0_ClrVal
      Pushing section .text.RF0_ClrVal to worklist [originates from symbol RF0_ClrVal]
  
  Processing section: .text.RF0_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF0_SetVal
      Definition:     RF0_SetVal
      Pushing section .text.RF0_SetVal to worklist [originates from symbol RF0_SetVal]
  
  Processing section: .text.RF0_SetVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_ClrVal
      Definition:     RF1_ClrVal
      Pushing section .text.RF1_ClrVal to worklist [originates from symbol RF1_ClrVal]
  
  Processing section: .text.RF1_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_SetVal
      Definition:     RF1_SetVal
      Pushing section .text.RF1_SetVal to worklist [originates from symbol RF1_SetVal]
  
  Processing section: .text.RF1_SetVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_WriteData(unsigned char, unsigned char)
      Definition:     A7105_WriteData(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteData(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteData(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteData(unsigned char, unsigned char) (A7105_SPI.o)
      Reference:      __aeabi_memcpy
  
  Selecting pulses.o to define SetStartPulsePol()
      Definition:     SetStartPulsePol()
      Pushing section .text.SetStartPulsePol() to worklist [originates from symbol SetStartPulsePol()]
  
  Processing section: .text.SetStartPulsePol() from pulses.o
      Load REL relocations for .text.SetStartPulsePol() (pulses.o)
      Reference:      GetPPMOutState
      Reference:      cli
      Reference:      GetPPMTimCompareInterruptFlag
      Reference:      ClearPPMTimCompareInterruptFlag
      Reference:      sei
  
  Selecting BoardI6.o to define ClearPPMTimCompareInterruptFlag
      Definition:     ClearPPMTimCompareInterruptFlag
      Pushing section .text.ClearPPMTimCompareInterruptFlag to worklist [originates from symbol ClearPPMTimCompareInterruptFlag]
  
  Processing section: .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMOutState
      Definition:     GetPPMOutState
      Pushing section .text.GetPPMOutState to worklist [originates from symbol GetPPMOutState]
  
  Processing section: .text.GetPPMOutState from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMTimCompareInterruptFlag
      Definition:     GetPPMTimCompareInterruptFlag
      Pushing section .text.GetPPMTimCompareInterruptFlag to worklist [originates from symbol GetPPMTimCompareInterruptFlag]
  
  Processing section: .text.GetPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_SetTxRxMode(unsigned char)
      Definition:     A7105_SetTxRxMode(unsigned char)
      Pushing section .text.A7105_SetTxRxMode(unsigned char) to worklist [originates from symbol A7105_SetTxRxMode(unsigned char)]
  
  Processing section: .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_SetTxRxMode(unsigned char) (A7105_SPI.o)
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_build_packet(unsigned char)
      Definition:     AFHDS2A_build_packet(unsigned char)
      Pushing section .text.AFHDS2A_build_packet(unsigned char) to worklist [originates from symbol AFHDS2A_build_packet(unsigned char)]
  
  Processing section: .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_a7105.o)
      Reference:      convert_failsafe_ppm(unsigned char)
  
  Selecting A7105_SPI.o to define convert_failsafe_ppm(unsigned char)
      Definition:     convert_failsafe_ppm(unsigned char)
      Pushing section .text.convert_failsafe_ppm(unsigned char) to worklist [originates from symbol convert_failsafe_ppm(unsigned char)]
  
  Processing section: .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.convert_failsafe_ppm(unsigned char) (A7105_SPI.o)
  
  Selecting crossfire.o to define setupPulsesCrossfire()
      Definition:     setupPulsesCrossfire()
      Pushing section .text.setupPulsesCrossfire() to worklist [originates from symbol setupPulsesCrossfire()]
  
  Processing section: .text.setupPulsesCrossfire() from crossfire.o
      Load REL relocations for .text.setupPulsesCrossfire() (crossfire.o)
      Reference:      __aeabi_memcpy4
      Reference:      createCrossfireChannelsFrame(unsigned char*, short*)
      Reference:      outputTelemetryBufferSize
      Reference:      outputTelemetryBuffer
      Reference:      outputTelemetryBufferTrigger
  
  Selecting BoardI6.o to define process_read_dma_data()
      Definition:     process_read_dma_data()
      Pushing section .text.process_read_dma_data() to worklist [originates from symbol process_read_dma_data()]
  
  Processing section: .text.process_read_dma_data() from BoardI6.o
      Load REL relocations for .text.process_read_dma_data() (BoardI6.o)
      Local section:  .bss.g_crsf_rx_buf from BoardI6.o using relocation R_ARM_ABS32
      Local section:  .bss.g_crsf_read_callback from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .bss.g_crsf_rx_buf from BoardI6.o
  
  Processing section: .bss.g_crsf_read_callback from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_AdjustLOBaseFreq()
      Definition:     A7105_AdjustLOBaseFreq()
      Pushing section .text.A7105_AdjustLOBaseFreq() to worklist [originates from symbol A7105_AdjustLOBaseFreq()]
  
  Processing section: .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Load REL relocations for .text.A7105_AdjustLOBaseFreq() (A7105_SPI.o)
      Local section:  .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
  
  Selecting BoardI6.o to define start_lpsci_DMA_receive()
      Definition:     start_lpsci_DMA_receive()
      Pushing section .text.start_lpsci_DMA_receive() to worklist [originates from symbol start_lpsci_DMA_receive()]
  
  Processing section: .text.start_lpsci_DMA_receive() from BoardI6.o
      Load REL relocations for .text.start_lpsci_DMA_receive() (BoardI6.o)
      Reference:      set_lpsci_direction(bool)
      Reference:      submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  
  Selecting BoardI6.o to define set_lpsci_direction(bool)
      Definition:     set_lpsci_direction(bool)
      Pushing section .text.set_lpsci_direction(bool) to worklist [originates from symbol set_lpsci_direction(bool)]
  
  Processing section: .text.set_lpsci_direction(bool) from BoardI6.o
  
  Selecting crossfire.o to define createCrossfireChannelsFrame(unsigned char*, short*)
      Definition:     createCrossfireChannelsFrame(unsigned char*, short*)
      Pushing section .text.createCrossfireChannelsFrame(unsigned char*, short*) to worklist [originates from symbol createCrossfireChannelsFrame(unsigned char*, short*)]
  
  Processing section: .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o
      Load REL relocations for .text.createCrossfireChannelsFrame(unsigned char*, short*) (crossfire.o)
      Reference:      crc8(unsigned char const*, unsigned int)
  
  Selecting BoardI6.o to define submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
      Definition:     submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
      Pushing section .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) to worklist [originates from symbol submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)]
  
  Processing section: .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) from BoardI6.o
  
  Selecting crc_crsf.o to define crc8(unsigned char const*, unsigned int)
      Definition:     crc8(unsigned char const*, unsigned int)
      Pushing section .text.crc8(unsigned char const*, unsigned int) to worklist [originates from symbol crc8(unsigned char const*, unsigned int)]
  
  Processing section: .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Load REL relocations for .text.crc8(unsigned char const*, unsigned int) (crc_crsf.o)
      Local section:  .rodata.crc8tab from crc_crsf.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.crc8tab from crc_crsf.o
  
  Selecting drivers.o to define per10ms()
      Definition:     per10ms()
      Pushing section .text.per10ms() to worklist [originates from symbol per10ms()]
  
  Processing section: .text.per10ms() from drivers.o
      Load REL relocations for .text.per10ms() (drivers.o)
      Reference:      PINB
      Reference:      Key::input(bool, EnumKeys)
      Reference:      PIND
      Reference:      g_tmr10ms
      Reference:      g_blinkTmr10ms
      Local section:  .bss.per10ms()::current from drivers.o using relocation R_ARM_ABS32
      Reference:      keys
      Local section:  .rodata.per10ms()::crossTrim from drivers.o using relocation R_ARM_ABS32
      Reference:      Rotary
      Reference:      StickScrollTimer
  
  Processing section: .bss.per10ms()::current from drivers.o
  
  Processing section: .rodata.per10ms()::crossTrim from drivers.o
  
  Selecting BoardI6.o to define PINB
      Definition:     PINB
      Pushing section .text.PINB to worklist [originates from symbol PINB]
  
  Processing section: .text.PINB from BoardI6.o
  
  Selecting BoardI6.o to define PIND
      Definition:     PIND
      Pushing section .text.PIND to worklist [originates from symbol PIND]
  
  Processing section: .text.PIND from BoardI6.o
  
  Selecting er9x.o to define Rotary
      Definition:     Rotary
      Pushing section .bss.Rotary to worklist [originates from symbol Rotary]
  
  Processing section: .bss.Rotary from er9x.o
  
  Selecting er9x.o to define StickScrollTimer
      Definition:     StickScrollTimer
      Pushing section .bss.StickScrollTimer to worklist [originates from symbol StickScrollTimer]
  
  Processing section: .bss.StickScrollTimer from er9x.o
  
  Selecting crossfire.o to define crsf_init()
      Definition:     crsf_init()
      Pushing section .text.crsf_init() to worklist [originates from symbol crsf_init()]
  
  Processing section: .text.crsf_init() from crossfire.o
      Load REL relocations for .text.crsf_init() (crossfire.o)
      Reference:      setup_crsf_serial_port
      Reference:      SetPRTTimPeriod
      Reference:      processCrossfireTelemetryData(unsigned char)
  
  Selecting BoardI6.o to define SetPRTTimPeriod
      Definition:     SetPRTTimPeriod
      Pushing section .text.SetPRTTimPeriod to worklist [originates from symbol SetPRTTimPeriod]
  
  Processing section: .text.SetPRTTimPeriod from BoardI6.o
      Load REL relocations for .text.SetPRTTimPeriod (BoardI6.o)
      Local section:  .rodata..Lswitch.table.SetPRTTimPeriod from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..Lswitch.table.SetPRTTimPeriod from BoardI6.o
  
  Selecting crossfire.o to define processCrossfireTelemetryData(unsigned char)
      Definition:     processCrossfireTelemetryData(unsigned char)
      Pushing section .text.processCrossfireTelemetryData(unsigned char) to worklist [originates from symbol processCrossfireTelemetryData(unsigned char)]
  
  Processing section: .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryData(unsigned char) (crossfire.o)
      Reference:      processCrossfireTelemetryFrame()
      Reference:      telemetryRxBufferCount
      Reference:      telemetryErrors
      Reference:      telemetryRxBuffer
  
  Selecting crossfire.o to define processCrossfireTelemetryFrame()
      Definition:     processCrossfireTelemetryFrame()
      Pushing section .text.processCrossfireTelemetryFrame() to worklist [originates from symbol processCrossfireTelemetryFrame()]
  
  Processing section: .text.processCrossfireTelemetryFrame() from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryFrame() (crossfire.o)
      Reference:      checkCrossfireTelemetryFrameCRC()
      Reference:      processCrossfireTelemetryValue(unsigned char, int)
      Reference:      runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Reference:      g_elrs_update_rate
      Reference:      g_elrs_lag
      Local section:  .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
  
  Selecting elrsV2.o to define runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Definition:     runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
      Pushing section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) to worklist [originates from symbol runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)]
  
  Processing section: .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (elrsV2.o)
      Reference:      parseDeviceInfoMessage(unsigned char*)
      Reference:      parseParameterInfoMessage(unsigned char*, unsigned char)
      Reference:      bMenuShown
      Reference:      shacommit
      Reference:      fields
      Reference:      badPkt
      Reference:      goodPkt
      Reference:      fields_count
      Local section:  .bss.reusableBufferOffset from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .bss.reusableBuffer from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.1 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.2 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.4 from elrsV2.o using relocation R_ARM_ABS32
      Reference:      curNumSelection
      Reference:      allParamsLoaded
      Reference:      statusComplete
      Local section:  .bss.fieldTimeout from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .bss.reusableBufferOffset from elrsV2.o
  
  Processing section: .bss.reusableBuffer from elrsV2.o
  
  Processing section: .rodata..L.str.1 from elrsV2.o
  
  Processing section: .rodata..L.str from elrsV2.o
  
  Processing section: .rodata..L.str.2 from elrsV2.o
  
  Processing section: .rodata..L.str.3 from elrsV2.o
  
  Processing section: .rodata..L.str.4 from elrsV2.o
  
  Processing section: .bss.fieldTimeout from elrsV2.o
  
  Selecting elrsV2.o to define parseDeviceInfoMessage(unsigned char*)
      Definition:     parseDeviceInfoMessage(unsigned char*)
      Pushing section .text.parseDeviceInfoMessage(unsigned char*) to worklist [originates from symbol parseDeviceInfoMessage(unsigned char*)]
  
  Processing section: .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o
      Load REL relocations for .text.parseDeviceInfoMessage(unsigned char*) (elrsV2.o)
      Reference:      strlen
      Reference:      crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Reference:      curFieldChunk
      Reference:      curfieldId
  
  Selecting elrsV2.o to define crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Definition:     crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
      Pushing section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (elrsV2.o)
      Reference:      crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  
  Selecting crossfire.o to define crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
      Definition:     crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
      Pushing section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) to worklist [originates from symbol crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)]
  
  Processing section: .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o
      Load REL relocations for .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (crossfire.o)
  
  Selecting elrsV2.o to define parseParameterInfoMessage(unsigned char*, unsigned char)
      Definition:     parseParameterInfoMessage(unsigned char*, unsigned char)
      Pushing section .text.parseParameterInfoMessage(unsigned char*, unsigned char) to worklist [originates from symbol parseParameterInfoMessage(unsigned char*, unsigned char)]
  
  Processing section: .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o
      Load REL relocations for .text.parseParameterInfoMessage(unsigned char*, unsigned char) (elrsV2.o)
      Reference:      fieldDataLen
      Reference:      expectedChunks
      Reference:      fieldData
      Reference:      itemmodified
  
  Selecting crossfire.o to define processCrossfireTelemetryValue(unsigned char, int)
      Definition:     processCrossfireTelemetryValue(unsigned char, int)
      Pushing section .text.processCrossfireTelemetryValue(unsigned char, int) to worklist [originates from symbol processCrossfireTelemetryValue(unsigned char, int)]
  
  Processing section: .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryValue(unsigned char, int) (crossfire.o)
      Local section:  .rodata.idx_to_afhds2a from crossfire.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.idx_to_afhds2a from crossfire.o
  
  Selecting crossfire.o to define checkCrossfireTelemetryFrameCRC()
      Definition:     checkCrossfireTelemetryFrameCRC()
      Pushing section .text.checkCrossfireTelemetryFrameCRC() to worklist [originates from symbol checkCrossfireTelemetryFrameCRC()]
  
  Processing section: .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Load REL relocations for .text.checkCrossfireTelemetryFrameCRC() (crossfire.o)
  
  Selecting audio.o to define audioQueue::busy()
      Definition:     audioQueue::busy()
      Pushing section .text.audioQueue::busy() to worklist [originates from symbol audioQueue::busy()]
  
  Processing section: .text.audioQueue::busy() from audio.o
  
  Selecting er9x.o to define audioQueue::driver()
      Definition:     audioQueue::driver()
      Pushing section .text.audioQueue::driver() to worklist [originates from symbol audioQueue::driver()]
  
  Processing section: .text.audioQueue::driver() from er9x.o
      Load REL relocations for .text.audioQueue::driver() (er9x.o)
      Reference:      Buzzer_ClrVal
      Reference:      Buzzer_SetVal
      Weak reference: audioQueue::driver()::toneCounter
      Reference:      g_eeGeneral
  
  Selecting BoardI6.o to define Buzzer_ClrVal
      Definition:     Buzzer_ClrVal
      Pushing section .text.Buzzer_ClrVal to worklist [originates from symbol Buzzer_ClrVal]
  
  Processing section: .text.Buzzer_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define Buzzer_SetVal
      Definition:     Buzzer_SetVal
      Pushing section .text.Buzzer_SetVal to worklist [originates from symbol Buzzer_SetVal]
  
  Processing section: .text.Buzzer_SetVal from BoardI6.o
  
  Selecting audio.o to define audioQueue::heartbeat()
      Definition:     audioQueue::heartbeat()
      Pushing section .text.audioQueue::heartbeat() to worklist [originates from symbol audioQueue::heartbeat()]
  
  Processing section: .text.audioQueue::heartbeat() from audio.o
      Load REL relocations for .text.audioQueue::heartbeat() (audio.o)
  
  Selecting audio.o to define audioQueue::audioQueue()
      Definition:     audioQueue::audioQueue()
      Pushing section .text.audioQueue::audioQueue() to worklist [originates from symbol audioQueue::audioQueue()]
  
  Processing section: .text.audioQueue::audioQueue() from audio.o
  
  Selecting drivers.o to define Key::input(bool, EnumKeys)
      Definition:     Key::input(bool, EnumKeys)
      Pushing section .text.Key::input(bool, EnumKeys) to worklist [originates from symbol Key::input(bool, EnumKeys)]
  
  Processing section: .text.Key::input(bool, EnumKeys) from drivers.o
      Load REL relocations for .text.Key::input(bool, EnumKeys) (drivers.o)
      Reference:      s_evt
      Reference:      Inactivity
  
  Selecting er9x.o to define Inactivity
      Definition:     Inactivity
      Pushing section .bss.Inactivity to worklist [originates from symbol Inactivity]
  
  Processing section: .bss.Inactivity from er9x.o
  
  Selecting er9x.o to define audioQueue::driver()::toneCounter
      Definition:     audioQueue::driver()::toneCounter
      Pushing section .bss.audioQueue::driver()::toneCounter to worklist [originates from symbol audioQueue::driver()::toneCounter]
  
  Processing section: .bss.audioQueue::driver()::toneCounter from er9x.o
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idiv
      Definition:     __aeabi_idiv
      Pushing section .text.libc.__aeabi_idiv to worklist [originates from symbol __aeabi_idiv]
  
  Processing section: .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_idiv (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
      Weak reference: __aeabi_idiv0
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idiv0
      Definition:     __aeabi_idiv0
      Pushing section .text.libc.__aeabi_idiv0 to worklist [originates from symbol __aeabi_idiv0]
  
  Processing section: .text.libc.__aeabi_idiv0 from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsl
      Definition:     __aeabi_llsl
      Pushing section .text.libc.__aeabi_llsl to worklist [originates from symbol __aeabi_llsl]
  
  Processing section: .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memcpy
      Definition:     __aeabi_memcpy
      Pushing section .text.libc.memcpy to worklist [originates from symbol __aeabi_memcpy]
  
  Processing section: .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memcpy4
      Definition:     __aeabi_memcpy4
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memset
      Definition:     __aeabi_memset
      Pushing section .text.libc.__aeabi_memclr to worklist [originates from symbol __aeabi_memset]
  
  Processing section: .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidiv
      Definition:     __aeabi_uidiv
      Pushing section .text.libc.__aeabi_uidiv to worklist [originates from symbol __aeabi_uidiv]
  
  Processing section: .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_uidiv (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidivmod
      Definition:     __aeabi_uidivmod
      Pushing section .text.libc.__aeabi_uidivmod to worklist [originates from symbol __aeabi_uidivmod]
  
  Processing section: .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_uidivmod (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting BoardI6.o to define a7105_csn_off
      Definition:     a7105_csn_off
      Pushing section .text.a7105_csn_off to worklist [originates from symbol a7105_csn_off]
  
  Processing section: .text.a7105_csn_off from BoardI6.o
  
  Selecting BoardI6.o to define a7105_csn_on
      Definition:     a7105_csn_on
      Pushing section .text.a7105_csn_on to worklist [originates from symbol a7105_csn_on]
  
  Processing section: .text.a7105_csn_on from BoardI6.o
  
  Selecting elrsV2.o to define allParamsLoaded
      Definition:     allParamsLoaded
      Pushing section .bss.allParamsLoaded to worklist [originates from symbol allParamsLoaded]
  
  Processing section: .bss.allParamsLoaded from elrsV2.o
  
  Selecting er9x.o to define audio
      Definition:     audio
      Pushing section .bss.audio to worklist [originates from symbol audio]
  
  Processing section: .bss.audio from er9x.o
  
  Selecting elrsV2.o to define bMenuShown
      Definition:     bMenuShown
      Pushing section .bss.bMenuShown to worklist [originates from symbol bMenuShown]
  
  Processing section: .bss.bMenuShown from elrsV2.o
  
  Selecting elrsV2.o to define badPkt
      Definition:     badPkt
      Pushing section .bss.badPkt to worklist [originates from symbol badPkt]
  
  Processing section: .bss.badPkt from elrsV2.o
  
  Selecting A7105_SPI.o to define bind_phase
      Definition:     bind_phase
      Pushing section .bss.bind_phase to worklist [originates from symbol bind_phase]
  
  Processing section: .bss.bind_phase from A7105_SPI.o
  
  Selecting BoardI6.o to define cli
      Definition:     cli
      Pushing section .text.cli to worklist [originates from symbol cli]
  
  Processing section: .text.cli from BoardI6.o
  
  Selecting BoardI6.o to define crsf_is_sending
      Definition:     crsf_is_sending
      Pushing section .text.crsf_is_sending to worklist [originates from symbol crsf_is_sending]
  
  Processing section: .text.crsf_is_sending from BoardI6.o
  
  Selecting BoardI6.o to define crsf_send_data
      Definition:     crsf_send_data
      Pushing section .text.crsf_send_data to worklist [originates from symbol crsf_send_data]
  
  Processing section: .text.crsf_send_data from BoardI6.o
      Load REL relocations for .text.crsf_send_data (BoardI6.o)
      Reference:      stop_dma_receive()
  
  Selecting BoardI6.o to define stop_dma_receive()
      Definition:     stop_dma_receive()
      Pushing section .text.stop_dma_receive() to worklist [originates from symbol stop_dma_receive()]
  
  Processing section: .text.stop_dma_receive() from BoardI6.o
  
  Selecting elrsV2.o to define curFieldChunk
      Definition:     curFieldChunk
      Pushing section .bss.curFieldChunk to worklist [originates from symbol curFieldChunk]
  
  Processing section: .bss.curFieldChunk from elrsV2.o
  
  Selecting elrsV2.o to define curNumSelection
      Definition:     curNumSelection
      Pushing section .bss.curNumSelection to worklist [originates from symbol curNumSelection]
  
  Processing section: .bss.curNumSelection from elrsV2.o
  
  Selecting elrsV2.o to define curfieldId
      Definition:     curfieldId
      Pushing section .data.curfieldId to worklist [originates from symbol curfieldId]
  
  Processing section: .data.curfieldId from elrsV2.o
  
  Selecting elrsV2.o to define expectedChunks
      Definition:     expectedChunks
      Pushing section .data.expectedChunks to worklist [originates from symbol expectedChunks]
  
  Processing section: .data.expectedChunks from elrsV2.o
  
  Selecting elrsV2.o to define fieldData
      Definition:     fieldData
      Pushing section .bss.fieldData to worklist [originates from symbol fieldData]
  
  Processing section: .bss.fieldData from elrsV2.o
  
  Selecting elrsV2.o to define fieldDataLen
      Definition:     fieldDataLen
      Pushing section .bss.fieldDataLen to worklist [originates from symbol fieldDataLen]
  
  Processing section: .bss.fieldDataLen from elrsV2.o
  
  Selecting elrsV2.o to define fields
      Definition:     fields
      Pushing section .bss.fields to worklist [originates from symbol fields]
  
  Processing section: .bss.fields from elrsV2.o
  
  Selecting elrsV2.o to define fields_count
      Definition:     fields_count
      Pushing section .bss.fields_count to worklist [originates from symbol fields_count]
  
  Processing section: .bss.fields_count from elrsV2.o
  
  Selecting drivers.o to define g_blinkTmr10ms
      Definition:     g_blinkTmr10ms
      Pushing section .bss.g_blinkTmr10ms to worklist [originates from symbol g_blinkTmr10ms]
  
  Processing section: .bss.g_blinkTmr10ms from drivers.o
  
  Selecting menus.o to define g_chans512
      Definition:     g_chans512
      Pushing section .bss.g_chans512 to worklist [originates from symbol g_chans512]
  
  Processing section: .bss.g_chans512 from menus.o
  
  Selecting crossfire.o to define g_crossfire
      Definition:     g_crossfire
      Pushing section .bss.g_crossfire to worklist [originates from symbol g_crossfire]
  
  Processing section: .bss.g_crossfire from crossfire.o
  
  Selecting er9x.o to define g_eeGeneral
      Definition:     g_eeGeneral
      Pushing section .bss.g_eeGeneral to worklist [originates from symbol g_eeGeneral]
  
  Processing section: .bss.g_eeGeneral from er9x.o
  
  Selecting crossfire.o to define g_elrs_lag
      Definition:     g_elrs_lag
      Pushing section .bss.g_elrs_lag to worklist [originates from symbol g_elrs_lag]
  
  Processing section: .bss.g_elrs_lag from crossfire.o
  
  Selecting crossfire.o to define g_elrs_update_rate
      Definition:     g_elrs_update_rate
      Pushing section .bss.g_elrs_update_rate to worklist [originates from symbol g_elrs_update_rate]
  
  Processing section: .bss.g_elrs_update_rate from crossfire.o
  
  Selecting er9x.o to define g_model
      Definition:     g_model
      Pushing section .bss.g_model to worklist [originates from symbol g_model]
  
  Processing section: .bss.g_model from er9x.o
  
  Selecting drivers.o to define g_tmr10ms
      Definition:     g_tmr10ms
      Pushing section .bss.g_tmr10ms to worklist [originates from symbol g_tmr10ms]
  
  Processing section: .bss.g_tmr10ms from drivers.o
  
  Selecting er9x.o to define g_tmr16KHz
      Definition:     g_tmr16KHz
      Pushing section .bss.g_tmr16KHz to worklist [originates from symbol g_tmr16KHz]
  
  Processing section: .bss.g_tmr16KHz from er9x.o
  
  Selecting BoardI6.o to define g_voice_cb
      Definition:     g_voice_cb
      Pushing section .bss.g_voice_cb to worklist [originates from symbol g_voice_cb]
  
  Processing section: .bss.g_voice_cb from BoardI6.o
  
  Selecting elrsV2.o to define goodPkt
      Definition:     goodPkt
      Pushing section .bss.goodPkt to worklist [originates from symbol goodPkt]
  
  Processing section: .bss.goodPkt from elrsV2.o
  
  Selecting pulses.o to define heartbeat
      Definition:     heartbeat
      Pushing section .bss.heartbeat to worklist [originates from symbol heartbeat]
  
  Processing section: .bss.heartbeat from pulses.o
  
  Selecting A7105_SPI.o to define hopping_frequency
      Definition:     hopping_frequency
      Pushing section .bss.hopping_frequency to worklist [originates from symbol hopping_frequency]
  
  Processing section: .bss.hopping_frequency from A7105_SPI.o
  
  Selecting A7105_SPI.o to define hopping_frequency_no
      Definition:     hopping_frequency_no
      Pushing section .bss.hopping_frequency_no to worklist [originates from symbol hopping_frequency_no]
  
  Processing section: .bss.hopping_frequency_no from A7105_SPI.o
  
  Selecting AFHDS.o to define initAFHDS
      Definition:     initAFHDS
      Pushing section .text.initAFHDS to worklist [originates from symbol initAFHDS]
  
  Processing section: .text.initAFHDS from AFHDS.o
      Load REL relocations for .text.initAFHDS (AFHDS.o)
      Reference:      A7105_Init()
      Reference:      GetChipID
      Local section:  .rodata.AFHDS_tx_channels from AFHDS.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.AFHDS_tx_channels from AFHDS.o
  
  Selecting BoardI6.o to define GetChipID
      Definition:     GetChipID
      Pushing section .text.GetChipID to worklist [originates from symbol GetChipID]
  
  Processing section: .text.GetChipID from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Init()
      Definition:     A7105_Init()
      Pushing section .text.A7105_Init() to worklist [originates from symbol A7105_Init()]
  
  Processing section: .text.A7105_Init() from A7105_SPI.o
      Load REL relocations for .text.A7105_Init() (A7105_SPI.o)
      Reference:      A7105_Reset()
      Reference:      mDelay
      Reference:      A7105_WriteID(unsigned int)
      Reference:      AFHDS2A_A7105_regs
      Reference:      AFHDS_A7105_regs
  
  Selecting BoardI6.o to define AFHDS2A_A7105_regs
      Definition:     AFHDS2A_A7105_regs
      Pushing section .rodata.AFHDS2A_A7105_regs to worklist [originates from symbol AFHDS2A_A7105_regs]
  
  Processing section: .rodata.AFHDS2A_A7105_regs from BoardI6.o
  
  Selecting BoardI6.o to define AFHDS_A7105_regs
      Definition:     AFHDS_A7105_regs
      Pushing section .rodata.AFHDS_A7105_regs to worklist [originates from symbol AFHDS_A7105_regs]
  
  Processing section: .rodata.AFHDS_A7105_regs from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Reset()
      Definition:     A7105_Reset()
      Pushing section .text.A7105_Reset() to worklist [originates from symbol A7105_Reset()]
  
  Processing section: .text.A7105_Reset() from A7105_SPI.o
      Load REL relocations for .text.A7105_Reset() (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_WriteID(unsigned int)
      Definition:     A7105_WriteID(unsigned int)
      Pushing section .text.A7105_WriteID(unsigned int) to worklist [originates from symbol A7105_WriteID(unsigned int)]
  
  Processing section: .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteID(unsigned int) (A7105_SPI.o)
  
  Selecting AFHDS2A_a7105.o to define initAFHDS2A
      Definition:     initAFHDS2A
      Pushing section .text.initAFHDS2A to worklist [originates from symbol initAFHDS2A]
  
  Processing section: .text.initAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.initAFHDS2A (AFHDS2A_a7105.o)
  
  Selecting elrsV2.o to define itemmodified
      Definition:     itemmodified
      Pushing section .bss.itemmodified to worklist [originates from symbol itemmodified]
  
  Processing section: .bss.itemmodified from elrsV2.o
  
  Selecting drivers.o to define keys
      Definition:     keys
      Pushing section .bss.keys to worklist [originates from symbol keys]
  
  Processing section: .bss.keys from drivers.o
  
  Selecting BoardI6.o to define mDelay
      Definition:     mDelay
      Pushing section .text.mDelay to worklist [originates from symbol mDelay]
  
  Processing section: .text.mDelay from BoardI6.o
  
  Selecting main.o to define main
      Definition:     main
      Pushing section .text.main to worklist [originates from symbol main]
  
  Processing section: .text.main from main.o
      Load REL relocations for .text.main (main.o)
      Reference:      HW_Init
      Reference:      mainER()
  
  Selecting BoardI6.o to define HW_Init
      Definition:     HW_Init
      Pushing section .text.HW_Init to worklist [originates from symbol HW_Init]
  
  Processing section: .text.HW_Init from BoardI6.o
  
  Selecting er9x.o to define mainER()
      Definition:     mainER()
      Pushing section .text.mainER() to worklist [originates from symbol mainER()]
  
  Processing section: .text.mainER() from er9x.o
      Load REL relocations for .text.mainER() (er9x.o)
      Reference:      serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Reference:      eeReadGeneral()
      Reference:      lcd_init()
      Reference:      eeGeneralDefault()
      Reference:      eeWriteGeneral()
      Reference:      lcd_puts_Pleft(unsigned char, char const*)
      Reference:      refreshDiplay()
      Reference:      eeLoadModel(unsigned char)
      Weak reference: keyDown()
      Reference:      doBackLightVoice(unsigned char)
      Reference:      setVolume(unsigned char)
      Reference:      audioVoiceDefevent(unsigned char, unsigned char)
      Reference:      check_backlight_voice()
      Reference:      lcd_clear()
      Reference:      lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Local section:  .text.clearKeyEvents() from er9x.o using relocation R_ARM_THM_CALL
      Reference:      getADC_osmp
      Reference:      stickMoveValue()
      Weak reference: keyDown()
      Reference:      EeFsGetFree()
      Reference:      alert(char const*)
      Reference:      checkTHR()
      Reference:      checkSwitches()
      Reference:      putVoiceQueueUpper(unsigned char)
      Reference:      perOutPhase(short*, unsigned char)
      Reference:      startPulses()
      Reference:      mainSequence()
      Reference:      serialDat0
      Reference:      on_voice_cb(unsigned char*, unsigned char)
      Reference:      g_menuStack
      Reference:      menuProc0(unsigned char)
      Local section:  .rodata..L.str.8 from er9x.o using relocation R_ARM_ABS32
      Reference:      SystemOptions
      Reference:      stickMoved
      Local section:  .rodata..L.str.9 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.10 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.11 from er9x.o using relocation R_ARM_ABS32
      Reference:      s_anaFilt
      Reference:      g_vbat100mV
      Local section:  .rodata..L.str.12 from er9x.o using relocation R_ARM_ABS32
      Reference:      sysFlags
      Local section:  .rodata..L.str.13 from er9x.o using relocation R_ARM_ABS32
      Reference:      CurrentPhase
      Reference:      Main_running
      Reference:      menuProcModelSelect(unsigned char)
  
  Processing section: .text.clearKeyEvents() from er9x.o
      Load REL relocations for .text.clearKeyEvents() (er9x.o)
      Weak reference: keyDown()
  
  Processing section: .rodata..L.str.8 from er9x.o
  
  Processing section: .rodata..L.str.9 from er9x.o
  
  Processing section: .rodata..L.str.10 from er9x.o
  
  Processing section: .rodata..L.str.11 from er9x.o
  
  Processing section: .rodata..L.str.12 from er9x.o
  
  Processing section: .rodata..L.str.13 from er9x.o
  
  Selecting menus.o to define CurrentPhase
      Definition:     CurrentPhase
      Pushing section .bss.CurrentPhase to worklist [originates from symbol CurrentPhase]
  
  Processing section: .bss.CurrentPhase from menus.o
  
  Selecting er9x.o to define Main_running
      Definition:     Main_running
      Pushing section .bss.Main_running to worklist [originates from symbol Main_running]
  
  Processing section: .bss.Main_running from er9x.o
  
  Selecting er9x.o to define SystemOptions
      Definition:     SystemOptions
      Pushing section .bss.SystemOptions to worklist [originates from symbol SystemOptions]
  
  Processing section: .bss.SystemOptions from er9x.o
  
  Selecting file.o to define EeFsGetFree()
      Definition:     EeFsGetFree()
      Pushing section .text.EeFsGetFree() to worklist [originates from symbol EeFsGetFree()]
  
  Processing section: .text.EeFsGetFree() from file.o
      Load REL relocations for .text.EeFsGetFree() (file.o)
      Local section:  .text.EeFsGetLink(unsigned char) from file.o using relocation R_ARM_THM_CALL
      Reference:      eeFs
  
  Processing section: .text.EeFsGetLink(unsigned char) from file.o
      Load REL relocations for .text.EeFsGetLink(unsigned char) (file.o)
      Local section:  .text.EeFsRead(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsRead(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsRead(unsigned char, unsigned char) (file.o)
      Reference:      eeprom_read_block(void*, void const*, unsigned int)
  
  Selecting pers.o to define eeLoadModel(unsigned char)
      Definition:     eeLoadModel(unsigned char)
      Pushing section .text.eeLoadModel(unsigned char) to worklist [originates from symbol eeLoadModel(unsigned char)]
  
  Processing section: .text.eeLoadModel(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModel(unsigned char) (pers.o)
      Reference:      eeLoadModelForBackup(unsigned char)
      Reference:      modelDefaultWrite(unsigned char)
      Local section:  .text.validateName(char*, unsigned char) from pers.o using relocation R_ARM_THM_CALL
      Reference:      mixaddress(unsigned char)
      Reference:      modeFixValue(unsigned char)
      Reference:      CS_STATE(unsigned char)
      Reference:      eeDirty(unsigned char)
      Reference:      eeWaitComplete()
      Reference:      resetTimer1()
      Reference:      resetTimer2()
      Reference:      Xmem
      Local section:  .rodata..L.str.2 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from pers.o using relocation R_ARM_ABS32
      Reference:      TimerConfig
  
  Processing section: .text.validateName(char*, unsigned char) from pers.o
      Load REL relocations for .text.validateName(char*, unsigned char) (pers.o)
      Reference:      char2idx(char)
      Reference:      idx2char(unsigned char)
  
  Processing section: .rodata..L.str.2 from pers.o
  
  Processing section: .rodata..L.str.3 from pers.o
  
  Selecting er9x.o to define TimerConfig
      Definition:     TimerConfig
      Pushing section .bss.TimerConfig to worklist [originates from symbol TimerConfig]
  
  Processing section: .bss.TimerConfig from er9x.o
  
  Selecting menus.o to define Xmem
      Definition:     Xmem
      Pushing section .bss.Xmem to worklist [originates from symbol Xmem]
  
  Processing section: .bss.Xmem from menus.o
  
  Selecting er9x.o to define mixaddress(unsigned char)
      Definition:     mixaddress(unsigned char)
      Pushing section .text.mixaddress(unsigned char) to worklist [originates from symbol mixaddress(unsigned char)]
  
  Processing section: .text.mixaddress(unsigned char) from er9x.o
      Load REL relocations for .text.mixaddress(unsigned char) (er9x.o)
  
  Selecting audio.o to define on_voice_cb(unsigned char*, unsigned char)
      Definition:     on_voice_cb(unsigned char*, unsigned char)
      Pushing section .text.on_voice_cb(unsigned char*, unsigned char) to worklist [originates from symbol on_voice_cb(unsigned char*, unsigned char)]
  
  Processing section: .text.on_voice_cb(unsigned char*, unsigned char) from audio.o
      Load REL relocations for .text.on_voice_cb(unsigned char*, unsigned char) (audio.o)
      Local section:  .bss.wait_fin_count from audio.o using relocation R_ARM_ABS32
      Reference:      Voice
  
  Processing section: .bss.wait_fin_count from audio.o
  
  Selecting audio.o to define Voice
      Definition:     Voice
      Pushing section .bss.Voice to worklist [originates from symbol Voice]
  
  Processing section: .bss.Voice from audio.o
  
  Selecting menus.o to define perOutPhase(short*, unsigned char)
      Definition:     perOutPhase(short*, unsigned char)
      Pushing section .text.perOutPhase(short*, unsigned char) to worklist [originates from symbol perOutPhase(short*, unsigned char)]
  
  Processing section: .text.perOutPhase(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOutPhase(short*, unsigned char) (menus.o)
      Reference:      getFlightPhase()
      Reference:      perOut(short*, unsigned char)
      Local section:  .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o using relocation R_ARM_ABS32
      Reference:      Fade
      Reference:      tick10ms
  
  Processing section: .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
  
  Selecting menus.o to define Fade
      Definition:     Fade
      Pushing section .bss.Fade to worklist [originates from symbol Fade]
  
  Processing section: .bss.Fade from menus.o
  
  Selecting menus.o to define resetTimer1()
      Definition:     resetTimer1()
      Pushing section .text.resetTimer1() to worklist [originates from symbol resetTimer1()]
  
  Processing section: .text.resetTimer1() from menus.o
      Load REL relocations for .text.resetTimer1() (menus.o)
      Reference:      resetTimern(unsigned char)
      Reference:      TimeGlobals
  
  Selecting menus.o to define TimeGlobals
      Definition:     TimeGlobals
      Pushing section .bss.TimeGlobals to worklist [originates from symbol TimeGlobals]
  
  Processing section: .bss.TimeGlobals from menus.o
  
  Selecting menus.o to define resetTimer2()
      Definition:     resetTimer2()
      Pushing section .text.resetTimer2() to worklist [originates from symbol resetTimer2()]
  
  Processing section: .text.resetTimer2() from menus.o
      Load REL relocations for .text.resetTimer2() (menus.o)
  
  Selecting menus.o to define resetTimern(unsigned char)
      Definition:     resetTimern(unsigned char)
      Pushing section .text.resetTimern(unsigned char) to worklist [originates from symbol resetTimern(unsigned char)]
  
  Processing section: .text.resetTimern(unsigned char) from menus.o
      Load REL relocations for .text.resetTimern(unsigned char) (menus.o)
      Reference:      s_timer
  
  Selecting pulses.o to define startPulses()
      Definition:     startPulses()
      Pushing section .text.startPulses() to worklist [originates from symbol startPulses()]
  
  Processing section: .text.startPulses() from pulses.o
      Load REL relocations for .text.startPulses() (pulses.o)
  
  Selecting lcd.o to define lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  
  Selecting lcd.o to define lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Definition:     lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Pushing section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) to worklist [originates from symbol lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)]
  
  Processing section: .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd.o)
      Reference:      DisplayBuf
      Local section:  .rodata.font from lcd.o using relocation R_ARM_ABS32
      Local section:  .rodata.font_dblsize from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.font from lcd.o
  
  Processing section: .rodata.font_dblsize from lcd.o
  
  Selecting lcd.o to define DisplayBuf
      Definition:     DisplayBuf
      Pushing section .bss.DisplayBuf to worklist [originates from symbol DisplayBuf]
  
  Processing section: .bss.DisplayBuf from lcd.o
  
  Selecting er9x.o to define mainSequence()
      Definition:     mainSequence()
      Pushing section .text.mainSequence() to worklist [originates from symbol mainSequence()]
  
  Processing section: .text.mainSequence() from er9x.o
      Load REL relocations for .text.mainSequence() (er9x.o)
      Reference:      timer()
      Reference:      trace()
      Reference:      eeCheck(bool)
      Reference:      menuPressed()
      Reference:      getTrimFlightPhase(unsigned char, unsigned char)
      Reference:      getTrimValue(unsigned char, unsigned char)
      Reference:      setTrimValue(unsigned char, unsigned char, short)
      Reference:      killEvents(unsigned char)
      Reference:      audioDefevent(unsigned char)
      Reference:      audioEvent(unsigned char, unsigned short)
      Reference:      calcStickScroll(unsigned char)
      Reference:      CalcScaleNest
      Local section:  .bss.perMain()::lastTMR from er9x.o using relocation R_ARM_ABS32
      Reference:      s_noHi
      Reference:      ppmInAvailable
      Local section:  .bss.LongMenuTimer from er9x.o using relocation R_ARM_ABS32
      Reference:      calibratedStick
      Reference:      P1values
      Reference:      scroll_disabled
      Reference:      g_menuStackPtr
      Reference:      PopupData
      Reference:      stickScramble
      Reference:      CurrentVolume
      Reference:      StickScrollAllowed
      Reference:      getGvarSourceValue(unsigned char)
      Reference:      almess(char const*, unsigned char)
      Weak reference: keyDown()
      Reference:      voice_numeric(short, unsigned char, unsigned char)
      Reference:      getSwitch00(signed char)
      Reference:      processVoiceAlarms()
      Local section:  .bss.perMain()::repeater from er9x.o using relocation R_ARM_ABS32
      Reference:      AlertMessage
      Local section:  .bss.perMain()::alertKey from er9x.o using relocation R_ARM_ABS32
      Reference:      EnterMenu
      Reference:      Tevent
      Reference:      StepSize
      Local section:  .bss.perMain()::s_batCheck from er9x.o using relocation R_ARM_ABS32
      Reference:      g_LightOffCounter
      Reference:      g_latency
      Local section:  .bss.mainSequence()::timer from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.csTypeTable from er9x.o using relocation R_ARM_ABS32
      Reference:      CsTimer
      Reference:      Last_switch
  
  Processing section: .bss.perMain()::lastTMR from er9x.o
  
  Processing section: .bss.LongMenuTimer from er9x.o
  
  Processing section: .bss.perMain()::repeater from er9x.o
  
  Processing section: .bss.perMain()::alertKey from er9x.o
  
  Processing section: .bss.perMain()::s_batCheck from er9x.o
  
  Processing section: .bss.mainSequence()::timer from er9x.o
  
  Processing section: .rodata.csTypeTable from er9x.o
  
  Selecting er9x.o to define AlertMessage
      Definition:     AlertMessage
      Pushing section .bss.AlertMessage to worklist [originates from symbol AlertMessage]
  
  Processing section: .bss.AlertMessage from er9x.o
  
  Selecting menus.o to define CalcScaleNest
      Definition:     CalcScaleNest
      Pushing section .bss.CalcScaleNest to worklist [originates from symbol CalcScaleNest]
  
  Processing section: .bss.CalcScaleNest from menus.o
  
  Selecting er9x.o to define CsTimer
      Definition:     CsTimer
      Pushing section .bss.CsTimer to worklist [originates from symbol CsTimer]
  
  Processing section: .bss.CsTimer from er9x.o
  
  Selecting er9x.o to define CurrentVolume
      Definition:     CurrentVolume
      Pushing section .bss.CurrentVolume to worklist [originates from symbol CurrentVolume]
  
  Processing section: .bss.CurrentVolume from er9x.o
  
  Selecting er9x.o to define EnterMenu
      Definition:     EnterMenu
      Pushing section .bss.EnterMenu to worklist [originates from symbol EnterMenu]
  
  Processing section: .bss.EnterMenu from er9x.o
  
  Selecting er9x.o to define Last_switch
      Definition:     Last_switch
      Pushing section .bss.Last_switch to worklist [originates from symbol Last_switch]
  
  Processing section: .bss.Last_switch from er9x.o
  
  Selecting er9x.o to define P1values
      Definition:     P1values
      Pushing section .bss.P1values to worklist [originates from symbol P1values]
  
  Processing section: .bss.P1values from er9x.o
  
  Selecting menus.o to define PopupData
      Definition:     PopupData
      Pushing section .bss.PopupData to worklist [originates from symbol PopupData]
  
  Processing section: .bss.PopupData from menus.o
  
  Selecting er9x.o to define StepSize
      Definition:     StepSize
      Pushing section .bss.StepSize to worklist [originates from symbol StepSize]
  
  Processing section: .bss.StepSize from er9x.o
  
  Selecting er9x.o to define StickScrollAllowed
      Definition:     StickScrollAllowed
      Pushing section .bss.StickScrollAllowed to worklist [originates from symbol StickScrollAllowed]
  
  Processing section: .bss.StickScrollAllowed from er9x.o
  
  Selecting er9x.o to define Tevent
      Definition:     Tevent
      Pushing section .bss.Tevent to worklist [originates from symbol Tevent]
  
  Processing section: .bss.Tevent from er9x.o
  
  Selecting audio.o to define audioEvent(unsigned char, unsigned short)
      Definition:     audioEvent(unsigned char, unsigned short)
      Pushing section .text.audioEvent(unsigned char, unsigned short) to worklist [originates from symbol audioEvent(unsigned char, unsigned short)]
  
  Processing section: .text.audioEvent(unsigned char, unsigned short) from audio.o
      Load REL relocations for .text.audioEvent(unsigned char, unsigned short) (audio.o)
      Reference:      audioQueue::event(unsigned char, unsigned char)
  
  Selecting drivers.o to define killEvents(unsigned char)
      Definition:     killEvents(unsigned char)
      Pushing section .text.killEvents(unsigned char) to worklist [originates from symbol killEvents(unsigned char)]
  
  Processing section: .text.killEvents(unsigned char) from drivers.o
      Load REL relocations for .text.killEvents(unsigned char) (drivers.o)
  
  Selecting er9x.o to define getSwitch00(signed char)
      Definition:     getSwitch00(signed char)
      Pushing section .text.getSwitch00(signed char) to worklist [originates from symbol getSwitch00(signed char)]
  
  Processing section: .text.getSwitch00(signed char) from er9x.o
      Load REL relocations for .text.getSwitch00(signed char) (er9x.o)
      Reference:      getSwitch(signed char, bool, unsigned char)
  
  Selecting drivers.o to define menuPressed()
      Definition:     menuPressed()
      Pushing section .text.menuPressed() to worklist [originates from symbol menuPressed()]
  
  Processing section: .text.menuPressed() from drivers.o
      Load REL relocations for .text.menuPressed() (drivers.o)
  
  Selecting er9x.o to define getTrimValue(unsigned char, unsigned char)
      Definition:     getTrimValue(unsigned char, unsigned char)
      Pushing section .text.getTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimValue(unsigned char, unsigned char) (er9x.o)
      Reference:      getRawTrimValue(unsigned char, unsigned char)
  
  Selecting er9x.o to define modeFixValue(unsigned char)
      Definition:     modeFixValue(unsigned char)
      Pushing section .text.modeFixValue(unsigned char) to worklist [originates from symbol modeFixValue(unsigned char)]
  
  Processing section: .text.modeFixValue(unsigned char) from er9x.o
      Load REL relocations for .text.modeFixValue(unsigned char) (er9x.o)
  
  Selecting er9x.o to define setTrimValue(unsigned char, unsigned char, short)
      Definition:     setTrimValue(unsigned char, unsigned char, short)
      Pushing section .text.setTrimValue(unsigned char, unsigned char, short) to worklist [originates from symbol setTrimValue(unsigned char, unsigned char, short)]
  
  Processing section: .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Load REL relocations for .text.setTrimValue(unsigned char, unsigned char, short) (er9x.o)
  
  Selecting audio.o to define audioDefevent(unsigned char)
      Definition:     audioDefevent(unsigned char)
      Pushing section .text.audioDefevent(unsigned char) to worklist [originates from symbol audioDefevent(unsigned char)]
  
  Processing section: .text.audioDefevent(unsigned char) from audio.o
      Load REL relocations for .text.audioDefevent(unsigned char) (audio.o)
  
  Selecting er9x.o to define checkSwitches()
      Definition:     checkSwitches()
      Pushing section .text.checkSwitches() to worklist [originates from symbol checkSwitches()]
  
  Processing section: .text.checkSwitches() from er9x.o
      Load REL relocations for .text.checkSwitches() (er9x.o)
      Reference:      getCurrentSwitchStates()
      Reference:      putWarnSwitch(unsigned char, unsigned char)
      Weak reference: keyDown()
      Local section:  .rodata..L.str.6 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.6 from er9x.o
  
  Selecting pers.o to define eeReadGeneral()
      Definition:     eeReadGeneral()
      Pushing section .text.eeReadGeneral() to worklist [originates from symbol eeReadGeneral()]
  
  Processing section: .text.eeReadGeneral() from pers.o
      Load REL relocations for .text.eeReadGeneral() (pers.o)
      Reference:      EeFsOpen()
      Reference:      EeFsck()
      Reference:      EFile::openRd(unsigned char)
      Reference:      __aeabi_memclr
      Reference:      EFile::readRlc(unsigned char*, unsigned short)
      Reference:      evalChkSum()
      Reference:      theFile
  
  Selecting pers.o to define evalChkSum()
      Definition:     evalChkSum()
      Pushing section .text.evalChkSum() to worklist [originates from symbol evalChkSum()]
  
  Processing section: .text.evalChkSum() from pers.o
      Load REL relocations for .text.evalChkSum() (pers.o)
  
  Selecting er9x.o to define putWarnSwitch(unsigned char, unsigned char)
      Definition:     putWarnSwitch(unsigned char, unsigned char)
      Pushing section .text.putWarnSwitch(unsigned char, unsigned char) to worklist [originates from symbol putWarnSwitch(unsigned char, unsigned char)]
  
  Processing section: .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putWarnSwitch(unsigned char, unsigned char) (er9x.o)
      Reference:      lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Reference:      Str_Switches
  
  Selecting er9x.o to define Str_Switches
      Definition:     Str_Switches
      Pushing section .rodata.Str_Switches to worklist [originates from symbol Str_Switches]
  
  Processing section: .rodata.Str_Switches from er9x.o
  
  Selecting lcd.o to define refreshDiplay()
      Definition:     refreshDiplay()
      Pushing section .text.refreshDiplay() to worklist [originates from symbol refreshDiplay()]
  
  Processing section: .text.refreshDiplay() from lcd.o
      Load REL relocations for .text.refreshDiplay() (lcd.o)
      Reference:      lcd_hline(unsigned char, unsigned char, signed char)
      Reference:      rs_1
      Reference:      LCD_DATA
      Reference:      rd_1
      Reference:      rd_0
      Reference:      EepromActive
      Reference:      LcdLock
      Local section:  .text.lcdSendCtl(unsigned char) from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .text.lcdSendCtl(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSendCtl(unsigned char) (lcd.o)
      Reference:      rs_0
  
  Selecting lcd.o to define EepromActive
      Definition:     EepromActive
      Pushing section .bss.EepromActive to worklist [originates from symbol EepromActive]
  
  Processing section: .bss.EepromActive from lcd.o
  
  Selecting BoardI6.o to define LCD_DATA
      Definition:     LCD_DATA
      Pushing section .text.LCD_DATA to worklist [originates from symbol LCD_DATA]
  
  Processing section: .text.LCD_DATA from BoardI6.o
  
  Selecting lcd.o to define LcdLock
      Definition:     LcdLock
      Pushing section .bss.LcdLock to worklist [originates from symbol LcdLock]
  
  Processing section: .bss.LcdLock from lcd.o
  
  Selecting audio.o to define voice_numeric(short, unsigned char, unsigned char)
      Definition:     voice_numeric(short, unsigned char, unsigned char)
      Pushing section .text.voice_numeric(short, unsigned char, unsigned char) to worklist [originates from symbol voice_numeric(short, unsigned char, unsigned char)]
  
  Processing section: .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.voice_numeric(short, unsigned char, unsigned char) (audio.o)
      Reference:      putVoiceQueue(unsigned char)
      Reference:      putVoiceQueueLong(unsigned short)
      Reference:      div
      Reference:      __aeabi_idivmod
  
  Selecting audio.o to define putVoiceQueue(unsigned char)
      Definition:     putVoiceQueue(unsigned char)
      Pushing section .text.putVoiceQueue(unsigned char) to worklist [originates from symbol putVoiceQueue(unsigned char)]
  
  Processing section: .text.putVoiceQueue(unsigned char) from audio.o
      Load REL relocations for .text.putVoiceQueue(unsigned char) (audio.o)
  
  Selecting pers.o to define eeWaitComplete()
      Definition:     eeWaitComplete()
      Pushing section .text.eeWaitComplete() to worklist [originates from symbol eeWaitComplete()]
  
  Processing section: .text.eeWaitComplete() from pers.o
      Load REL relocations for .text.eeWaitComplete() (pers.o)
      Local section:  .bss.s_eeDirtyMsk from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeDirtyMsk from pers.o
  
  Selecting pers.o to define eeWriteGeneral()
      Definition:     eeWriteGeneral()
      Pushing section .text.eeWriteGeneral() to worklist [originates from symbol eeWriteGeneral()]
  
  Processing section: .text.eeWriteGeneral() from pers.o
      Load REL relocations for .text.eeWriteGeneral() (pers.o)
      Reference:      alertx(char const*, bool)
      Reference:      message(char const*)
      Reference:      EeFsFormat()
      Reference:      EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Local section:  .rodata..L.str.4 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from pers.o
  
  Processing section: .rodata..L.str.5 from pers.o
  
  Processing section: .rodata..L.str.6 from pers.o
  
  Selecting file.o to define EeFsFormat()
      Definition:     EeFsFormat()
      Pushing section .text.EeFsFormat() to worklist [originates from symbol EeFsFormat()]
  
  Processing section: .text.EeFsFormat() from file.o
      Load REL relocations for .text.EeFsFormat() (file.o)
      Reference:      __aeabi_memclr4
      Local section:  .text.EeFsSetLink(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
      Local section:  .text.EeFsFlush() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsSetLink(unsigned char, unsigned char) (file.o)
      Reference:      eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  
  Processing section: .text.EeFsFlush() from file.o
      Load REL relocations for .text.EeFsFlush() (file.o)
  
  Selecting er9x.o to define getFlightPhase()
      Definition:     getFlightPhase()
      Pushing section .text.getFlightPhase() to worklist [originates from symbol getFlightPhase()]
  
  Processing section: .text.getFlightPhase() from er9x.o
      Load REL relocations for .text.getFlightPhase() (er9x.o)
  
  Selecting lcd.o to define lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_puts_Pleft(unsigned char, char const*)
      Definition:     lcd_puts_Pleft(unsigned char, char const*)
      Pushing section .text.lcd_puts_Pleft(unsigned char, char const*) to worklist [originates from symbol lcd_puts_Pleft(unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_Pleft(unsigned char, char const*) (lcd.o)
      Reference:      lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  
  Selecting lcd.o to define lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting er9x.o to define stickMoveValue()
      Definition:     stickMoveValue()
      Pushing section .text.stickMoveValue() to worklist [originates from symbol stickMoveValue()]
  
  Processing section: .text.stickMoveValue() from er9x.o
      Load REL relocations for .text.stickMoveValue() (er9x.o)
      Reference:      anaIn(unsigned char)
  
  Selecting er9x.o to define calcStickScroll(unsigned char)
      Definition:     calcStickScroll(unsigned char)
      Pushing section .text.calcStickScroll(unsigned char) to worklist [originates from symbol calcStickScroll(unsigned char)]
  
  Processing section: .text.calcStickScroll(unsigned char) from er9x.o
      Load REL relocations for .text.calcStickScroll(unsigned char) (er9x.o)
      Reference:      phyStick
      Local section:  .rodata.rate from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.rate from er9x.o
  
  Selecting drivers.o to define eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Definition:     eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Pushing section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) to worklist [originates from symbol eeWriteBlockCmp(void const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (drivers.o)
      Reference:      eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Reference:      ee_waite()
      Reference:      i2c_master
      Reference:      i2c_buffer
  
  Selecting er9x.o to define getRawTrimValue(unsigned char, unsigned char)
      Definition:     getRawTrimValue(unsigned char, unsigned char)
      Pushing section .text.getRawTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getRawTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getRawTrimValue(unsigned char, unsigned char) (er9x.o)
  
  Selecting BoardI6.o to define serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Definition:     serialVoiceInit(void (*)(unsigned char*, unsigned char))
      Pushing section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) to worklist [originates from symbol serialVoiceInit(void (*)(unsigned char*, unsigned char))]
  
  Processing section: .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o
      Load REL relocations for .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) (BoardI6.o)
  
  Selecting er9x.o to define doBackLightVoice(unsigned char)
      Definition:     doBackLightVoice(unsigned char)
      Pushing section .text.doBackLightVoice(unsigned char) to worklist [originates from symbol doBackLightVoice(unsigned char)]
  
  Processing section: .text.doBackLightVoice(unsigned char) from er9x.o
      Load REL relocations for .text.doBackLightVoice(unsigned char) (er9x.o)
  
  Selecting pers.o to define eeGeneralDefault()
      Definition:     eeGeneralDefault()
      Pushing section .text.eeGeneralDefault() to worklist [originates from symbol eeGeneralDefault()]
  
  Processing section: .text.eeGeneralDefault() from pers.o
      Load REL relocations for .text.eeGeneralDefault() (pers.o)
      Reference:      setNameP(char*, char const*)
      Local section:  .rodata..L.str from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from pers.o
  
  Selecting drivers.o to define eeprom_read_block(void*, void const*, unsigned int)
      Definition:     eeprom_read_block(void*, void const*, unsigned int)
      Pushing section .text.eeprom_read_block(void*, void const*, unsigned int) to worklist [originates from symbol eeprom_read_block(void*, void const*, unsigned int)]
  
  Processing section: .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_read_block(void*, void const*, unsigned int) (drivers.o)
  
  Selecting pers.o to define modelDefaultWrite(unsigned char)
      Definition:     modelDefaultWrite(unsigned char)
      Pushing section .text.modelDefaultWrite(unsigned char) to worklist [originates from symbol modelDefaultWrite(unsigned char)]
  
  Processing section: .text.modelDefaultWrite(unsigned char) from pers.o
      Load REL relocations for .text.modelDefaultWrite(unsigned char) (pers.o)
      Reference:      applyTemplate()
      Reference:      modelSave(unsigned char)
      Local section:  .rodata..L.str.1 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from pers.o
  
  Selecting templates.o to define applyTemplate()
      Definition:     applyTemplate()
      Pushing section .text.applyTemplate() to worklist [originates from symbol applyTemplate()]
  
  Processing section: .text.applyTemplate() from templates.o
      Load REL relocations for .text.applyTemplate() (templates.o)
      Reference:      bchout_ar
      Reference:      setMix(unsigned char, unsigned char)
  
  Selecting audio.o to define putVoiceQueueLong(unsigned short)
      Definition:     putVoiceQueueLong(unsigned short)
      Pushing section .text.putVoiceQueueLong(unsigned short) to worklist [originates from symbol putVoiceQueueLong(unsigned short)]
  
  Processing section: .text.putVoiceQueueLong(unsigned short) from audio.o
      Load REL relocations for .text.putVoiceQueueLong(unsigned short) (audio.o)
  
  Selecting audio.o to define audioVoiceDefevent(unsigned char, unsigned char)
      Definition:     audioVoiceDefevent(unsigned char, unsigned char)
      Pushing section .text.audioVoiceDefevent(unsigned char, unsigned char) to worklist [originates from symbol audioVoiceDefevent(unsigned char, unsigned char)]
  
  Processing section: .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioVoiceDefevent(unsigned char, unsigned char) (audio.o)
  
  Selecting er9x.o to define getGvarSourceValue(unsigned char)
      Definition:     getGvarSourceValue(unsigned char)
      Pushing section .text.getGvarSourceValue(unsigned char) to worklist [originates from symbol getGvarSourceValue(unsigned char)]
  
  Processing section: .text.getGvarSourceValue(unsigned char) from er9x.o
      Load REL relocations for .text.getGvarSourceValue(unsigned char) (er9x.o)
      Reference:      Ex_chans
  
  Selecting menus.o to define Ex_chans
      Definition:     Ex_chans
      Pushing section .bss.Ex_chans to worklist [originates from symbol Ex_chans]
  
  Processing section: .bss.Ex_chans from menus.o
  
  Selecting er9x.o to define getTrimFlightPhase(unsigned char, unsigned char)
      Definition:     getTrimFlightPhase(unsigned char, unsigned char)
      Pushing section .text.getTrimFlightPhase(unsigned char, unsigned char) to worklist [originates from symbol getTrimFlightPhase(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimFlightPhase(unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define processVoiceAlarms()
      Definition:     processVoiceAlarms()
      Pushing section .text.processVoiceAlarms() to worklist [originates from symbol processVoiceAlarms()]
  
  Processing section: .text.processVoiceAlarms() from er9x.o
      Load REL relocations for .text.processVoiceAlarms() (er9x.o)
      Reference:      procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  
  Selecting er9x.o to define procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Definition:     procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Pushing section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) to worklist [originates from symbol procOneVoiceAlarm(t_voiceAlarm*, unsigned char)]
  
  Processing section: .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Load REL relocations for .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (er9x.o)
      Reference:      getValue(unsigned char)
      Reference:      switchPosition(unsigned char)
      Reference:      telemItemValid(unsigned char)
      Reference:      doVoiceAlarmSource(t_voiceAlarm*)
      Reference:      calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Reference:      Nvs_timer
      Reference:      Nvs_state
  
  Selecting er9x.o to define Nvs_state
      Definition:     Nvs_state
      Pushing section .bss.Nvs_state to worklist [originates from symbol Nvs_state]
  
  Processing section: .bss.Nvs_state from er9x.o
  
  Selecting er9x.o to define Nvs_timer
      Definition:     Nvs_timer
      Pushing section .bss.Nvs_timer to worklist [originates from symbol Nvs_timer]
  
  Processing section: .bss.Nvs_timer from er9x.o
  
  Selecting menus.o to define calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Definition:     calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Pushing section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) to worklist [originates from symbol calc_scaler(unsigned char, unsigned char*, unsigned char*)]
  
  Processing section: .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Load REL relocations for .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (menus.o)
  
  Selecting drivers.o to define switchPosition(unsigned char)
      Definition:     switchPosition(unsigned char)
      Pushing section .text.switchPosition(unsigned char) to worklist [originates from symbol switchPosition(unsigned char)]
  
  Processing section: .text.switchPosition(unsigned char) from drivers.o
      Load REL relocations for .text.switchPosition(unsigned char) (drivers.o)
      Reference:      keyState(EnumKeys)
  
  Selecting menus.o to define telemItemValid(unsigned char)
      Definition:     telemItemValid(unsigned char)
      Pushing section .text.telemItemValid(unsigned char) to worklist [originates from symbol telemItemValid(unsigned char)]
  
  Processing section: .text.telemItemValid(unsigned char) from menus.o
  
  Selecting er9x.o to define doVoiceAlarmSource(t_voiceAlarm*)
      Definition:     doVoiceAlarmSource(t_voiceAlarm*)
      Pushing section .text.doVoiceAlarmSource(t_voiceAlarm*) to worklist [originates from symbol doVoiceAlarmSource(t_voiceAlarm*)]
  
  Processing section: .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Load REL relocations for .text.doVoiceAlarmSource(t_voiceAlarm*) (er9x.o)
      Reference:      voice_telem_item(unsigned char)
  
  Selecting menus.o to define voice_telem_item(unsigned char)
      Definition:     voice_telem_item(unsigned char)
      Pushing section .text.voice_telem_item(unsigned char) to worklist [originates from symbol voice_telem_item(unsigned char)]
  
  Processing section: .text.voice_telem_item(unsigned char) from menus.o
      Load REL relocations for .text.voice_telem_item(unsigned char) (menus.o)
      Reference:      get_telemetry_value(unsigned char)
      Reference:      voiceMinutes(short)
      Reference:      TelemIndex
      Local section:  .rodata.UnitsVoice from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsVoice from menus.o
  
  Selecting menus.o to define TelemIndex
      Definition:     TelemIndex
      Pushing section .rodata.TelemIndex to worklist [originates from symbol TelemIndex]
  
  Processing section: .rodata.TelemIndex from menus.o
  
  Selecting menus.o to define voiceMinutes(short)
      Definition:     voiceMinutes(short)
      Pushing section .text.voiceMinutes(short) to worklist [originates from symbol voiceMinutes(short)]
  
  Processing section: .text.voiceMinutes(short) from menus.o
      Load REL relocations for .text.voiceMinutes(short) (menus.o)
  
  Selecting audio.o to define putVoiceQueueUpper(unsigned char)
      Definition:     putVoiceQueueUpper(unsigned char)
      Pushing section .text.putVoiceQueueUpper(unsigned char) to worklist [originates from symbol putVoiceQueueUpper(unsigned char)]
  
  Processing section: .text.putVoiceQueueUpper(unsigned char) from audio.o
      Load REL relocations for .text.putVoiceQueueUpper(unsigned char) (audio.o)
  
  Selecting menus.o to define get_telemetry_value(unsigned char)
      Definition:     get_telemetry_value(unsigned char)
      Pushing section .text.get_telemetry_value(unsigned char) to worklist [originates from symbol get_telemetry_value(unsigned char)]
  
  Processing section: .text.get_telemetry_value(unsigned char) from menus.o
      Load REL relocations for .text.get_telemetry_value(unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcModelSelect(unsigned char)
      Definition:     menuProcModelSelect(unsigned char)
      Pushing section .text.menuProcModelSelect(unsigned char) to worklist [originates from symbol menuProcModelSelect(unsigned char)]
  
  Processing section: .text.menuProcModelSelect(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelSelect(unsigned char) (menus.o)
      Reference:      TITLEP(char const*)
      Reference:      MState2::check_columns(unsigned char, unsigned char)
      Reference:      lcd_outdez(unsigned char, unsigned char, short)
      Reference:      lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_putc(unsigned char, unsigned char, char)
      Reference:      eeLoadModelName(unsigned char, char*, unsigned char)
      Reference:      eeModelExists(unsigned char)
      Reference:      doPopup(char const*, unsigned char, unsigned char)
      Reference:      chainMenu(void (*)(unsigned char))
      Reference:      pushMenu(void (*)(unsigned char))
      Reference:      popMenu(bool)
      Reference:      EFile::swap(unsigned char, unsigned char)
      Local section:  .rodata..L.str.30 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.31 from menus.o using relocation R_ARM_ABS32
      Reference:      DupIfNonzero
      Local section:  .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o using relocation R_ARM_ABS32
      Reference:      s_pgOfs
      Local section:  .rodata.ModelPopList from menus.o using relocation R_ARM_ABS32
      Reference:      DupSub
      Reference:      menuDeleteDupModel(unsigned char)
      Reference:      menuProcModelIndex(unsigned char)
      Reference:      s_editMode
  
  Processing section: .rodata..L.str.30 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.31 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
  
  Processing section: .rodata.ModelPopList from menus.o
  
  Selecting menus.o to define DupIfNonzero
      Definition:     DupIfNonzero
      Pushing section .bss.DupIfNonzero to worklist [originates from symbol DupIfNonzero]
  
  Processing section: .bss.DupIfNonzero from menus.o
  
  Selecting menus.o to define DupSub
      Definition:     DupSub
      Pushing section .bss.DupSub to worklist [originates from symbol DupSub]
  
  Processing section: .bss.DupSub from menus.o
  
  Selecting lcd.o to define lcd_outdez(unsigned char, unsigned char, short)
      Definition:     lcd_outdez(unsigned char, unsigned char, short)
      Pushing section .text.lcd_outdez(unsigned char, unsigned char, short) to worklist [originates from symbol lcd_outdez(unsigned char, unsigned char, short)]
  
  Processing section: .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Load REL relocations for .text.lcd_outdez(unsigned char, unsigned char, short) (lcd.o)
      Reference:      lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  
  Selecting lcd.o to define lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  
  Selecting pers.o to define eeModelExists(unsigned char)
      Definition:     eeModelExists(unsigned char)
      Pushing section .text.eeModelExists(unsigned char) to worklist [originates from symbol eeModelExists(unsigned char)]
  
  Processing section: .text.eeModelExists(unsigned char) from pers.o
      Load REL relocations for .text.eeModelExists(unsigned char) (pers.o)
      Reference:      EFile::exists(unsigned char)
  
  Selecting lcd.o to define lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Definition:     lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
      Definition:     lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
      Pushing section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) to worklist [originates from symbol lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)]
  
  Processing section: .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (lcd.o)
      Reference:      lcd_plot(unsigned char, unsigned char)
      Reference:      lcd_vline(unsigned char, unsigned char, signed char)
      Reference:      Lcd_lastPos
  
  Selecting lcd.o to define Lcd_lastPos
      Definition:     Lcd_lastPos
      Pushing section .bss.Lcd_lastPos to worklist [originates from symbol Lcd_lastPos]
  
  Processing section: .bss.Lcd_lastPos from lcd.o
  
  Selecting pers.o to define eeLoadModelName(unsigned char, char*, unsigned char)
      Definition:     eeLoadModelName(unsigned char, char*, unsigned char)
      Pushing section .text.eeLoadModelName(unsigned char, char*, unsigned char) to worklist [originates from symbol eeLoadModelName(unsigned char, char*, unsigned char)]
  
  Processing section: .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelName(unsigned char, char*, unsigned char) (pers.o)
      Reference:      EFile::size()
  
  Selecting menus.o to define menuDeleteDupModel(unsigned char)
      Definition:     menuDeleteDupModel(unsigned char)
      Pushing section .text.menuDeleteDupModel(unsigned char) to worklist [originates from symbol menuDeleteDupModel(unsigned char)]
  
  Processing section: .text.menuDeleteDupModel(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteDupModel(unsigned char) (menus.o)
      Reference:      yesNoMenuExit(unsigned char, char const*)
      Reference:      eeDuplicateModel(unsigned char)
      Reference:      EFile::rm(unsigned char)
      Local section:  .rodata..L.str.22 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.21 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.23 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.22 from menus.o
  
  Processing section: .rodata..L.str.21 from menus.o
  
  Processing section: .rodata..L.str.23 from menus.o
  
  Selecting menus.o to define yesNoMenuExit(unsigned char, char const*)
      Definition:     yesNoMenuExit(unsigned char, char const*)
      Pushing section .text.yesNoMenuExit(unsigned char, char const*) to worklist [originates from symbol yesNoMenuExit(unsigned char, char const*)]
  
  Processing section: .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Load REL relocations for .text.yesNoMenuExit(unsigned char, char const*) (menus.o)
      Local section:  .rodata..L.str.17 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.17 from menus.o
  
  Selecting pers.o to define eeDuplicateModel(unsigned char)
      Definition:     eeDuplicateModel(unsigned char)
      Pushing section .text.eeDuplicateModel(unsigned char) to worklist [originates from symbol eeDuplicateModel(unsigned char)]
  
  Processing section: .text.eeDuplicateModel(unsigned char) from pers.o
      Load REL relocations for .text.eeDuplicateModel(unsigned char) (pers.o)
      Reference:      EFile::create(unsigned char, unsigned char, unsigned short)
      Reference:      EFile::read(unsigned char*, unsigned short)
      Reference:      EFile::write(unsigned char*, unsigned char)
      Reference:      EFile::closeTrunc()
  
  Selecting menus.o to define menuProcModelIndex(unsigned char)
      Definition:     menuProcModelIndex(unsigned char)
      Pushing section .text.menuProcModelIndex(unsigned char) to worklist [originates from symbol menuProcModelIndex(unsigned char)]
  
  Processing section: .text.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelIndex(unsigned char) (menus.o)
      Local section:  .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      EditType
      Local section:  .bss.menuProcModelIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.IlinesCount from menus.o using relocation R_ARM_ABS32
      Reference:      MenuControl
      Local section:  .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Main_Popup from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Reference:      checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Reference:      checkIncDec_0(signed char, signed char)
      Reference:      evalOffset(signed char)
      Reference:      putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      checkIncDec_i8(signed char, signed char, signed char)
      Reference:      displayNext()
      Reference:      putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Local section:  .rodata.Str_heli_setup from menus.o using relocation R_ARM_ABS32
      Reference:      InverseBlink
      Local section:  .rodata..L.str.110 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.111 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.120 from menus.o using relocation R_ARM_ABS32
      Reference:      g_posHorz
      Reference:      putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Local section:  .bss.Columns from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.121 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Timer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_limits from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Expo from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_expoChan from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.117 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.118 from menus.o using relocation R_ARM_ABS32
      Reference:      s_editing
      Reference:      editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Reference:      putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Reference:      putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Reference:      putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Reference:      setStickCenter()
      Local section:  .rodata.Str_General from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.115 from menus.o using relocation R_ARM_ABS32
      Reference:      hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Local section:  .rodata..L.str.116 from menus.o using relocation R_ARM_ABS32
      Reference:      checkIncDec16(short, short, short, unsigned char)
      Reference:      lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      checkIncDec(signed char, signed char, signed char, unsigned char)
      Reference:      get_dr_state(unsigned char)
      Reference:      IS_EXPO_THROTTLE(unsigned char)
      Reference:      drawFunction(unsigned char, unsigned char)
      Reference:      calcExpo(unsigned char, short)
      Local section:  .rodata..L.str.119 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.107 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.108 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.109 from menus.o using relocation R_ARM_ABS32
      Reference:      throttleReversed()
      Local section:  .rodata..L.str.112 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.113 from menus.o using relocation R_ARM_ABS32
      Reference:      editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      plotType
      Local section:  .rodata..L.str.105 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.106 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.102 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.103 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_TRE012AG from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.104 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Load REL relocations for .text.indexProcess(unsigned char, MState2*, unsigned char) (menus.o)
  
  Processing section: .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_puts_P(unsigned char, unsigned char, char const*)
      Reference:      lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Processing section: .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
  
  Processing section: .bss.IlinesCount from menus.o
  
  Processing section: .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .rodata..Lswitch.table.menuProcModelIndex(unsigned char) (menus.o)
      Reference:      menuProcMix(unsigned char)
      Reference:      menuModelPhases(unsigned char)
      Reference:      menuProcCurve(unsigned char)
      Reference:      menuProcGlobals(unsigned char)
      Reference:      menuProcTelemetry(unsigned char)
      Reference:      menuProcVoiceAlarm(unsigned char)
      Reference:      menuProcProtocol(unsigned char)
  
  Processing section: .rodata.Str_Main_Popup from menus.o
  
  Processing section: .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcModelIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_Mixer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Modes from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curves from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitches from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Safety from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Globals from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Telemetry from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.81 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Protocol from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_heli_setup from menus.o
  
  Processing section: .rodata..L.str.110 from menus.o
  
  Processing section: .rodata..L.str.111 from menus.o
  
  Processing section: .rodata..L.str.120 from menus.o
  
  Processing section: .bss.Columns from menus.o
  
  Processing section: .rodata..L.str.121 from menus.o
  
  Processing section: .rodata.Str_Timer from menus.o
  
  Processing section: .rodata.Str_limits from menus.o
  
  Processing section: .rodata.Str_Expo from menus.o
  
  Processing section: .bss.s_expoChan from menus.o
  
  Processing section: .rodata..L.str.117 from menus.o
  
  Processing section: .rodata.Str_Cswitch from menus.o
  
  Processing section: .rodata..L.str.118 from menus.o
  
  Processing section: .rodata.Str_General from menus.o
  
  Processing section: .rodata..L.str.115 from menus.o
  
  Processing section: .rodata..L.str.116 from menus.o
  
  Processing section: .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.onoffItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.119 from menus.o
  
  Processing section: .rodata..L.str.107 from menus.o
  
  Processing section: .rodata..L.str.108 from menus.o
  
  Processing section: .rodata..L.str.109 from menus.o
  
  Processing section: .rodata..L.str.112 from menus.o
  
  Processing section: .rodata..L.str.113 from menus.o
  
  Processing section: .rodata..L.str.105 from menus.o
  
  Processing section: .rodata..L.str.106 from menus.o
  
  Processing section: .rodata..L.str.102 from menus.o
  
  Processing section: .rodata..L.str.103 from menus.o
  
  Processing section: .rodata.Str_TRE012AG from menus.o
  
  Processing section: .rodata..L.str.104 from menus.o
  
  Processing section: .rodata.Str_Mixer from menus.o
  
  Processing section: .rodata.Str_Modes from menus.o
  
  Processing section: .rodata.Str_Curves from menus.o
  
  Processing section: .rodata.Str_Cswitches from menus.o
  
  Processing section: .rodata.Str_Safety from menus.o
  
  Processing section: .rodata.Str_Globals from menus.o
  
  Processing section: .rodata.Str_Telemetry from menus.o
  
  Processing section: .rodata..L.str.81 from menus.o
  
  Processing section: .rodata.Str_Protocol from menus.o
  
  Selecting menus.o to define EditType
      Definition:     EditType
      Pushing section .bss.EditType to worklist [originates from symbol EditType]
  
  Processing section: .bss.EditType from menus.o
  
  Selecting menus.o to define InverseBlink
      Definition:     InverseBlink
      Pushing section .bss.InverseBlink to worklist [originates from symbol InverseBlink]
  
  Processing section: .bss.InverseBlink from menus.o
  
  Selecting menus.o to define MenuControl
      Definition:     MenuControl
      Pushing section .bss.MenuControl to worklist [originates from symbol MenuControl]
  
  Processing section: .bss.MenuControl from menus.o
  
  Selecting menus.o to define evalOffset(signed char)
      Definition:     evalOffset(signed char)
      Pushing section .text.evalOffset(signed char) to worklist [originates from symbol evalOffset(signed char)]
  
  Processing section: .text.evalOffset(signed char) from menus.o
      Load REL relocations for .text.evalOffset(signed char) (menus.o)
  
  Selecting lcd.o to define lcd_puts_P(unsigned char, unsigned char, char const*)
      Definition:     lcd_puts_P(unsigned char, unsigned char, char const*)
      Pushing section .text.lcd_puts_P(unsigned char, unsigned char, char const*) to worklist [originates from symbol lcd_puts_P(unsigned char, unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd.o)
  
  Selecting er9x.o to define putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      Str_Chans_Gv
      Reference:      Str_telemItems
      Reference:      modi12x3
      Local section:  .rodata.Str_Hyphens from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Hyphens from er9x.o
  
  Selecting menus.o to define Str_Chans_Gv
      Definition:     Str_Chans_Gv
      Pushing section .rodata.Str_Chans_Gv to worklist [originates from symbol Str_Chans_Gv]
  
  Processing section: .rodata.Str_Chans_Gv from menus.o
  
  Selecting menus.o to define Str_telemItems
      Definition:     Str_telemItems
      Pushing section .rodata.Str_telemItems to worklist [originates from symbol Str_telemItems]
  
  Processing section: .rodata.Str_telemItems from menus.o
  
  Selecting er9x.o to define checkIncDec(signed char, signed char, signed char, unsigned char)
      Definition:     checkIncDec(signed char, signed char, signed char, unsigned char)
      Pushing section .text.checkIncDec(signed char, signed char, signed char, unsigned char) to worklist [originates from symbol checkIncDec(signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec(signed char, signed char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define displayNext()
      Definition:     displayNext()
      Pushing section .text.displayNext() to worklist [originates from symbol displayNext()]
  
  Processing section: .text.displayNext() from menus.o
      Load REL relocations for .text.displayNext() (menus.o)
      Local section:  .rodata..L.str.3 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.3 from menus.o
  
  Selecting menus.o to define menuProcMix(unsigned char)
      Definition:     menuProcMix(unsigned char)
      Pushing section .text.menuProcMix(unsigned char) to worklist [originates from symbol menuProcMix(unsigned char)]
  
  Processing section: .text.menuProcMix(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMix(unsigned char) (menus.o)
      Reference:      putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Reference:      gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      reachMixerCountLimit()
      Local section:  .text.insertMix(unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      s_moveMode
      Local section:  .bss.menuProcMix(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      s_mixMaxSel
      Reference:      RotaryState
      Local section:  .bss.s_currMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_moveMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currDestCh from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcMixOne(unsigned char)
      Local section:  .rodata.MixPopList from menus.o using relocation R_ARM_ABS32
      Reference:      mixToDelete
      Reference:      menuDeleteMix(unsigned char)
      Local section:  .rodata..L.str.20 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.insertMix(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.insertMix(unsigned char, unsigned char) (menus.o)
      Reference:      __aeabi_memmove
  
  Processing section: .bss.menuProcMix(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currMixIdx from menus.o
  
  Processing section: .bss.s_moveMixIdx from menus.o
  
  Processing section: .bss.s_currDestCh from menus.o
  
  Processing section: .rodata.MixPopList from menus.o
  
  Processing section: .rodata..L.str.20 from menus.o
  
  Selecting menus.o to define RotaryState
      Definition:     RotaryState
      Pushing section .bss.RotaryState to worklist [originates from symbol RotaryState]
  
  Processing section: .bss.RotaryState from menus.o
  
  Selecting er9x.o to define putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      Curve_Str
      Local section:  .rodata..L.str from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from er9x.o
  
  Selecting menus.o to define Curve_Str
      Definition:     Curve_Str
      Pushing section .rodata.Curve_Str to worklist [originates from symbol Curve_Str]
  
  Processing section: .rodata.Curve_Str from menus.o
  
  Selecting menus.o to define checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Definition:     checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol checkIndexed(unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      EditColumns
  
  Selecting menus.o to define EditColumns
      Definition:     EditColumns
      Pushing section .bss.EditColumns to worklist [originates from symbol EditColumns]
  
  Processing section: .bss.EditColumns from menus.o
  
  Selecting menus.o to define drawFunction(unsigned char, unsigned char)
      Definition:     drawFunction(unsigned char, unsigned char)
      Pushing section .text.drawFunction(unsigned char, unsigned char) to worklist [originates from symbol drawFunction(unsigned char, unsigned char)]
  
  Processing section: .text.drawFunction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.drawFunction(unsigned char, unsigned char) (menus.o)
      Reference:      intpol(short, unsigned char)
      Local section:  .bss.s_curveChan from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_curveChan from menus.o
  
  Selecting menus.o to define editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  
  Selecting menus.o to define get_dr_state(unsigned char)
      Definition:     get_dr_state(unsigned char)
      Pushing section .text.get_dr_state(unsigned char) to worklist [originates from symbol get_dr_state(unsigned char)]
  
  Processing section: .text.get_dr_state(unsigned char) from menus.o
      Load REL relocations for .text.get_dr_state(unsigned char) (menus.o)
  
  Selecting menus.o to define gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Definition:     gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (menus.o)
      Reference:      dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Definition:     putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Pushing section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) to worklist [originates from symbol putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)]
  
  Processing section: .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Load REL relocations for .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (menus.o)
      Local section:  .rodata..L.str.9 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.SW_3_IDX from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.9 from menus.o
  
  Processing section: .rodata.SW_3_IDX from menus.o
  
  Selecting er9x.o to define checkIncDec16(short, short, short, unsigned char)
      Definition:     checkIncDec16(short, short, short, unsigned char)
      Pushing section .text.checkIncDec16(short, short, short, unsigned char) to worklist [originates from symbol checkIncDec16(short, short, short, unsigned char)]
  
  Processing section: .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec16(short, short, short, unsigned char) (er9x.o)
      Reference:      pauseEvents(unsigned char)
  
  Selecting drivers.o to define pauseEvents(unsigned char)
      Definition:     pauseEvents(unsigned char)
      Pushing section .text.pauseEvents(unsigned char) to worklist [originates from symbol pauseEvents(unsigned char)]
  
  Processing section: .text.pauseEvents(unsigned char) from drivers.o
      Load REL relocations for .text.pauseEvents(unsigned char) (drivers.o)
  
  Selecting er9x.o to define checkIncDec_0(signed char, signed char)
      Definition:     checkIncDec_0(signed char, signed char)
      Pushing section .text.checkIncDec_0(signed char, signed char) to worklist [originates from symbol checkIncDec_0(signed char, signed char)]
  
  Processing section: .text.checkIncDec_0(signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_0(signed char, signed char) (er9x.o)
  
  Selecting menus.o to define menuDeleteMix(unsigned char)
      Definition:     menuDeleteMix(unsigned char)
      Pushing section .text.menuDeleteMix(unsigned char) to worklist [originates from symbol menuDeleteMix(unsigned char)]
  
  Processing section: .text.menuDeleteMix(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteMix(unsigned char) (menus.o)
      Reference:      clearMixes()
      Local section:  .rodata..L.str.18 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.19 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.18 from menus.o
  
  Processing section: .rodata..L.str.19 from menus.o
  
  Selecting templates.o to define clearMixes()
      Definition:     clearMixes()
      Pushing section .text.clearMixes() to worklist [originates from symbol clearMixes()]
  
  Processing section: .text.clearMixes() from templates.o
      Load REL relocations for .text.clearMixes() (templates.o)
  
  Selecting menus.o to define menuProcCurve(unsigned char)
      Definition:     menuProcCurve(unsigned char)
      Pushing section .text.menuProcCurve(unsigned char) to worklist [originates from symbol menuProcCurve(unsigned char)]
  
  Processing section: .text.menuProcCurve(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurve(unsigned char) (menus.o)
      Reference:      drawCurve(unsigned char)
      Local section:  .bss.menuProcCurve(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcCurveOne(unsigned char)
      Local section:  .rodata..L.str.2 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.2 from menus.o
  
  Selecting er9x.o to define checkIncDec_i8(signed char, signed char, signed char)
      Definition:     checkIncDec_i8(signed char, signed char, signed char)
      Pushing section .text.checkIncDec_i8(signed char, signed char, signed char) to worklist [originates from symbol checkIncDec_i8(signed char, signed char, signed char)]
  
  Processing section: .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_i8(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Definition:     edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Pushing section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) to worklist [originates from symbol edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)]
  
  Processing section: .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcMixOne(unsigned char)
      Definition:     menuProcMixOne(unsigned char)
      Pushing section .text.menuProcMixOne(unsigned char) to worklist [originates from symbol menuProcMixOne(unsigned char)]
  
  Processing section: .text.menuProcMixOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMixOne(unsigned char) (menus.o)
      Reference:      lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Local section:  .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.10 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.11 from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata..L.str.15 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.14 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curve from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.13 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.12 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.10 from menus.o
  
  Processing section: .rodata..L.str.11 from menus.o
  
  Processing section: .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.offonItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.15 from menus.o
  
  Processing section: .rodata..L.str.14 from menus.o
  
  Processing section: .rodata.Str_Curve from menus.o
  
  Processing section: .rodata..L.str.13 from menus.o
  
  Processing section: .rodata..L.str.12 from menus.o
  
  Selecting lcd.o to define lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Definition:     lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_puts_Pskip(unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting er9x.o to define putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
      Reference:      Str_OFF
      Reference:      Str_ON
  
  Selecting er9x.o to define Str_OFF
      Definition:     Str_OFF
      Pushing section .rodata.Str_OFF to worklist [originates from symbol Str_OFF]
  
  Processing section: .rodata.Str_OFF from er9x.o
  
  Selecting er9x.o to define Str_ON
      Definition:     Str_ON
      Pushing section .rodata.Str_ON to worklist [originates from symbol Str_ON]
  
  Processing section: .rodata.Str_ON from er9x.o
  
  Selecting menus.o to define putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Definition:     putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Pushing section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) to worklist [originates from symbol putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)]
  
  Processing section: .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Load REL relocations for .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (menus.o)
  
  Selecting menus.o to define setStickCenter()
      Definition:     setStickCenter()
      Pushing section .text.setStickCenter() to worklist [originates from symbol setStickCenter()]
  
  Processing section: .text.setStickCenter() from menus.o
      Load REL relocations for .text.setStickCenter() (menus.o)
  
  Selecting menus.o to define gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting menus.o to define hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Definition:     hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Pushing section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol hyphinvMenuItem(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from menus.o
  
  Selecting menus.o to define menuModelPhases(unsigned char)
      Definition:     menuModelPhases(unsigned char)
      Pushing section .text.menuModelPhases(unsigned char) to worklist [originates from symbol menuModelPhases(unsigned char)]
  
  Processing section: .text.menuModelPhases(unsigned char) from menus.o
      Load REL relocations for .text.menuModelPhases(unsigned char) (menus.o)
      Reference:      dispFlightModename(unsigned char, unsigned char, unsigned char)
      Reference:      putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuModelPhases(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currIdx from menus.o using relocation R_ARM_ABS32
      Reference:      menuPhaseOne(unsigned char)
      Local section:  .rodata..L.str.29 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currIdx from menus.o
  
  Processing section: .rodata..L.str.29 from menus.o
  
  Selecting menus.o to define menuPhaseOne(unsigned char)
      Definition:     menuPhaseOne(unsigned char)
      Pushing section .text.menuPhaseOne(unsigned char) to worklist [originates from symbol menuPhaseOne(unsigned char)]
  
  Processing section: .text.menuPhaseOne(unsigned char) from menus.o
      Load REL relocations for .text.menuPhaseOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.26 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.27 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.26 from menus.o
  
  Processing section: .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.27 from menus.o
  
  Selecting menus.o to define putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_1_RETA from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_1_RETA from menus.o
  
  Selecting menus.o to define menuProcGlobals(unsigned char)
      Definition:     menuProcGlobals(unsigned char)
      Pushing section .text.menuProcGlobals(unsigned char) to worklist [originates from symbol menuProcGlobals(unsigned char)]
  
  Processing section: .text.menuProcGlobals(unsigned char) from menus.o
      Load REL relocations for .text.menuProcGlobals(unsigned char) (menus.o)
      Local section:  .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuScaleOne(unsigned char)
      Local section:  .rodata..L.str.8 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_GV from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Gv_Source from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.8 from menus.o
  
  Processing section: .rodata.Str_GV from menus.o
  
  Processing section: .rodata.Str_Gv_Source from menus.o
  
  Selecting menus.o to define menuScaleOne(unsigned char)
      Definition:     menuScaleOne(unsigned char)
      Pushing section .text.menuScaleOne(unsigned char) to worklist [originates from symbol menuScaleOne(unsigned char)]
  
  Processing section: .text.menuScaleOne(unsigned char) from menus.o
      Load REL relocations for .text.menuScaleOne(unsigned char) (menus.o)
      Reference:      scalerDecimal(unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuScaleOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_SC from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.7 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.UnitsString from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata.Str_SC from menus.o
  
  Processing section: .rodata..L.str.6 from menus.o
  
  Processing section: .rodata..L.str.7 from menus.o
  
  Processing section: .rodata.UnitsString from menus.o
  
  Selecting menus.o to define scalerDecimal(unsigned char, unsigned char, unsigned char)
      Definition:     scalerDecimal(unsigned char, unsigned char, unsigned char)
      Pushing section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol scalerDecimal(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      checkIncDec_u0(short, unsigned char)
  
  Selecting er9x.o to define checkIncDec_u0(short, unsigned char)
      Definition:     checkIncDec_u0(short, unsigned char)
      Pushing section .text.checkIncDec_u0(short, unsigned char) to worklist [originates from symbol checkIncDec_u0(short, unsigned char)]
  
  Processing section: .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec_u0(short, unsigned char) (er9x.o)
  
  Selecting er9x.o to define IS_EXPO_THROTTLE(unsigned char)
      Definition:     IS_EXPO_THROTTLE(unsigned char)
      Pushing section .text.IS_EXPO_THROTTLE(unsigned char) to worklist [originates from symbol IS_EXPO_THROTTLE(unsigned char)]
  
  Processing section: .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Load REL relocations for .text.IS_EXPO_THROTTLE(unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define menuProcCurveOne(unsigned char)
      Definition:     menuProcCurveOne(unsigned char)
      Pushing section .text.menuProcCurveOne(unsigned char) to worklist [originates from symbol menuProcCurveOne(unsigned char)]
  
  Processing section: .text.menuProcCurveOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurveOne(unsigned char) (menus.o)
      Local section:  .text.curveAddress(unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.1 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.curveAddress(unsigned char) from menus.o
      Load REL relocations for .text.curveAddress(unsigned char) (menus.o)
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
  
  Processing section: .rodata..L.str.1 from menus.o
  
  Selecting menus.o to define menuProcProtocol(unsigned char)
      Definition:     menuProcProtocol(unsigned char)
      Pushing section .text.menuProcProtocol(unsigned char) to worklist [originates from symbol menuProcProtocol(unsigned char)]
  
  Processing section: .text.menuProcProtocol(unsigned char) from menus.o
      Load REL relocations for .text.menuProcProtocol(unsigned char) (menus.o)
      Reference:      crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      rangeBindAction(unsigned char, unsigned char)
      Local section:  .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.91 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.100 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.98 from menus.o using relocation R_ARM_ABS32
      Reference:      menuRXSetup(unsigned char)
      Local section:  .rodata..L.str.99 from menus.o using relocation R_ARM_ABS32
      Reference:      menuSetFailsafe(unsigned char)
      Local section:  .rodata..L.str.92 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.93 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.94 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.95 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.96 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.97 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.101 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.91 from menus.o
  
  Processing section: .rodata..L.str.100 from menus.o
  
  Processing section: .rodata..L.str.98 from menus.o
  
  Processing section: .rodata..L.str.99 from menus.o
  
  Processing section: .rodata..L.str.92 from menus.o
  
  Processing section: .rodata..L.str.93 from menus.o
  
  Processing section: .rodata..L.str.94 from menus.o
  
  Processing section: .rodata..L.str.95 from menus.o
  
  Processing section: .rodata..L.str.96 from menus.o
  
  Processing section: .rodata..L.str.97 from menus.o
  
  Processing section: .rodata..L.str.101 from menus.o
  
  Selecting menus.o to define menuRXSetup(unsigned char)
      Definition:     menuRXSetup(unsigned char)
      Pushing section .text.menuRXSetup(unsigned char) to worklist [originates from symbol menuRXSetup(unsigned char)]
  
  Processing section: .text.menuRXSetup(unsigned char) from menus.o
      Load REL relocations for .text.menuRXSetup(unsigned char) (menus.o)
      Local section:  .bss.menuRXSetup(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.83 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.84 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.85 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.86 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.83 from menus.o
  
  Processing section: .rodata..L.str.84 from menus.o
  
  Processing section: .rodata..L.str.85 from menus.o
  
  Processing section: .rodata..L.str.86 from menus.o
  
  Selecting elrsV2.o to define crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o
      Load REL relocations for .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (elrsV2.o)
      Reference:      crossfireTelemetryPing()
      Local section:  .bss.linkstatTimeout from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.9 from elrsV2.o using relocation R_ARM_ABS32
      Reference:      curselectIdx
      Reference:      executeMenu(unsigned char)
      Local section:  .rodata..L.str.8 from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .bss.linkstatTimeout from elrsV2.o
  
  Processing section: .rodata..L.str.9 from elrsV2.o
  
  Processing section: .rodata..L.str.8 from elrsV2.o
  
  Selecting elrsV2.o to define executeMenu(unsigned char)
      Definition:     executeMenu(unsigned char)
      Pushing section .text.executeMenu(unsigned char) to worklist [originates from symbol executeMenu(unsigned char)]
  
  Processing section: .text.executeMenu(unsigned char) from elrsV2.o
      Load REL relocations for .text.executeMenu(unsigned char) (elrsV2.o)
      Reference:      resetElrsMenuVariables()
      Local section:  .rodata..L.str.5 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from elrsV2.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.7 from elrsV2.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.5 from elrsV2.o
  
  Processing section: .rodata..L.str.6 from elrsV2.o
  
  Processing section: .rodata..L.str.7 from elrsV2.o
  
  Selecting menus.o to define menuSetFailsafe(unsigned char)
      Definition:     menuSetFailsafe(unsigned char)
      Pushing section .text.menuSetFailsafe(unsigned char) to worklist [originates from symbol menuSetFailsafe(unsigned char)]
  
  Processing section: .text.menuSetFailsafe(unsigned char) from menus.o
      Load REL relocations for .text.menuSetFailsafe(unsigned char) (menus.o)
      Local section:  .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.87 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.90 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.89 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.88 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.87 from menus.o
  
  Processing section: .rodata..L.str.90 from menus.o
  
  Processing section: .rodata..L.str.89 from menus.o
  
  Processing section: .rodata..L.str.88 from menus.o
  
  Selecting menus.o to define rangeBindAction(unsigned char, unsigned char)
      Definition:     rangeBindAction(unsigned char, unsigned char)
      Pushing section .text.rangeBindAction(unsigned char, unsigned char) to worklist [originates from symbol rangeBindAction(unsigned char, unsigned char)]
  
  Processing section: .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.rangeBindAction(unsigned char, unsigned char) (menus.o)
      Reference:      pxxFlag
      Reference:      menuRangeBind(unsigned char)
  
  Selecting menus.o to define menuRangeBind(unsigned char)
      Definition:     menuRangeBind(unsigned char)
      Pushing section .text.menuRangeBind(unsigned char) to worklist [originates from symbol menuRangeBind(unsigned char)]
  
  Processing section: .text.menuRangeBind(unsigned char) from menus.o
      Load REL relocations for .text.menuRangeBind(unsigned char) (menus.o)
      Local section:  .rodata..L.str.25 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.24 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuRangeBind(unsigned char)::timer from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.25 from menus.o
  
  Processing section: .rodata..L.str.24 from menus.o
  
  Processing section: .bss.menuRangeBind(unsigned char)::timer from menus.o
  
  Selecting er9x.o to define throttleReversed()
      Definition:     throttleReversed()
      Pushing section .text.throttleReversed() to worklist [originates from symbol throttleReversed()]
  
  Processing section: .text.throttleReversed() from er9x.o
      Load REL relocations for .text.throttleReversed() (er9x.o)
  
  Selecting menus.o to define menuProcTelemetry(unsigned char)
      Definition:     menuProcTelemetry(unsigned char)
      Pushing section .text.menuProcTelemetry(unsigned char) to worklist [originates from symbol menuProcTelemetry(unsigned char)]
  
  Processing section: .text.menuProcTelemetry(unsigned char) from menus.o
      Load REL relocations for .text.menuProcTelemetry(unsigned char) (menus.o)
      Reference:      putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.4 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.5 from menus.o
  
  Processing section: .rodata..L.str.4 from menus.o
  
  Selecting menus.o to define dispFlightModename(unsigned char, unsigned char, unsigned char)
      Definition:     dispFlightModename(unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispFlightModename(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str.28 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.28 from menus.o
  
  Selecting menus.o to define lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Definition:     lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Pushing section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) to worklist [originates from symbol lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)]
  
  Processing section: .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Load REL relocations for .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (menus.o)
  
  Selecting menus.o to define menuProcVoiceAlarm(unsigned char)
      Definition:     menuProcVoiceAlarm(unsigned char)
      Pushing section .text.menuProcVoiceAlarm(unsigned char) to worklist [originates from symbol menuProcVoiceAlarm(unsigned char)]
  
  Processing section: .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceAlarm(unsigned char) (menus.o)
      Reference:      displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcVoiceOne(unsigned char)
      Local section:  .rodata..L.str.82 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.82 from menus.o
  
  Selecting menus.o to define displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_On_Off_Both from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_On_Off_Both from menus.o
  
  Selecting menus.o to define menuProcVoiceOne(unsigned char)
      Definition:     menuProcVoiceOne(unsigned char)
      Pushing section .text.menuProcVoiceOne(unsigned char) to worklist [originates from symbol menuProcVoiceOne(unsigned char)]
  
  Processing section: .text.menuProcVoiceOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.69 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.70 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.71 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.75 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.76 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.77 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.78 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Sounds from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.79 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.80 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.72 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.73 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.74 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.69 from menus.o
  
  Processing section: .rodata..L.str.70 from menus.o
  
  Processing section: .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.71 from menus.o
  
  Processing section: .rodata..L.str.75 from menus.o
  
  Processing section: .rodata..L.str.76 from menus.o
  
  Processing section: .rodata..L.str.77 from menus.o
  
  Processing section: .rodata..L.str.78 from menus.o
  
  Processing section: .rodata.Str_Sounds from menus.o
  
  Processing section: .rodata..L.str.79 from menus.o
  
  Processing section: .rodata..L.str.80 from menus.o
  
  Processing section: .rodata..L.str.72 from menus.o
  
  Processing section: .rodata..L.str.73 from menus.o
  
  Processing section: .rodata..L.str.74 from menus.o
  
  Selecting pers.o to define eeLoadModelForBackup(unsigned char)
      Definition:     eeLoadModelForBackup(unsigned char)
      Pushing section .text.eeLoadModelForBackup(unsigned char) to worklist [originates from symbol eeLoadModelForBackup(unsigned char)]
  
  Processing section: .text.eeLoadModelForBackup(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelForBackup(unsigned char) (pers.o)
  
  Selecting menus.o to define putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting er9x.o to define putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Definition:     putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Pushing section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) to worklist [originates from symbol putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (menus.o)
      Reference:      putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Local section:  .rodata.UnitsText from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsText from menus.o
  
  Selecting er9x.o to define putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Definition:     putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      __aeabi_llsr
      Local section:  .rodata..L.str.1 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from er9x.o
  
  Selecting menus.o to define reachMixerCountLimit()
      Definition:     reachMixerCountLimit()
      Pushing section .text.reachMixerCountLimit() to worklist [originates from symbol reachMixerCountLimit()]
  
  Processing section: .text.reachMixerCountLimit() from menus.o
      Load REL relocations for .text.reachMixerCountLimit() (menus.o)
      Reference:      menuMixersLimit(unsigned char)
  
  Selecting menus.o to define menuMixersLimit(unsigned char)
      Definition:     menuMixersLimit(unsigned char)
      Pushing section .text.menuMixersLimit(unsigned char) to worklist [originates from symbol menuMixersLimit(unsigned char)]
  
  Processing section: .text.menuMixersLimit(unsigned char) from menus.o
      Load REL relocations for .text.menuMixersLimit(unsigned char) (menus.o)
      Local section:  .rodata..L.str.16 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.16 from menus.o
  
  Selecting er9x.o to define check_backlight_voice()
      Definition:     check_backlight_voice()
      Pushing section .text.check_backlight_voice() to worklist [originates from symbol check_backlight_voice()]
  
  Processing section: .text.check_backlight_voice() from er9x.o
      Load REL relocations for .text.check_backlight_voice() (er9x.o)
      Reference:      backlight_on
      Reference:      backlight_off
      Reference:      t_voice::voice_process()
      Local section:  .bss.check_backlight_voice()::tmr10ms from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .bss.check_backlight_voice()::tmr10ms from er9x.o
  
  Selecting drivers.o to define eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Definition:     eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Pushing section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) to worklist [originates from symbol eeprom_write_page_cmp(char const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (drivers.o)
  
  Selecting elrsV2.o to define crossfireTelemetryPing()
      Definition:     crossfireTelemetryPing()
      Pushing section .text.crossfireTelemetryPing() to worklist [originates from symbol crossfireTelemetryPing()]
  
  Processing section: .text.crossfireTelemetryPing() from elrsV2.o
      Load REL relocations for .text.crossfireTelemetryPing() (elrsV2.o)
  
  Selecting er9x.o to define getCurrentSwitchStates()
      Definition:     getCurrentSwitchStates()
      Pushing section .text.getCurrentSwitchStates() to worklist [originates from symbol getCurrentSwitchStates()]
  
  Processing section: .text.getCurrentSwitchStates() from er9x.o
      Load REL relocations for .text.getCurrentSwitchStates() (er9x.o)
  
  Selecting elrsV2.o to define resetElrsMenuVariables()
      Definition:     resetElrsMenuVariables()
      Pushing section .text.resetElrsMenuVariables() to worklist [originates from symbol resetElrsMenuVariables()]
  
  Processing section: .text.resetElrsMenuVariables() from elrsV2.o
      Load REL relocations for .text.resetElrsMenuVariables() (elrsV2.o)
  
  Selecting er9x.o to define alert(char const*)
      Definition:     alert(char const*)
      Pushing section .text.alert(char const*) to worklist [originates from symbol alert(char const*)]
  
  Processing section: .text.alert(char const*) from er9x.o
      Load REL relocations for .text.alert(char const*) (er9x.o)
  
  Selecting er9x.o to define anaIn(unsigned char)
      Definition:     anaIn(unsigned char)
      Pushing section .text.anaIn(unsigned char) to worklist [originates from symbol anaIn(unsigned char)]
  
  Processing section: .text.anaIn(unsigned char) from er9x.o
      Load REL relocations for .text.anaIn(unsigned char) (er9x.o)
  
  Selecting menus.o to define timer()
      Definition:     timer()
      Pushing section .text.timer() to worklist [originates from symbol timer()]
  
  Processing section: .text.timer() from menus.o
      Load REL relocations for .text.timer() (menus.o)
      Reference:      get_tmr10ms()
      Reference:      ThrottleStickyOn
  
  Selecting menus.o to define ThrottleStickyOn
      Definition:     ThrottleStickyOn
      Pushing section .bss.ThrottleStickyOn to worklist [originates from symbol ThrottleStickyOn]
  
  Processing section: .bss.ThrottleStickyOn from menus.o
  
  Selecting er9x.o to define get_tmr10ms()
      Definition:     get_tmr10ms()
      Pushing section .text.get_tmr10ms() to worklist [originates from symbol get_tmr10ms()]
  
  Processing section: .text.get_tmr10ms() from er9x.o
      Load REL relocations for .text.get_tmr10ms() (er9x.o)
  
  Selecting menus.o to define trace()
      Definition:     trace()
      Pushing section .text.trace() to worklist [originates from symbol trace()]
  
  Processing section: .text.trace() from menus.o
      Load REL relocations for .text.trace() (menus.o)
      Local section:  .bss.trace()::s_time from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.trace()::s_time from menus.o
  
  Selecting file.o to define EeFsck()
      Definition:     EeFsck()
      Pushing section .text.EeFsck() to worklist [originates from symbol EeFsck()]
  
  Processing section: .text.EeFsck() from file.o
      Load REL relocations for .text.EeFsck() (file.o)
      Local section:  .text.EeFsFlushFreelist() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFlushFreelist() from file.o
      Load REL relocations for .text.EeFsFlushFreelist() (file.o)
  
  Selecting menus.o to define TITLEP(char const*)
      Definition:     TITLEP(char const*)
      Pushing section .text.TITLEP(char const*) to worklist [originates from symbol TITLEP(char const*)]
  
  Processing section: .text.TITLEP(char const*) from menus.o
      Load REL relocations for .text.TITLEP(char const*) (menus.o)
  
  Selecting er9x.o to define alertx(char const*, bool)
      Definition:     alertx(char const*, bool)
      Pushing section .text.alertx(char const*, bool) to worklist [originates from symbol alertx(char const*, bool)]
  
  Processing section: .text.alertx(char const*, bool) from er9x.o
      Load REL relocations for .text.alertx(char const*, bool) (er9x.o)
      Reference:      lcdSetRefVolt(unsigned char)
      Weak reference: keyDown()
  
  Selecting lcd.o to define lcdSetRefVolt(unsigned char)
      Definition:     lcdSetRefVolt(unsigned char)
      Pushing section .text.lcdSetRefVolt(unsigned char) to worklist [originates from symbol lcdSetRefVolt(unsigned char)]
  
  Processing section: .text.lcdSetRefVolt(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSetRefVolt(unsigned char) (lcd.o)
  
  Selecting er9x.o to define almess(char const*, unsigned char)
      Definition:     almess(char const*, unsigned char)
      Pushing section .text.almess(char const*, unsigned char) to worklist [originates from symbol almess(char const*, unsigned char)]
  
  Processing section: .text.almess(char const*, unsigned char) from er9x.o
      Load REL relocations for .text.almess(char const*, unsigned char) (er9x.o)
      Local section:  .rodata..L.str.4 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.2 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alert from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from er9x.o
  
  Processing section: .rodata..L.str.2 from er9x.o
  
  Processing section: .rodata.Str_Alert from er9x.o
  
  Processing section: .rodata..L.str.3 from er9x.o
  
  Selecting menus.o to define intpol(short, unsigned char)
      Definition:     intpol(short, unsigned char)
      Pushing section .text.intpol(short, unsigned char) to worklist [originates from symbol intpol(short, unsigned char)]
  
  Processing section: .text.intpol(short, unsigned char) from menus.o
      Load REL relocations for .text.intpol(short, unsigned char) (menus.o)
  
  Selecting menus.o to define perOut(short*, unsigned char)
      Definition:     perOut(short*, unsigned char)
      Pushing section .text.perOut(short*, unsigned char) to worklist [originates from symbol perOut(short*, unsigned char)]
  
  Processing section: .text.perOut(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOut(short*, unsigned char) (menus.o)
      Reference:      scaleAnalog(short, unsigned char)
      Reference:      calc100toRESX(signed char)
      Reference:      bpanaCenter
      Reference:      Output
      Reference:      g_ppmIns
      Reference:      REG100_100(signed char)
      Reference:      REG(signed char, signed char, signed char)
      Reference:      expo(short, short)
      Reference:      calc1000toRESX(short)
      Local section:  .bss.perOut(short*, unsigned char)::sticky from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.perOut(short*, unsigned char)::sticky from menus.o
  
  Selecting menus.o to define Output
      Definition:     Output
      Pushing section .bss.Output to worklist [originates from symbol Output]
  
  Processing section: .bss.Output from menus.o
  
  Selecting er9x.o to define REG100_100(signed char)
      Definition:     REG100_100(signed char)
      Pushing section .text.REG100_100(signed char) to worklist [originates from symbol REG100_100(signed char)]
  
  Processing section: .text.REG100_100(signed char) from er9x.o
      Load REL relocations for .text.REG100_100(signed char) (er9x.o)
  
  Selecting menus.o to define scaleAnalog(short, unsigned char)
      Definition:     scaleAnalog(short, unsigned char)
      Pushing section .text.scaleAnalog(short, unsigned char) to worklist [originates from symbol scaleAnalog(short, unsigned char)]
  
  Processing section: .text.scaleAnalog(short, unsigned char) from menus.o
      Load REL relocations for .text.scaleAnalog(short, unsigned char) (menus.o)
  
  Selecting er9x.o to define calc100toRESX(signed char)
      Definition:     calc100toRESX(signed char)
      Pushing section .text.calc100toRESX(signed char) to worklist [originates from symbol calc100toRESX(signed char)]
  
  Processing section: .text.calc100toRESX(signed char) from er9x.o
  
  Selecting er9x.o to define calc1000toRESX(short)
      Definition:     calc1000toRESX(short)
      Pushing section .text.calc1000toRESX(short) to worklist [originates from symbol calc1000toRESX(short)]
  
  Processing section: .text.calc1000toRESX(short) from er9x.o
  
  Selecting er9x.o to define REG(signed char, signed char, signed char)
      Definition:     REG(signed char, signed char, signed char)
      Pushing section .text.REG(signed char, signed char, signed char) to worklist [originates from symbol REG(signed char, signed char, signed char)]
  
  Processing section: .text.REG(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.REG(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define expo(short, short)
      Definition:     expo(short, short)
      Pushing section .text.expo(short, short) to worklist [originates from symbol expo(short, short)]
  
  Processing section: .text.expo(short, short) from menus.o
      Load REL relocations for .text.expo(short, short) (menus.o)
      Reference:      expou(unsigned short, unsigned short)
  
  Selecting menus.o to define expou(unsigned short, unsigned short)
      Definition:     expou(unsigned short, unsigned short)
      Pushing section .text.expou(unsigned short, unsigned short) to worklist [originates from symbol expou(unsigned short, unsigned short)]
  
  Processing section: .text.expou(unsigned short, unsigned short) from menus.o
      Load REL relocations for .text.expou(unsigned short, unsigned short) (menus.o)
  
  Selecting templates.o to define setMix(unsigned char, unsigned char)
      Definition:     setMix(unsigned char, unsigned char)
      Pushing section .text.setMix(unsigned char, unsigned char) to worklist [originates from symbol setMix(unsigned char, unsigned char)]
  
  Processing section: .text.setMix(unsigned char, unsigned char) from templates.o
      Load REL relocations for .text.setMix(unsigned char, unsigned char) (templates.o)
  
  Selecting menus.o to define doPopup(char const*, unsigned char, unsigned char)
      Definition:     doPopup(char const*, unsigned char, unsigned char)
      Pushing section .text.doPopup(char const*, unsigned char, unsigned char) to worklist [originates from symbol doPopup(char const*, unsigned char, unsigned char)]
  
  Processing section: .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.doPopup(char const*, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Local section:  .rodata..L.str.114 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.114 from menus.o
  
  Selecting lcd.o to define lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting pers.o to define eeCheck(bool)
      Definition:     eeCheck(bool)
      Pushing section .text.eeCheck(bool) to worklist [originates from symbol eeCheck(bool)]
  
  Processing section: .text.eeCheck(bool) from pers.o
      Load REL relocations for .text.eeCheck(bool) (pers.o)
      Local section:  .bss.s_eeLongTimer from pers.o using relocation R_ARM_ABS32
      Local section:  .bss.s_eeDirtyTime10ms from pers.o using relocation R_ARM_ABS32
      Reference:      Ee_lock
      Reference:      theWriteFile
      Local section:  .rodata.Str_EEPROM_Overflow from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeLongTimer from pers.o
  
  Processing section: .bss.s_eeDirtyTime10ms from pers.o
  
  Processing section: .rodata.Str_EEPROM_Overflow from pers.o
  
  Selecting pers.o to define Ee_lock
      Definition:     Ee_lock
      Pushing section .bss.Ee_lock to worklist [originates from symbol Ee_lock]
  
  Processing section: .bss.Ee_lock from pers.o
  
  Selecting pers.o to define eeDirty(unsigned char)
      Definition:     eeDirty(unsigned char)
      Pushing section .text.eeDirty(unsigned char) to worklist [originates from symbol eeDirty(unsigned char)]
  
  Processing section: .text.eeDirty(unsigned char) from pers.o
      Load REL relocations for .text.eeDirty(unsigned char) (pers.o)
  
  Selecting er9x.o to define keyDown()
      Definition:     keyDown()
      Pushing section .text.keyDown() to worklist [originates from symbol keyDown()]
  
  Processing section: .text.keyDown() from er9x.o
      Load REL relocations for .text.keyDown() (er9x.o)
  
  Selecting er9x.o to define message(char const*)
      Definition:     message(char const*)
      Pushing section .text.message(char const*) to worklist [originates from symbol message(char const*)]
  
  Processing section: .text.message(char const*) from er9x.o
      Load REL relocations for .text.message(char const*) (er9x.o)
  
  Selecting er9x.o to define popMenu(bool)
      Definition:     popMenu(bool)
      Pushing section .text.popMenu(bool) to worklist [originates from symbol popMenu(bool)]
  
  Processing section: .text.popMenu(bool) from er9x.o
      Load REL relocations for .text.popMenu(bool) (er9x.o)
  
  Selecting er9x.o to define putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChn(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define CS_STATE(unsigned char)
      Definition:     CS_STATE(unsigned char)
      Pushing section .text.CS_STATE(unsigned char) to worklist [originates from symbol CS_STATE(unsigned char)]
  
  Processing section: .text.CS_STATE(unsigned char) from er9x.o
      Load REL relocations for .text.CS_STATE(unsigned char) (er9x.o)
  
  Selecting file.o to define EeFsOpen()
      Definition:     EeFsOpen()
      Pushing section .text.EeFsOpen() to worklist [originates from symbol EeFsOpen()]
  
  Processing section: .text.EeFsOpen() from file.o
      Load REL relocations for .text.EeFsOpen() (file.o)
  
  Selecting menus.o to define calcExpo(unsigned char, short)
      Definition:     calcExpo(unsigned char, short)
      Pushing section .text.calcExpo(unsigned char, short) to worklist [originates from symbol calcExpo(unsigned char, short)]
  
  Processing section: .text.calcExpo(unsigned char, short) from menus.o
      Load REL relocations for .text.calcExpo(unsigned char, short) (menus.o)
  
  Selecting menus.o to define char2idx(char)
      Definition:     char2idx(char)
      Pushing section .text.char2idx(char) to worklist [originates from symbol char2idx(char)]
  
  Processing section: .text.char2idx(char) from menus.o
      Load REL relocations for .text.char2idx(char) (menus.o)
      Local section:  .rodata.s_charTab from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.s_charTab from menus.o
  
  Selecting er9x.o to define checkTHR()
      Definition:     checkTHR()
      Pushing section .text.checkTHR() to worklist [originates from symbol checkTHR()]
  
  Processing section: .text.checkTHR() from er9x.o
      Load REL relocations for .text.checkTHR() (er9x.o)
      Reference:      checkThrottlePosition()
      Local section:  .rodata..L.str.5 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.5 from er9x.o
  
  Selecting er9x.o to define checkThrottlePosition()
      Definition:     checkThrottlePosition()
      Pushing section .text.checkThrottlePosition() to worklist [originates from symbol checkThrottlePosition()]
  
  Processing section: .text.checkThrottlePosition() from er9x.o
      Load REL relocations for .text.checkThrottlePosition() (er9x.o)
  
  Selecting menus.o to define dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Definition:     editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Pushing section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) to worklist [originates from symbol editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)]
  
  Processing section: .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_Name from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Name from menus.o
  
  Selecting drivers.o to define ee_waite()
      Definition:     ee_waite()
      Pushing section .text.ee_waite() to worklist [originates from symbol ee_waite()]
  
  Processing section: .text.ee_waite() from drivers.o
      Load REL relocations for .text.ee_waite() (drivers.o)
  
  Selecting er9x.o to define getValue(unsigned char)
      Definition:     getValue(unsigned char)
      Pushing section .text.getValue(unsigned char) to worklist [originates from symbol getValue(unsigned char)]
  
  Processing section: .text.getValue(unsigned char) from er9x.o
      Load REL relocations for .text.getValue(unsigned char) (er9x.o)
  
  Selecting menus.o to define idx2char(unsigned char)
      Definition:     idx2char(unsigned char)
      Pushing section .text.idx2char(unsigned char) to worklist [originates from symbol idx2char(unsigned char)]
  
  Processing section: .text.idx2char(unsigned char) from menus.o
      Load REL relocations for .text.idx2char(unsigned char) (menus.o)
  
  Selecting drivers.o to define keyState(EnumKeys)
      Definition:     keyState(EnumKeys)
      Pushing section .text.keyState(EnumKeys) to worklist [originates from symbol keyState(EnumKeys)]
  
  Processing section: .text.keyState(EnumKeys) from drivers.o
      Load REL relocations for .text.keyState(EnumKeys) (drivers.o)
      Reference:      PING
      Reference:      PINE
  
  Selecting BoardI6.o to define PINE
      Definition:     PINE
      Pushing section .text.PINE to worklist [originates from symbol PINE]
  
  Processing section: .text.PINE from BoardI6.o
      Load REL relocations for .text.PINE (BoardI6.o)
  
  Selecting BoardI6.o to define PING
      Definition:     PING
      Pushing section .text.PING to worklist [originates from symbol PING]
  
  Processing section: .text.PING from BoardI6.o
      Load REL relocations for .text.PING (BoardI6.o)
  
  Selecting lcd.o to define lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_init()
      Definition:     lcd_init()
      Pushing section .text.lcd_init() to worklist [originates from symbol lcd_init()]
  
  Processing section: .text.lcd_init() from lcd.o
      Load REL relocations for .text.lcd_init() (lcd.o)
      Reference:      rst_0
      Reference:      rst_1
      Reference:      rw_0
      Reference:      cs_0
      Reference:      lcdSetContrast()
      Local section:  .rodata.Lcdinit from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Lcdinit from lcd.o
  
  Selecting lcd.o to define lcdSetContrast()
      Definition:     lcdSetContrast()
      Pushing section .text.lcdSetContrast() to worklist [originates from symbol lcdSetContrast()]
  
  Processing section: .text.lcdSetContrast() from lcd.o
      Load REL relocations for .text.lcdSetContrast() (lcd.o)
  
  Selecting lcd.o to define lcd_plot(unsigned char, unsigned char)
      Definition:     lcd_plot(unsigned char, unsigned char)
      Pushing section .text.lcd_plot(unsigned char, unsigned char) to worklist [originates from symbol lcd_plot(unsigned char, unsigned char)]
  
  Processing section: .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_plot(unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_write_bits(unsigned char*, unsigned char)
      Local section:  .rodata._bitmask from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata._bitmask from lcd.o
  
  Selecting lcd.o to define lcd_write_bits(unsigned char*, unsigned char)
      Definition:     lcd_write_bits(unsigned char*, unsigned char)
      Pushing section .text.lcd_write_bits(unsigned char*, unsigned char) to worklist [originates from symbol lcd_write_bits(unsigned char*, unsigned char)]
  
  Processing section: .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_write_bits(unsigned char*, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_putc(unsigned char, unsigned char, char)
      Definition:     lcd_putc(unsigned char, unsigned char, char)
      Pushing section .text.lcd_putc(unsigned char, unsigned char, char) to worklist [originates from symbol lcd_putc(unsigned char, unsigned char, char)]
  
  Processing section: .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Load REL relocations for .text.lcd_putc(unsigned char, unsigned char, char) (lcd.o)
  
  Selecting lcd.o to define lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting lcd.o to define lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting er9x.o to define pushMenu(void (*)(unsigned char))
      Definition:     pushMenu(void (*)(unsigned char))
      Pushing section .text.pushMenu(void (*)(unsigned char)) to worklist [originates from symbol pushMenu(void (*)(unsigned char))]
  
  Processing section: .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.pushMenu(void (*)(unsigned char)) (er9x.o)
      Local section:  .rodata..L.str.7 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.7 from er9x.o
  
  Selecting lcd.o to define putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Definition:     putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Pushing section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) to worklist [originates from symbol putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)]
  
  Processing section: .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (lcd.o)
  
  Selecting pers.o to define setNameP(char*, char const*)
      Definition:     setNameP(char*, char const*)
      Pushing section .text.setNameP(char*, char const*) to worklist [originates from symbol setNameP(char*, char const*)]
  
  Processing section: .text.setNameP(char*, char const*) from pers.o
  
  Selecting er9x.o to define chainMenu(void (*)(unsigned char))
      Definition:     chainMenu(void (*)(unsigned char))
      Pushing section .text.chainMenu(void (*)(unsigned char)) to worklist [originates from symbol chainMenu(void (*)(unsigned char))]
  
  Processing section: .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.chainMenu(void (*)(unsigned char)) (er9x.o)
  
  Selecting menus.o to define drawCurve(unsigned char)
      Definition:     drawCurve(unsigned char)
      Pushing section .text.drawCurve(unsigned char) to worklist [originates from symbol drawCurve(unsigned char)]
  
  Processing section: .text.drawCurve(unsigned char) from menus.o
      Load REL relocations for .text.drawCurve(unsigned char) (menus.o)
  
  Selecting er9x.o to define getSwitch(signed char, bool, unsigned char)
      Definition:     getSwitch(signed char, bool, unsigned char)
      Pushing section .text.getSwitch(signed char, bool, unsigned char) to worklist [originates from symbol getSwitch(signed char, bool, unsigned char)]
  
  Processing section: .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Load REL relocations for .text.getSwitch(signed char, bool, unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_clear()
      Definition:     lcd_clear()
      Pushing section .text.lcd_clear() to worklist [originates from symbol lcd_clear()]
  
  Processing section: .text.lcd_clear() from lcd.o
      Load REL relocations for .text.lcd_clear() (lcd.o)
  
  Selecting lcd.o to define lcd_hline(unsigned char, unsigned char, signed char)
      Definition:     lcd_hline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_hline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_hline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd.o)
      Reference:      lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  
  Selecting lcd.o to define lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_vline(unsigned char, unsigned char, signed char)
      Definition:     lcd_vline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_vline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_vline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd.o)
  
  Selecting menus.o to define menuProc0(unsigned char)
      Definition:     menuProc0(unsigned char)
      Pushing section .text.menuProc0(unsigned char) to worklist [originates from symbol menuProc0(unsigned char)]
  
  Processing section: .text.menuProc0(unsigned char) from menus.o
      Load REL relocations for .text.menuProc0(unsigned char) (menus.o)
      Reference:      putsVBat(unsigned char, unsigned char, unsigned char)
      Reference:      displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      doMainScreenGrphics()
      Reference:      dispSignalQality(unsigned char)
      Reference:      switchDisplay(unsigned char, unsigned char)
      Reference:      displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProc0(unsigned char)::trimSwLock from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.40 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProc0(unsigned char)::xt from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.inputs_subview from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcStatistic(unsigned char)
      Reference:      menuProcIndex(unsigned char)
      Local section:  .rodata..L.str.41 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.42 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.43 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProc0(unsigned char)::trimSwLock from menus.o
  
  Processing section: .rodata..L.str.40 from menus.o
  
  Processing section: .rodata.menuProc0(unsigned char)::xt from menus.o
  
  Processing section: .bss.inputs_subview from menus.o
  
  Processing section: .rodata..L.str.41 from menus.o
  
  Processing section: .rodata..L.str.42 from menus.o
  
  Processing section: .rodata..L.str.43 from menus.o
  
  Selecting menus.o to define displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcIndex(unsigned char)
      Definition:     menuProcIndex(unsigned char)
      Pushing section .text.menuProcIndex(unsigned char) to worklist [originates from symbol menuProcIndex(unsigned char)]
  
  Processing section: .text.menuProcIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcIndex(unsigned char) (menus.o)
      Local section:  .bss.menuProcIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Display from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.44 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.45 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_AudioHaptic from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.46 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.47 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.48 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alarms from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.51 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Beep_Countdown from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.53 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.54 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.55 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Controls from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.50 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Calibration from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Trainer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.61 from menus.o using relocation R_ARM_ABS32
      Reference:      putc_0_1(unsigned char, unsigned char, unsigned char)
      Reference:      lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Reference:      lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Local section:  .rodata..L.str.62 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Version from menus.o using relocation R_ARM_ABS32
      Reference:      Stamps
      Local section:  .rodata..L.str.56 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.59 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Hardware from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.65 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.57 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.58 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.sticks from menus.o using relocation R_ARM_ABS32
      Reference:      putsVolts(unsigned char, unsigned char, short, unsigned char)
      Local section:  .rodata..L.str.68 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuWhenDone from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.67 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.66 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.60 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.63 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.64 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.52 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.49 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_minute_Beep from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcIndex(unsigned char)::mstate from menus.o
  
  Processing section: .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_DiagSwtch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_DiagAna from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Display from menus.o
  
  Processing section: .rodata..L.str.44 from menus.o
  
  Processing section: .rodata..L.str.45 from menus.o
  
  Processing section: .rodata.Str_AudioHaptic from menus.o
  
  Processing section: .rodata..L.str.46 from menus.o
  
  Processing section: .rodata..L.str.47 from menus.o
  
  Processing section: .rodata..L.str.48 from menus.o
  
  Processing section: .rodata.Str_Alarms from menus.o
  
  Processing section: .rodata..L.str.51 from menus.o
  
  Processing section: .rodata.Str_Beep_Countdown from menus.o
  
  Processing section: .rodata..L.str.53 from menus.o
  
  Processing section: .rodata..L.str.54 from menus.o
  
  Processing section: .rodata..L.str.55 from menus.o
  
  Processing section: .rodata.Str_Controls from menus.o
  
  Processing section: .rodata..L.str.50 from menus.o
  
  Processing section: .rodata.Str_Calibration from menus.o
  
  Processing section: .rodata.Str_Trainer from menus.o
  
  Processing section: .rodata..L.str.61 from menus.o
  
  Processing section: .rodata..L.str.62 from menus.o
  
  Processing section: .rodata.Str_Version from menus.o
  
  Processing section: .rodata..L.str.56 from menus.o
  
  Processing section: .rodata..L.str.59 from menus.o
  
  Processing section: .rodata.Str_Hardware from menus.o
  
  Processing section: .rodata..L.str.65 from menus.o
  
  Processing section: .rodata..L.str.57 from menus.o
  
  Processing section: .rodata..L.str.58 from menus.o
  
  Processing section: .rodata.sticks from menus.o
  
  Processing section: .rodata..L.str.68 from menus.o
  
  Processing section: .rodata.menuWhenDone from menus.o
  
  Processing section: .rodata..L.str.67 from menus.o
  
  Processing section: .rodata..L.str.66 from menus.o
  
  Processing section: .rodata..L.str.60 from menus.o
  
  Processing section: .rodata..L.str.63 from menus.o
  
  Processing section: .rodata..L.str.64 from menus.o
  
  Processing section: .rodata..L.str.52 from menus.o
  
  Processing section: .rodata..L.str.49 from menus.o
  
  Processing section: .rodata.Str_minute_Beep from menus.o
  
  Processing section: .rodata.Str_DiagSwtch from menus.o
  
  Processing section: .rodata.Str_DiagAna from menus.o
  
  Selecting stamp.o to define Stamps
      Definition:     Stamps
      Pushing section .rodata.Stamps to worklist [originates from symbol Stamps]
  
  Processing section: .rodata.Stamps from stamp.o
  
  Selecting lcd.o to define lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Definition:     lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Pushing section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol lcd_outhex4(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Load REL relocations for .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd.o)
  
  Selecting menus.o to define switchDisplay(unsigned char, unsigned char)
      Definition:     switchDisplay(unsigned char, unsigned char)
      Pushing section .text.switchDisplay(unsigned char, unsigned char) to worklist [originates from symbol switchDisplay(unsigned char, unsigned char)]
  
  Processing section: .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.switchDisplay(unsigned char, unsigned char) (menus.o)
      Reference:      displayOneSwitch(unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define dispSignalQality(unsigned char)
      Definition:     dispSignalQality(unsigned char)
      Pushing section .text.dispSignalQality(unsigned char) to worklist [originates from symbol dispSignalQality(unsigned char)]
  
  Processing section: .text.dispSignalQality(unsigned char) from menus.o
      Load REL relocations for .text.dispSignalQality(unsigned char) (menus.o)
      Local section:  .rodata..L.str.38 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.39 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.38 from menus.o
  
  Processing section: .rodata..L.str.39 from menus.o
  
  Selecting menus.o to define displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcStatistic(unsigned char)
      Definition:     menuProcStatistic(unsigned char)
      Pushing section .text.menuProcStatistic(unsigned char) to worklist [originates from symbol menuProcStatistic(unsigned char)]
  
  Processing section: .text.menuProcStatistic(unsigned char) from menus.o
      Load REL relocations for .text.menuProcStatistic(unsigned char) (menus.o)
      Local section:  .rodata..L.str.32 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.33 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.34 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.35 from menus.o using relocation R_ARM_ABS32
      Reference:      putsTimeNoAtt(unsigned char, unsigned char, short)
  
  Processing section: .rodata..L.str.32 from menus.o
  
  Processing section: .rodata..L.str.33 from menus.o
  
  Processing section: .rodata..L.str.34 from menus.o
  
  Processing section: .rodata..L.str.35 from menus.o
  
  Selecting menus.o to define putsTimeNoAtt(unsigned char, unsigned char, short)
      Definition:     putsTimeNoAtt(unsigned char, unsigned char, short)
      Pushing section .text.putsTimeNoAtt(unsigned char, unsigned char, short) to worklist [originates from symbol putsTimeNoAtt(unsigned char, unsigned char, short)]
  
  Processing section: .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Load REL relocations for .text.putsTimeNoAtt(unsigned char, unsigned char, short) (menus.o)
  
  Selecting menus.o to define doMainScreenGrphics()
      Definition:     doMainScreenGrphics()
      Pushing section .text.doMainScreenGrphics() to worklist [originates from symbol doMainScreenGrphics()]
  
  Processing section: .text.doMainScreenGrphics() from menus.o
      Load REL relocations for .text.doMainScreenGrphics() (menus.o)
      Reference:      telltale(unsigned char, signed char, signed char)
  
  Selecting menus.o to define displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Definition:     lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Pushing section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) to worklist [originates from symbol lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)]
  
  Processing section: .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd.o)
  
  Selecting menus.o to define putc_0_1(unsigned char, unsigned char, unsigned char)
      Definition:     putc_0_1(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putc_0_1(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putc_0_1(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putc_0_1(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVBat(unsigned char, unsigned char, unsigned char)
      Definition:     putsVBat(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsVBat(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsVBat(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsVBat(unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define telltale(unsigned char, signed char, signed char)
      Definition:     telltale(unsigned char, signed char, signed char)
      Pushing section .text.telltale(unsigned char, signed char, signed char) to worklist [originates from symbol telltale(unsigned char, signed char, signed char)]
  
  Processing section: .text.telltale(unsigned char, signed char, signed char) from menus.o
      Load REL relocations for .text.telltale(unsigned char, signed char, signed char) (menus.o)
  
  Selecting pers.o to define modelSave(unsigned char)
      Definition:     modelSave(unsigned char)
      Pushing section .text.modelSave(unsigned char) to worklist [originates from symbol modelSave(unsigned char)]
  
  Processing section: .text.modelSave(unsigned char) from pers.o
      Load REL relocations for .text.modelSave(unsigned char) (pers.o)
  
  Selecting menus.o to define put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol put_curve(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVolts(unsigned char, unsigned char, short, unsigned char)
      Definition:     putsVolts(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol putsVolts(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting audio.o to define setVolume(unsigned char)
      Definition:     setVolume(unsigned char)
      Pushing section .text.setVolume(unsigned char) to worklist [originates from symbol setVolume(unsigned char)]
  
  Processing section: .text.setVolume(unsigned char) from audio.o
      Load REL relocations for .text.setVolume(unsigned char) (audio.o)
      Reference:      Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  
  Selecting audio.o to define Uart_SendCMD(unsigned char, unsigned char, unsigned short)
      Definition:     Uart_SendCMD(unsigned char, unsigned char, unsigned short)
      Pushing section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol Uart_SendCMD(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o
      Load REL relocations for .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) (audio.o)
      Reference:      DoSum(unsigned char*, unsigned char)
      Reference:      sendSerialVoiceData(unsigned char*, unsigned int)
      Reference:      play_cmd_buf
  
  Selecting BoardI6.o to define sendSerialVoiceData(unsigned char*, unsigned int)
      Definition:     sendSerialVoiceData(unsigned char*, unsigned int)
      Pushing section .text.sendSerialVoiceData(unsigned char*, unsigned int) to worklist [originates from symbol sendSerialVoiceData(unsigned char*, unsigned int)]
  
  Processing section: .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o
      Load REL relocations for .text.sendSerialVoiceData(unsigned char*, unsigned int) (BoardI6.o)
  
  Selecting audio.o to define DoSum(unsigned char*, unsigned char)
      Definition:     DoSum(unsigned char*, unsigned char)
      Pushing section .text.DoSum(unsigned char*, unsigned char) to worklist [originates from symbol DoSum(unsigned char*, unsigned char)]
  
  Processing section: .text.DoSum(unsigned char*, unsigned char) from audio.o
  
  Selecting audio.o to define audioQueue::event(unsigned char, unsigned char)
      Definition:     audioQueue::event(unsigned char, unsigned char)
      Pushing section .text.audioQueue::event(unsigned char, unsigned char) to worklist [originates from symbol audioQueue::event(unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::event(unsigned char, unsigned char) (audio.o)
      Reference:      audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting audio.o to define audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audio.o)
      Weak reference: audioQueue::getToneLength(unsigned char)
  
  Selecting audio.o to define audioQueue::getToneLength(unsigned char)
      Definition:     audioQueue::getToneLength(unsigned char)
      Pushing section .text.audioQueue::getToneLength(unsigned char) to worklist [originates from symbol audioQueue::getToneLength(unsigned char)]
  
  Processing section: .text.audioQueue::getToneLength(unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::getToneLength(unsigned char) (audio.o)
  
  Selecting file.o to define EFile::closeTrunc()
      Definition:     EFile::closeTrunc()
      Pushing section .text.EFile::closeTrunc() to worklist [originates from symbol EFile::closeTrunc()]
  
  Processing section: .text.EFile::closeTrunc() from file.o
      Load REL relocations for .text.EFile::closeTrunc() (file.o)
      Local section:  .text.EeFsFree(unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFree(unsigned char) from file.o
      Load REL relocations for .text.EeFsFree(unsigned char) (file.o)
  
  Selecting file.o to define EFile::rm(unsigned char)
      Definition:     EFile::rm(unsigned char)
      Pushing section .text.EFile::rm(unsigned char) to worklist [originates from symbol EFile::rm(unsigned char)]
  
  Processing section: .text.EFile::rm(unsigned char) from file.o
      Load REL relocations for .text.EFile::rm(unsigned char) (file.o)
  
  Selecting file.o to define EFile::read(unsigned char*, unsigned short)
      Definition:     EFile::read(unsigned char*, unsigned short)
      Pushing section .text.EFile::read(unsigned char*, unsigned short) to worklist [originates from symbol EFile::read(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::read(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::read(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::size()
      Definition:     EFile::size()
      Pushing section .text.EFile::size() to worklist [originates from symbol EFile::size()]
  
  Processing section: .text.EFile::size() from file.o
      Load REL relocations for .text.EFile::size() (file.o)
  
  Selecting file.o to define EFile::swap(unsigned char, unsigned char)
      Definition:     EFile::swap(unsigned char, unsigned char)
      Pushing section .text.EFile::swap(unsigned char, unsigned char) to worklist [originates from symbol EFile::swap(unsigned char, unsigned char)]
  
  Processing section: .text.EFile::swap(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EFile::swap(unsigned char, unsigned char) (file.o)
  
  Selecting file.o to define EFile::write(unsigned char*, unsigned char)
      Definition:     EFile::write(unsigned char*, unsigned char)
      Pushing section .text.EFile::write(unsigned char*, unsigned char) to worklist [originates from symbol EFile::write(unsigned char*, unsigned char)]
  
  Processing section: .text.EFile::write(unsigned char*, unsigned char) from file.o
      Load REL relocations for .text.EFile::write(unsigned char*, unsigned char) (file.o)
      Local section:  .text.EeFsAlloc() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsAlloc() from file.o
      Load REL relocations for .text.EeFsAlloc() (file.o)
  
  Selecting file.o to define EFile::create(unsigned char, unsigned char, unsigned short)
      Definition:     EFile::create(unsigned char, unsigned char, unsigned short)
      Pushing section .text.EFile::create(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol EFile::create(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Load REL relocations for .text.EFile::create(unsigned char, unsigned char, unsigned short) (file.o)
  
  Selecting file.o to define EFile::exists(unsigned char)
      Definition:     EFile::exists(unsigned char)
      Pushing section .text.EFile::exists(unsigned char) to worklist [originates from symbol EFile::exists(unsigned char)]
  
  Processing section: .text.EFile::exists(unsigned char) from file.o
      Load REL relocations for .text.EFile::exists(unsigned char) (file.o)
  
  Selecting file.o to define EFile::openRd(unsigned char)
      Definition:     EFile::openRd(unsigned char)
      Pushing section .text.EFile::openRd(unsigned char) to worklist [originates from symbol EFile::openRd(unsigned char)]
  
  Processing section: .text.EFile::openRd(unsigned char) from file.o
      Load REL relocations for .text.EFile::openRd(unsigned char) (file.o)
  
  Selecting file.o to define EFile::readRlc(unsigned char*, unsigned short)
      Definition:     EFile::readRlc(unsigned char*, unsigned short)
      Pushing section .text.EFile::readRlc(unsigned char*, unsigned short) to worklist [originates from symbol EFile::readRlc(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::readRlc(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Definition:     EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Pushing section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) to worklist [originates from symbol EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)]
  
  Processing section: .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Load REL relocations for .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (file.o)
  
  Selecting menus.o to define MState2::check_columns(unsigned char, unsigned char)
      Definition:     MState2::check_columns(unsigned char, unsigned char)
      Pushing section .text.MState2::check_columns(unsigned char, unsigned char) to worklist [originates from symbol MState2::check_columns(unsigned char, unsigned char)]
  
  Processing section: .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.MState2::check_columns(unsigned char, unsigned char) (menus.o)
      Reference:      backlightKey()
      Reference:      scrollLR
      Reference:      scrollUD
      Local section:  .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o using relocation R_ARM_ABS32
      Reference:      M_longMenuTimer
  
  Processing section: .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
  
  Selecting menus.o to define M_longMenuTimer
      Definition:     M_longMenuTimer
      Pushing section .bss.M_longMenuTimer to worklist [originates from symbol M_longMenuTimer]
  
  Processing section: .bss.M_longMenuTimer from menus.o
  
  Selecting er9x.o to define backlightKey()
      Definition:     backlightKey()
      Pushing section .text.backlightKey() to worklist [originates from symbol backlightKey()]
  
  Processing section: .text.backlightKey() from er9x.o
      Load REL relocations for .text.backlightKey() (er9x.o)
  
  Selecting audio.o to define t_voice::voice_process()
      Definition:     t_voice::voice_process()
      Pushing section .text.t_voice::voice_process() to worklist [originates from symbol t_voice::voice_process()]
  
  Processing section: .text.t_voice::voice_process() from audio.o
      Load REL relocations for .text.t_voice::voice_process() (audio.o)
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idivmod
      Definition:     __aeabi_idivmod
      Pushing section .text.libc.__aeabi_idivmod to worklist [originates from symbol __aeabi_idivmod]
  
  Processing section: .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.__aeabi_idivmod (intasmops_arm.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting intasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsr
      Definition:     __aeabi_llsr
      Pushing section .text.libc.__aeabi_llsr to worklist [originates from symbol __aeabi_llsr]
  
  Processing section: .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr
      Definition:     __aeabi_memclr
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr4
      Definition:     __aeabi_memclr4
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memmove
      Definition:     __aeabi_memmove
      Pushing section .text.libc.__aeabi_memmove to worklist [originates from symbol __aeabi_memmove]
  
  Processing section: .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting BoardI6.o to define backlight_off
      Definition:     backlight_off
      Pushing section .text.backlight_off to worklist [originates from symbol backlight_off]
  
  Processing section: .text.backlight_off from BoardI6.o
  
  Selecting BoardI6.o to define backlight_on
      Definition:     backlight_on
      Pushing section .text.backlight_on to worklist [originates from symbol backlight_on]
  
  Processing section: .text.backlight_on from BoardI6.o
  
  Selecting er9x.o to define bchout_ar
      Definition:     bchout_ar
      Pushing section .rodata.bchout_ar to worklist [originates from symbol bchout_ar]
  
  Processing section: .rodata.bchout_ar from er9x.o
  
  Selecting menus.o to define bpanaCenter
      Definition:     bpanaCenter
      Pushing section .bss.bpanaCenter to worklist [originates from symbol bpanaCenter]
  
  Processing section: .bss.bpanaCenter from menus.o
  
  Selecting menus.o to define calibratedStick
      Definition:     calibratedStick
      Pushing section .bss.calibratedStick to worklist [originates from symbol calibratedStick]
  
  Processing section: .bss.calibratedStick from menus.o
  
  Selecting BoardI6.o to define cs_0
      Definition:     cs_0
      Pushing section .text.cs_0 to worklist [originates from symbol cs_0]
  
  Processing section: .text.cs_0 from BoardI6.o
  
  Selecting elrsV2.o to define curselectIdx
      Definition:     curselectIdx
      Pushing section .bss.curselectIdx to worklist [originates from symbol curselectIdx]
  
  Processing section: .bss.curselectIdx from elrsV2.o
  
  Selecting intops.o (libc_v6m_t_le_eabi_small.a) to define div
      Definition:     div
      Pushing section .text.libc.div to worklist [originates from symbol div]
  
  Processing section: .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.div (intops.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting file.o to define eeFs
      Definition:     eeFs
      Pushing section .bss.eeFs to worklist [originates from symbol eeFs]
  
  Processing section: .bss.eeFs from file.o
  
  Selecting er9x.o to define g_LightOffCounter
      Definition:     g_LightOffCounter
      Pushing section .bss.g_LightOffCounter to worklist [originates from symbol g_LightOffCounter]
  
  Processing section: .bss.g_LightOffCounter from er9x.o
  
  Selecting menus.o to define g_latency
      Definition:     g_latency
      Pushing section .bss.g_latency to worklist [originates from symbol g_latency]
  
  Processing section: .bss.g_latency from menus.o
  
  Selecting er9x.o to define g_menuStack
      Definition:     g_menuStack
      Pushing section .bss.g_menuStack to worklist [originates from symbol g_menuStack]
  
  Processing section: .bss.g_menuStack from er9x.o
  
  Selecting er9x.o to define g_menuStackPtr
      Definition:     g_menuStackPtr
      Pushing section .bss.g_menuStackPtr to worklist [originates from symbol g_menuStackPtr]
  
  Processing section: .bss.g_menuStackPtr from er9x.o
  
  Selecting menus.o to define g_posHorz
      Definition:     g_posHorz
      Pushing section .bss.g_posHorz to worklist [originates from symbol g_posHorz]
  
  Processing section: .bss.g_posHorz from menus.o
  
  Selecting er9x.o to define g_ppmIns
      Definition:     g_ppmIns
      Pushing section .bss.g_ppmIns to worklist [originates from symbol g_ppmIns]
  
  Processing section: .bss.g_ppmIns from er9x.o
  
  Selecting er9x.o to define g_vbat100mV
      Definition:     g_vbat100mV
      Pushing section .bss.g_vbat100mV to worklist [originates from symbol g_vbat100mV]
  
  Processing section: .bss.g_vbat100mV from er9x.o
  
  Selecting BoardI6.o to define getADC_osmp
      Definition:     getADC_osmp
      Pushing section .text.getADC_osmp to worklist [originates from symbol getADC_osmp]
  
  Processing section: .text.getADC_osmp from BoardI6.o
      Load REL relocations for .text.getADC_osmp (BoardI6.o)
      Local section:  .rodata.ChannelToPin from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.ChannelToPin from BoardI6.o
  
  Selecting drivers.o to define i2c_buffer
      Definition:     i2c_buffer
      Pushing section .bss.i2c_buffer to worklist [originates from symbol i2c_buffer]
  
  Processing section: .bss.i2c_buffer from drivers.o
  
  Selecting BoardI6.o to define i2c_master
      Definition:     i2c_master
      Pushing section .text.i2c_master to worklist [originates from symbol i2c_master]
  
  Processing section: .text.i2c_master from BoardI6.o
      Load REL relocations for .text.i2c_master (BoardI6.o)
  
  Selecting strops.o (libc_v6m_t_le_eabi_small.a) to define memcmp
      Definition:     memcmp
      Pushing section .text.libc.memcmp to worklist [originates from symbol memcmp]
  
  Processing section: .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting menus.o to define mixToDelete
      Definition:     mixToDelete
      Pushing section .bss.mixToDelete to worklist [originates from symbol mixToDelete]
  
  Processing section: .bss.mixToDelete from menus.o
  
  Selecting er9x.o to define modi12x3
      Definition:     modi12x3
      Pushing section .rodata.modi12x3 to worklist [originates from symbol modi12x3]
  
  Processing section: .rodata.modi12x3 from er9x.o
  
  Selecting crossfire.o to define outputTelemetryBuffer
      Definition:     outputTelemetryBuffer
      Pushing section .bss.outputTelemetryBuffer to worklist [originates from symbol outputTelemetryBuffer]
  
  Processing section: .bss.outputTelemetryBuffer from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferSize
      Definition:     outputTelemetryBufferSize
      Pushing section .bss.outputTelemetryBufferSize to worklist [originates from symbol outputTelemetryBufferSize]
  
  Processing section: .bss.outputTelemetryBufferSize from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferTrigger
      Definition:     outputTelemetryBufferTrigger
      Pushing section .bss.outputTelemetryBufferTrigger to worklist [originates from symbol outputTelemetryBufferTrigger]
  
  Processing section: .bss.outputTelemetryBufferTrigger from crossfire.o
  
  Selecting A7105_SPI.o to define packet
      Definition:     packet
      Pushing section .bss.packet to worklist [originates from symbol packet]
  
  Processing section: .bss.packet from A7105_SPI.o
  
  Selecting A7105_SPI.o to define packet_count
      Definition:     packet_count
      Pushing section .bss.packet_count to worklist [originates from symbol packet_count]
  
  Processing section: .bss.packet_count from A7105_SPI.o
  
  Selecting menus.o to define phyStick
      Definition:     phyStick
      Pushing section .bss.phyStick to worklist [originates from symbol phyStick]
  
  Processing section: .bss.phyStick from menus.o
  
  Selecting audio.o to define play_cmd_buf
      Definition:     play_cmd_buf
      Pushing section .data.play_cmd_buf to worklist [originates from symbol play_cmd_buf]
  
  Processing section: .data.play_cmd_buf from audio.o
  
  Selecting lcd.o to define plotType
      Definition:     plotType
      Pushing section .bss.plotType to worklist [originates from symbol plotType]
  
  Processing section: .bss.plotType from lcd.o
  
  Selecting er9x.o to define ppmInAvailable
      Definition:     ppmInAvailable
      Pushing section .bss.ppmInAvailable to worklist [originates from symbol ppmInAvailable]
  
  Processing section: .bss.ppmInAvailable from er9x.o
  
  Selecting A7105_SPI.o to define prev_power
      Definition:     prev_power
      Pushing section .data.prev_power to worklist [originates from symbol prev_power]
  
  Processing section: .data.prev_power from A7105_SPI.o
  
  Selecting A7105_SPI.o to define protocol_flags
      Definition:     protocol_flags
      Pushing section .bss.protocol_flags to worklist [originates from symbol protocol_flags]
  
  Processing section: .bss.protocol_flags from A7105_SPI.o
  
  Selecting pulses.o to define pulses2MHz
      Definition:     pulses2MHz
      Pushing section .bss.pulses2MHz to worklist [originates from symbol pulses2MHz]
  
  Processing section: .bss.pulses2MHz from pulses.o
  
  Selecting pulses.o to define pxxFlag
      Definition:     pxxFlag
      Pushing section .bss.pxxFlag to worklist [originates from symbol pxxFlag]
  
  Processing section: .bss.pxxFlag from pulses.o
  
  Selecting BoardI6.o to define rd_0
      Definition:     rd_0
      Pushing section .text.rd_0 to worklist [originates from symbol rd_0]
  
  Processing section: .text.rd_0 from BoardI6.o
  
  Selecting BoardI6.o to define rd_1
      Definition:     rd_1
      Pushing section .text.rd_1 to worklist [originates from symbol rd_1]
  
  Processing section: .text.rd_1 from BoardI6.o
  
  Selecting BoardI6.o to define rs_0
      Definition:     rs_0
      Pushing section .text.rs_0 to worklist [originates from symbol rs_0]
  
  Processing section: .text.rs_0 from BoardI6.o
  
  Selecting BoardI6.o to define rs_1
      Definition:     rs_1
      Pushing section .text.rs_1 to worklist [originates from symbol rs_1]
  
  Processing section: .text.rs_1 from BoardI6.o
  
  Selecting BoardI6.o to define rst_0
      Definition:     rst_0
      Pushing section .text.rst_0 to worklist [originates from symbol rst_0]
  
  Processing section: .text.rst_0 from BoardI6.o
  
  Selecting BoardI6.o to define rst_1
      Definition:     rst_1
      Pushing section .text.rst_1 to worklist [originates from symbol rst_1]
  
  Processing section: .text.rst_1 from BoardI6.o
  
  Selecting BoardI6.o to define rw_0
      Definition:     rw_0
      Pushing section .text.rw_0 to worklist [originates from symbol rw_0]
  
  Processing section: .text.rw_0 from BoardI6.o
  
  Selecting er9x.o to define s_anaFilt
      Definition:     s_anaFilt
      Pushing section .bss.s_anaFilt to worklist [originates from symbol s_anaFilt]
  
  Processing section: .bss.s_anaFilt from er9x.o
  
  Selecting menus.o to define s_editMode
      Definition:     s_editMode
      Pushing section .bss.s_editMode to worklist [originates from symbol s_editMode]
  
  Processing section: .bss.s_editMode from menus.o
  
  Selecting menus.o to define s_editing
      Definition:     s_editing
      Pushing section .bss.s_editing to worklist [originates from symbol s_editing]
  
  Processing section: .bss.s_editing from menus.o
  
  Selecting drivers.o to define s_evt
      Definition:     s_evt
      Pushing section .bss.s_evt to worklist [originates from symbol s_evt]
  
  Processing section: .bss.s_evt from drivers.o
  
  Selecting menus.o to define s_mixMaxSel
      Definition:     s_mixMaxSel
      Pushing section .bss.s_mixMaxSel to worklist [originates from symbol s_mixMaxSel]
  
  Processing section: .bss.s_mixMaxSel from menus.o
  
  Selecting menus.o to define s_moveMode
      Definition:     s_moveMode
      Pushing section .bss.s_moveMode to worklist [originates from symbol s_moveMode]
  
  Processing section: .bss.s_moveMode from menus.o
  
  Selecting menus.o to define s_noHi
      Definition:     s_noHi
      Pushing section .bss.s_noHi to worklist [originates from symbol s_noHi]
  
  Processing section: .bss.s_noHi from menus.o
  
  Selecting menus.o to define s_pgOfs
      Definition:     s_pgOfs
      Pushing section .bss.s_pgOfs to worklist [originates from symbol s_pgOfs]
  
  Processing section: .bss.s_pgOfs from menus.o
  
  Selecting menus.o to define s_timer
      Definition:     s_timer
      Pushing section .bss.s_timer to worklist [originates from symbol s_timer]
  
  Processing section: .bss.s_timer from menus.o
  
  Selecting menus.o to define scrollLR
      Definition:     scrollLR
      Pushing section .bss.scrollLR to worklist [originates from symbol scrollLR]
  
  Processing section: .bss.scrollLR from menus.o
  
  Selecting menus.o to define scrollUD
      Definition:     scrollUD
      Pushing section .bss.scrollUD to worklist [originates from symbol scrollUD]
  
  Processing section: .bss.scrollUD from menus.o
  
  Selecting menus.o to define scroll_disabled
      Definition:     scroll_disabled
      Pushing section .bss.scroll_disabled to worklist [originates from symbol scroll_disabled]
  
  Processing section: .bss.scroll_disabled from menus.o
  
  Selecting BoardI6.o to define sei
      Definition:     sei
      Pushing section .text.sei to worklist [originates from symbol sei]
  
  Processing section: .text.sei from BoardI6.o
  
  Selecting pulses.o to define serialDat0
      Definition:     serialDat0
      Pushing section .bss.serialDat0 to worklist [originates from symbol serialDat0]
  
  Processing section: .bss.serialDat0 from pulses.o
  
  Selecting BoardI6.o to define setup_crsf_serial_port
      Definition:     setup_crsf_serial_port
      Pushing section .text.setup_crsf_serial_port to worklist [originates from symbol setup_crsf_serial_port]
  
  Processing section: .text.setup_crsf_serial_port from BoardI6.o
      Load REL relocations for .text.setup_crsf_serial_port (BoardI6.o)
  
  Selecting elrsV2.o to define shacommit
      Definition:     shacommit
      Pushing section .data.shacommit to worklist [originates from symbol shacommit]
  
  Processing section: .data.shacommit from elrsV2.o
  
  Selecting BoardI6.o to define shutdown_crsf_serial_port
      Definition:     shutdown_crsf_serial_port
      Pushing section .text.shutdown_crsf_serial_port to worklist [originates from symbol shutdown_crsf_serial_port]
  
  Processing section: .text.shutdown_crsf_serial_port from BoardI6.o
      Load REL relocations for .text.shutdown_crsf_serial_port (BoardI6.o)
  
  Selecting elrsV2.o to define statusComplete
      Definition:     statusComplete
      Pushing section .bss.statusComplete to worklist [originates from symbol statusComplete]
  
  Processing section: .bss.statusComplete from elrsV2.o
  
  Selecting er9x.o to define stickMoved
      Definition:     stickMoved
      Pushing section .bss.stickMoved to worklist [originates from symbol stickMoved]
  
  Processing section: .bss.stickMoved from er9x.o
  
  Selecting er9x.o to define stickScramble
      Definition:     stickScramble
      Pushing section .rodata.stickScramble to worklist [originates from symbol stickScramble]
  
  Processing section: .rodata.stickScramble from er9x.o
  
  Selecting strasmops_arm.o (libc_v6m_t_le_eabi_small.a) to define strlen
      Definition:     strlen
      Pushing section .text.libc.strlen to worklist [originates from symbol strlen]
  
  Processing section: .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting er9x.o to define sysFlags
      Definition:     sysFlags
      Pushing section .bss.sysFlags to worklist [originates from symbol sysFlags]
  
  Processing section: .bss.sysFlags from er9x.o
  
  Selecting crossfire.o to define telemetryErrors
      Definition:     telemetryErrors
      Pushing section .bss.telemetryErrors to worklist [originates from symbol telemetryErrors]
  
  Processing section: .bss.telemetryErrors from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBuffer
      Definition:     telemetryRxBuffer
      Pushing section .bss.telemetryRxBuffer to worklist [originates from symbol telemetryRxBuffer]
  
  Processing section: .bss.telemetryRxBuffer from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBufferCount
      Definition:     telemetryRxBufferCount
      Pushing section .bss.telemetryRxBufferCount to worklist [originates from symbol telemetryRxBufferCount]
  
  Processing section: .bss.telemetryRxBufferCount from crossfire.o
  
  Selecting pers.o to define theFile
      Definition:     theFile
      Pushing section .bss.theFile to worklist [originates from symbol theFile]
  
  Processing section: .bss.theFile from pers.o
  
  Selecting pers.o to define theWriteFile
      Definition:     theWriteFile
      Pushing section .bss.theWriteFile to worklist [originates from symbol theWriteFile]
  
  Processing section: .bss.theWriteFile from pers.o
  
  Selecting er9x.o to define tick10ms
      Definition:     tick10ms
      Pushing section .bss.tick10ms to worklist [originates from symbol tick10ms]
  
  Processing section: .bss.tick10ms from er9x.o
  
  Selecting er9x.o to define tmrEEPROM
      Definition:     tmrEEPROM
      Pushing section .bss.tmrEEPROM to worklist [originates from symbol tmrEEPROM]
  
  Processing section: .bss.tmrEEPROM from er9x.o
  
  Selecting BoardI6.o to define voice_rx_idx
      Definition:     voice_rx_idx
      Pushing section .bss.voice_rx_idx to worklist [originates from symbol voice_rx_idx]
  
  Processing section: .bss.voice_rx_idx from BoardI6.o
  
  Selecting BoardI6.o to define voice_tx_idx
      Definition:     voice_tx_idx
      Pushing section .bss.voice_tx_idx to worklist [originates from symbol voice_tx_idx]
  
  Processing section: .bss.voice_tx_idx from BoardI6.o
  
  Selecting BoardI6.o to define voice_uart_recv_buf
      Definition:     voice_uart_recv_buf
      Pushing section .bss.voice_uart_recv_buf to worklist [originates from symbol voice_uart_recv_buf]
  
  Processing section: .bss.voice_uart_recv_buf from BoardI6.o
  
  Selecting BoardI6.o to define voice_uart_send_buf
      Definition:     voice_uart_send_buf
      Pushing section .bss.voice_uart_send_buf to worklist [originates from symbol voice_uart_send_buf]
  
  Processing section: .bss.voice_uart_send_buf from BoardI6.o
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet


***************************************************************************************
***                                                                                 ***
***                                   Keep inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Applying keep
      Keeping section .cfm
  Sections that are explicitly kept by the script:
      .cfm
  Keeping symbols set on the command line:
      Reset_Handler
      _start
      _vectors
  Keeping init arrays sections for object files
      Pushing section .init_array to worklist as %init_array is required for this file
      Pushing section .init_array to worklist as %init_array is required for this file


***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Define symbols                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
      Selecting block stack to define __stack_end__
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet
  
  Processing section: .cfm from MKL16Z4_Vectors.o
  
  Processing section: .init_array from SX127x.o
      Load REL relocations for .init_array (SX127x.o)
      Local section:  .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o using relocation R_ARM_TARGET1
  
  Processing section: .init_array from ELRS.o
      Load REL relocations for .init_array (ELRS.o)
      Local section:  .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Load REL relocations for .text._GLOBAL__sub_I_SX127x.cpp (SX127x.o)
      Reference:      SX127xHal::SX127xHal()
      Reference:      hal
  
  Processing section: .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Load REL relocations for .text._GLOBAL__sub_I_ELRS.cpp (ELRS.o)
      Reference:      SX127xDriver::SX127xDriver()
      Reference:      GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Reference:      StubbornReceiver::StubbornReceiver(unsigned char)
      Reference:      StubbornSender::StubbornSender(unsigned char)
      Reference:      Radio
      Reference:      ota_crc
      Reference:      LQCalc
      Reference:      TelemetryReceiver
      Reference:      MspSender
  
  Selecting ELRS.o to define LQCalc
      Definition:     LQCalc
      Pushing section .bss.LQCalc to worklist [originates from symbol LQCalc]
  
  Processing section: .bss.LQCalc from ELRS.o
  
  Selecting ELRS.o to define MspSender
      Definition:     MspSender
      Pushing section .bss.MspSender to worklist [originates from symbol MspSender]
  
  Processing section: .bss.MspSender from ELRS.o
  
  Selecting ELRS.o to define Radio
      Definition:     Radio
      Pushing section .bss.Radio to worklist [originates from symbol Radio]
  
  Processing section: .bss.Radio from ELRS.o
  
  Selecting ELRS.o to define TelemetryReceiver
      Definition:     TelemetryReceiver
      Pushing section .bss.TelemetryReceiver to worklist [originates from symbol TelemetryReceiver]
  
  Processing section: .bss.TelemetryReceiver from ELRS.o
  
  Selecting SX127x.o to define SX127xDriver::SX127xDriver()
      Definition:     SX127xDriver::SX127xDriver()
      Pushing section .text.SX127xDriver::SX127xDriver() to worklist [originates from symbol SX127xDriver::SX127xDriver()]
  
  Processing section: .text.SX127xDriver::SX127xDriver() from SX127x.o
      Load REL relocations for .text.SX127xDriver::SX127xDriver() (SX127x.o)
      Reference:      SX127xDriver::instance
  
  Selecting SX127x.o to define SX127xDriver::instance
      Definition:     SX127xDriver::instance
      Pushing section .bss.SX127xDriver::instance to worklist [originates from symbol SX127xDriver::instance]
  
  Processing section: .bss.SX127xDriver::instance from SX127x.o
  
  Selecting crc.o to define GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Definition:     GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Pushing section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) to worklist [originates from symbol GENERIC_CRC14::GENERIC_CRC14(unsigned short)]
  
  Processing section: .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
  
  Selecting stubborn_sender.o to define StubbornSender::StubbornSender(unsigned char)
      Definition:     StubbornSender::StubbornSender(unsigned char)
      Pushing section .text.StubbornSender::StubbornSender(unsigned char) to worklist [originates from symbol StubbornSender::StubbornSender(unsigned char)]
  
  Processing section: .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Load REL relocations for .text.StubbornSender::StubbornSender(unsigned char) (stubborn_sender.o)
      Reference:      StubbornSender::ResetState()
  
  Selecting stubborn_sender.o to define StubbornSender::ResetState()
      Definition:     StubbornSender::ResetState()
      Pushing section .text.StubbornSender::ResetState() to worklist [originates from symbol StubbornSender::ResetState()]
  
  Processing section: .text.StubbornSender::ResetState() from stubborn_sender.o
  
  Selecting stubborn_receiver.o to define StubbornReceiver::StubbornReceiver(unsigned char)
      Definition:     StubbornReceiver::StubbornReceiver(unsigned char)
      Pushing section .text.StubbornReceiver::StubbornReceiver(unsigned char) to worklist [originates from symbol StubbornReceiver::StubbornReceiver(unsigned char)]
  
  Processing section: .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
  
  Selecting SX127xHal.o to define SX127xHal::SX127xHal()
      Definition:     SX127xHal::SX127xHal()
      Pushing section .text.SX127xHal::SX127xHal() to worklist [originates from symbol SX127xHal::SX127xHal()]
  
  Processing section: .text.SX127xHal::SX127xHal() from SX127xHal.o
      Load REL relocations for .text.SX127xHal::SX127xHal() (SX127xHal.o)
      Reference:      SX127xHal::instance
  
  Selecting SX127xHal.o to define SX127xHal::instance
      Definition:     SX127xHal::instance
      Pushing section .bss.SX127xHal::instance to worklist [originates from symbol SX127xHal::instance]
  
  Processing section: .bss.SX127xHal::instance from SX127xHal.o
  
  Selecting SX127x.o to define hal
      Definition:     hal
      Pushing section .bss.hal to worklist [originates from symbol hal]
  
  Processing section: .bss.hal from SX127x.o
  
  Selecting ELRS.o to define ota_crc
      Definition:     ota_crc
      Pushing section .bss.ota_crc to worklist [originates from symbol ota_crc]
  
  Processing section: .bss.ota_crc from ELRS.o
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_ctors has zero selector size, not included yet


***************************************************************************************
***                                                                                 ***
***                                 Rewrite headers                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Check allocatable                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Merge sections                                  ***
***                                                                                 ***
***************************************************************************************

  Shared references:
      U32 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes
      U64 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes


***************************************************************************************
***                                                                                 ***
***                                  Merge strings                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                               Analyze attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Function inlining                                ***
***                                                                                 ***
***************************************************************************************

  Pass #1
      12 changes made
  Pass #2
      0 changes made
  Redundant sections:
      section .text.sei from BoardI6.o, size=4
      section .text.cli from BoardI6.o, size=4
      section .text.audioQueue::audioQueue() from audio.o, size=2
      section .text.telemItemValid(unsigned char) from menus.o, size=4
      section .text.ActionAFHDS from AFHDS.o, size=2
      section .text.libc.__aeabi_idiv0 from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size=6
  Statistics:
      Estimated savings of 22 bytes by inlining


***************************************************************************************
***                                                                                 ***
***                                Function inlining                                ***
***                                                                                 ***
***************************************************************************************

  Pass #1
      0 changes made
  Redundant sections:
  Statistics:
      Estimated savings of 0 bytes by inlining


***************************************************************************************
***                                                                                 ***
***                                Auto-at sections                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Select inputs                                  ***
***                                                                                 ***
***************************************************************************************

  Select inputs for block vectors
      Select section .vectors (_vectors) [size 192] from MKL16Z4_Vectors.o using name
  Select inputs for block vectors_ram
  Select inputs for inline block <#1> at line 61, col 85
      Select section .init_array ([.init_array]) [size 4] from er9x.o using attribute or mask
      Select section .init_array ([.init_array]) [size 4] from SX127x.o using attribute or mask
      Select section .init_array ([.init_array]) [size 4] from ELRS.o using attribute or mask
  Select inputs for block ctors
      Select inline block <#1> at line 61, col 85 ([<#1> at line 61, col 85]) [size 0] from [ Linker created ] using name
  Select inputs for inline block <#2> at line 62, col 85
  Select inputs for block dtors
      Select inline block <#2> at line 62, col 85 ([<#2> at line 62, col 85]) [size 0] from [ Linker created ] using name
  Select inputs for block exidx
  Select inputs for block tbss
  Select inputs for block tdata
  Select inputs for block tls
      Select block tbss ([tbss]) [size 0] from [ Linker created ] using name
      Select block tdata ([tdata]) [size 0] from [ Linker created ] using name
  Select inputs for block tdata_load
      Select copy of block tdata ([tdata]) [size 0] from [ Linker created ] using name
  Select inputs for block heap
  Select inputs for block stack
  Select inputs for block cfm
      Select section .cfm (BackDoorKey) [size 16] from MKL16Z4_Vectors.o using name
  Select inputs for 'place at start' block <#5> at line 97, col 45
      Select block vectors ([vectors]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at start' block <#6> at line 98, col 45
      Select block cfm ([cfm]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at start' block <#10> at line 119, col 45
      Select block vectors_ram ([vectors_ram]) [size 0] from [ Linker created ] using name
  Select inputs for 'place at end' block <#14> at line 129, col 45
      Select block stack ([stack]) [size 256] from [ Linker created ] using name
  Select inputs for 'place in' block <#3> at line 90, col 44
  Select inputs for 'place in' block <#4> at line 91, col 44
  Select inputs for 'place in' block <#7> at line 99, col 45
      Select block exidx ([exidx]) [size 0] from [ Linker created ] using name
      Select block ctors ([ctors]) [size 0] from [ Linker created ] using name
      Select block dtors ([dtors]) [size 0] from [ Linker created ] using name
      Select section .init.SystemInit (SystemInit) [size 148] from system_MKL16Z4.o using wildcard
      Select section .init._start (_start) [size 20] from SEGGER_THUMB_Startup.o using wildcard
      Select section .text.lcdSetRefVolt(unsigned char) (lcdSetRefVolt(unsigned char)) [size 32] from lcd.o using wildcard
      Select section .text.lcdSendCtl(unsigned char) (lcdSendCtl(unsigned char)) [size 32] from lcd.o using wildcard
      Select section .text.lcdSetContrast() (lcdSetContrast()) [size 16] from lcd.o using wildcard
      Select section .text.lcd_clear() (lcd_clear()) [size 20] from lcd.o using wildcard
      Select section .text.lcd_init() (lcd_init()) [size 88] from lcd.o using wildcard
      Select section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)) [size 292] from lcd.o using wildcard
      Select section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)) [size 50] from lcd.o using wildcard
      Select section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) [size 42] from lcd.o using wildcard
      Select section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) [size 26] from lcd.o using wildcard
      Select section .text.lcd_putc(unsigned char, unsigned char, char) (lcd_putc(unsigned char, unsigned char, char)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_puts_Pleft(unsigned char, char const*) (lcd_puts_Pleft(unsigned char, char const*)) [size 16] from lcd.o using wildcard
      Select section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd_puts_Pskip(unsigned char, char const*, unsigned char)) [size 38] from lcd.o using wildcard
      Select section .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd_puts_P(unsigned char, unsigned char, char const*)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)) [size 16] from lcd.o using wildcard
      Select section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd_outhex4(unsigned char, unsigned char, unsigned short)) [size 66] from lcd.o using wildcard
      Select section .text.lcd_write_bits(unsigned char*, unsigned char) (lcd_write_bits(unsigned char*, unsigned char)) [size 52] from lcd.o using wildcard
      Select section .text.lcd_plot(unsigned char, unsigned char) (lcd_plot(unsigned char, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd_vline(unsigned char, unsigned char, signed char)) [size 120] from lcd.o using wildcard
      Select section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)) [size 100] from lcd.o using wildcard
      Select section .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd_hline(unsigned char, unsigned char, signed char)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)) [size 20] from lcd.o using wildcard
      Select section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)) [size 544] from lcd.o using wildcard
      Select section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)) [size 16] from lcd.o using wildcard
      Select section .text.lcd_outdez(unsigned char, unsigned char, short) (lcd_outdez(unsigned char, unsigned char, short)) [size 10] from lcd.o using wildcard
      Select section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)) [size 56] from lcd.o using wildcard
      Select section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)) [size 70] from lcd.o using wildcard
      Select section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)) [size 24] from lcd.o using wildcard
      Select section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 74] from lcd.o using wildcard
      Select section .text.refreshDiplay() (refreshDiplay()) [size 140] from lcd.o using wildcard
      Select section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)) [size 76] from lcd.o using wildcard
      Select section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)) [size 132] from lcd.o using wildcard
      Select section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (putsVolts(unsigned char, unsigned char, short, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.putsVBat(unsigned char, unsigned char, unsigned char) (putsVBat(unsigned char, unsigned char, unsigned char)) [size 40] from lcd.o using wildcard
      Select section .text.HW_Init (HW_Init) [size 944] from BoardI6.o using wildcard
      Select section .text.mDelay (mDelay) [size 40] from BoardI6.o using wildcard
      Select section .text.getADC_osmp (getADC_osmp) [size 96] from BoardI6.o using wildcard
      Select section .text.backlight_on (backlight_on) [size 12] from BoardI6.o using wildcard
      Select section .text.backlight_off (backlight_off) [size 12] from BoardI6.o using wildcard
      Select section .text.rd_1 (rd_1) [size 16] from BoardI6.o using wildcard
      Select section .text.rd_0 (rd_0) [size 16] from BoardI6.o using wildcard
      Select section .text.cs_0 (cs_0) [size 12] from BoardI6.o using wildcard
      Select section .text.rw_0 (rw_0) [size 16] from BoardI6.o using wildcard
      Select section .text.rs_1 (rs_1) [size 16] from BoardI6.o using wildcard
      Select section .text.rs_0 (rs_0) [size 16] from BoardI6.o using wildcard
      Select section .text.rst_1 (rst_1) [size 12] from BoardI6.o using wildcard
      Select section .text.rst_0 (rst_0) [size 12] from BoardI6.o using wildcard
      Select section .text.PINB (PINB) [size 96] from BoardI6.o using wildcard
      Select section .text.PIND (PIND) [size 100] from BoardI6.o using wildcard
      Select section .text.PINE (PINE) [size 84] from BoardI6.o using wildcard
      Select section .text.PING (PING) [size 44] from BoardI6.o using wildcard
      Select section .text.LCD_DATA (LCD_DATA) [size 36] from BoardI6.o using wildcard
      Select section .text.Buzzer_SetVal (Buzzer_SetVal) [size 16] from BoardI6.o using wildcard
      Select section .text.Buzzer_ClrVal (Buzzer_ClrVal) [size 16] from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_SendBlock (SPI_RADIO_SendBlock) [size 52] from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_ReceiveBlock (SPI_RADIO_ReceiveBlock) [size 76] from BoardI6.o using wildcard
      Select section .text.a7105_csn_on (a7105_csn_on) [size 12] from BoardI6.o using wildcard
      Select section .text.a7105_csn_off (a7105_csn_off) [size 12] from BoardI6.o using wildcard
      Select section .text.RF0_SetVal (RF0_SetVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF0_ClrVal (RF0_ClrVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF1_SetVal (RF1_SetVal) [size 12] from BoardI6.o using wildcard
      Select section .text.RF1_ClrVal (RF1_ClrVal) [size 12] from BoardI6.o using wildcard
      Select section .text.TX_RX_PutVal (TX_RX_PutVal) [size 16] from BoardI6.o using wildcard
      Select section .text.EnableGIO (EnableGIO) [size 28] from BoardI6.o using wildcard
      Select section .text.DisableGIO (DisableGIO) [size 20] from BoardI6.o using wildcard
      Select section .text.i2c_master (i2c_master) [size 352] from BoardI6.o using wildcard
      Select section .text.GetPPMOutState (GetPPMOutState) [size 16] from BoardI6.o using wildcard
      Select section .text.SetPPMTimCompare (SetPPMTimCompare) [size 12] from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompare (GetPPMTimCompare) [size 12] from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompareInterruptFlag (GetPPMTimCompareInterruptFlag) [size 16] from BoardI6.o using wildcard
      Select section .text.ClearPPMTimCompareInterruptFlag (ClearPPMTimCompareInterruptFlag) [size 16] from BoardI6.o using wildcard
      Select section .text.EnablePPMTim (EnablePPMTim) [size 12] from BoardI6.o using wildcard
      Select section .text.EnablePPMOut (EnablePPMOut) [size 12] from BoardI6.o using wildcard
      Select section .text.DisablePPMOut (DisablePPMOut) [size 12] from BoardI6.o using wildcard
      Select section .text.EnablePRTTim (EnablePRTTim) [size 12] from BoardI6.o using wildcard
      Select section .text.DisablePRTTim (DisablePRTTim) [size 12] from BoardI6.o using wildcard
      Select section .text.SetPRTTimPeriod (SetPRTTimPeriod) [size 32] from BoardI6.o using wildcard
      Select section .text.GetChipID (GetChipID) [size 24] from BoardI6.o using wildcard
      Select section .text.PIT_IRQHandler (PIT_IRQHandler) [size 72] from BoardI6.o using wildcard
      Select section .text.TPM1_IRQHandler (TPM1_IRQHandler) [size 28] from BoardI6.o using wildcard
      Select section .text.SPI0_IRQHandler (SPI0_IRQHandler) [size 108] from BoardI6.o using wildcard
      Select section .text.PORTC_PORTD_IRQHandler (PORTC_PORTD_IRQHandler) [size 56] from BoardI6.o using wildcard
      Select section .text.TPM0_IRQHandler (TPM0_IRQHandler) [size 96] from BoardI6.o using wildcard
      Select section .text.TPM2_IRQHandler (TPM2_IRQHandler) [size 28] from BoardI6.o using wildcard
      Select section .text.set_lpsci_direction(bool) (set_lpsci_direction(bool)) [size 128] from BoardI6.o using wildcard
      Select section .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) (submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)) [size 116] from BoardI6.o using wildcard
      Select section .text.start_lpsci_DMA_receive() (start_lpsci_DMA_receive()) [size 68] from BoardI6.o using wildcard
      Select section .text.setup_crsf_serial_port (setup_crsf_serial_port) [size 268] from BoardI6.o using wildcard
      Select section .text.stop_dma_receive() (stop_dma_receive()) [size 60] from BoardI6.o using wildcard
      Select section .text.process_read_dma_data() (process_read_dma_data()) [size 60] from BoardI6.o using wildcard
      Select section .text.crsf_send_data (crsf_send_data) [size 76] from BoardI6.o using wildcard
      Select section .text.DMA0_IRQHandler (DMA0_IRQHandler) [size 92] from BoardI6.o using wildcard
      Select section .text.crsf_is_sending (crsf_is_sending) [size 16] from BoardI6.o using wildcard
      Select section .text.shutdown_crsf_serial_port (shutdown_crsf_serial_port) [size 152] from BoardI6.o using wildcard
      Select section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) (serialVoiceInit(void (*)(unsigned char*, unsigned char))) [size 88] from BoardI6.o using wildcard
      Select section .text.sendSerialVoiceData(unsigned char*, unsigned int) (sendSerialVoiceData(unsigned char*, unsigned int)) [size 44] from BoardI6.o using wildcard
      Select section .text.UART2_IRQHandler (UART2_IRQHandler) [size 112] from BoardI6.o using wildcard
      Select section .text.modeFixValue(unsigned char) (modeFixValue(unsigned char)) [size 28] from er9x.o using wildcard
      Select section .text.get_tmr10ms() (get_tmr10ms()) [size 12] from er9x.o using wildcard
      Select section .text.CS_STATE(unsigned char) (CS_STATE(unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.mixaddress(unsigned char) (mixaddress(unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.throttleReversed() (throttleReversed()) [size 28] from er9x.o using wildcard
      Select section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)) [size 136] from er9x.o using wildcard
      Select section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (putsChn(unsigned char, unsigned char, unsigned char, unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) [size 46] from er9x.o using wildcard
      Select section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) [size 120] from er9x.o using wildcard
      Select section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)) [size 164] from er9x.o using wildcard
      Select section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)) [size 120] from er9x.o using wildcard
      Select section .text.getValue(unsigned char) (getValue(unsigned char)) [size 112] from er9x.o using wildcard
      Select section .text.getSwitch00(signed char) (getSwitch00(signed char)) [size 12] from er9x.o using wildcard
      Select section .text.getSwitch(signed char, bool, unsigned char) (getSwitch(signed char, bool, unsigned char)) [size 488] from er9x.o using wildcard
      Select section .text.calc100toRESX(signed char) (calc100toRESX(signed char)) [size 22] from er9x.o using wildcard
      Select section .text.check_backlight_voice() (check_backlight_voice()) [size 76] from er9x.o using wildcard
      Select section .text.stickMoveValue() (stickMoveValue()) [size 32] from er9x.o using wildcard
      Select section .text.anaIn(unsigned char) (anaIn(unsigned char)) [size 60] from er9x.o using wildcard
      Select section .text.almess(char const*, unsigned char) (almess(char const*, unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.message(char const*) (message(char const*)) [size 14] from er9x.o using wildcard
      Select section .text.alert(char const*) (alert(char const*)) [size 10] from er9x.o using wildcard
      Select section .text.alertx(char const*, bool) (alertx(char const*, bool)) [size 112] from er9x.o using wildcard
      Select section .text.clearKeyEvents() (clearKeyEvents()) [size 24] from er9x.o using wildcard
      Select section .text.keyDown() (keyDown()) [size 14] from er9x.o using wildcard
      Select section .text.checkThrottlePosition() (checkThrottlePosition()) [size 76] from er9x.o using wildcard
      Select section .text.checkTHR() (checkTHR()) [size 76] from er9x.o using wildcard
      Select section .text.putWarnSwitch(unsigned char, unsigned char) (putWarnSwitch(unsigned char, unsigned char)) [size 28] from er9x.o using wildcard
      Select section .text.getCurrentSwitchStates() (getCurrentSwitchStates()) [size 34] from er9x.o using wildcard
      Select section .text.checkSwitches() (checkSwitches()) [size 228] from er9x.o using wildcard
      Select section .text.getFlightPhase() (getFlightPhase()) [size 52] from er9x.o using wildcard
      Select section .text.getRawTrimValue(unsigned char, unsigned char) (getRawTrimValue(unsigned char, unsigned char)) [size 60] from er9x.o using wildcard
      Select section .text.getTrimFlightPhase(unsigned char, unsigned char) (getTrimFlightPhase(unsigned char, unsigned char)) [size 66] from er9x.o using wildcard
      Select section .text.getTrimValue(unsigned char, unsigned char) (getTrimValue(unsigned char, unsigned char)) [size 16] from er9x.o using wildcard
      Select section .text.setTrimValue(unsigned char, unsigned char, short) (setTrimValue(unsigned char, unsigned char, short)) [size 96] from er9x.o using wildcard
      Select section .text.checkIncDec16(short, short, short, unsigned char) (checkIncDec16(short, short, short, unsigned char)) [size 392] from er9x.o using wildcard
      Select section .text.checkIncDec(signed char, signed char, signed char, unsigned char) (checkIncDec(signed char, signed char, signed char, unsigned char)) [size 10] from er9x.o using wildcard
      Select section .text.checkIncDec_i8(signed char, signed char, signed char) (checkIncDec_i8(signed char, signed char, signed char)) [size 16] from er9x.o using wildcard
      Select section .text.checkIncDec_0(signed char, signed char) (checkIncDec_0(signed char, signed char)) [size 20] from er9x.o using wildcard
      Select section .text.checkIncDec_u0(short, unsigned char) (checkIncDec_u0(short, unsigned char)) [size 20] from er9x.o using wildcard
      Select section .text.popMenu(bool) (popMenu(bool)) [size 72] from er9x.o using wildcard
      Select section .text.chainMenu(void (*)(unsigned char)) (chainMenu(void (*)(unsigned char))) [size 32] from er9x.o using wildcard
      Select section .text.pushMenu(void (*)(unsigned char)) (pushMenu(void (*)(unsigned char))) [size 52] from er9x.o using wildcard
      Select section .text.backlightKey() (backlightKey()) [size 32] from er9x.o using wildcard
      Select section .text.doBackLightVoice(unsigned char) (doBackLightVoice(unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.calcStickScroll(unsigned char) (calcStickScroll(unsigned char)) [size 92] from er9x.o using wildcard
      Select section .text.getGvarSourceValue(unsigned char) (getGvarSourceValue(unsigned char)) [size 116] from er9x.o using wildcard
      Select section .text.ISR_TIMER2_OVF_vect (ISR_TIMER2_OVF_vect) [size 24] from er9x.o using wildcard
      Select section .text.audioQueue::driver() (audioQueue::driver()) [size 56] from er9x.o using wildcard
      Select section .text.ISR_TIMER0_COMP_vect (ISR_TIMER0_COMP_vect) [size 80] from er9x.o using wildcard
      Select section .text.mainER() (mainER()) [size 544] from er9x.o using wildcard
      Select section .text.mainSequence() (mainSequence()) [size 1944] from er9x.o using wildcard
      Select section .text.doVoiceAlarmSource(t_voiceAlarm*) (doVoiceAlarmSource(t_voiceAlarm*)) [size 40] from er9x.o using wildcard
      Select section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (procOneVoiceAlarm(t_voiceAlarm*, unsigned char)) [size 732] from er9x.o using wildcard
      Select section .text.processVoiceAlarms() (processVoiceAlarms()) [size 32] from er9x.o using wildcard
      Select section .text.calc1000toRESX(short) (calc1000toRESX(short)) [size 16] from er9x.o using wildcard
      Select section .text.REG100_100(signed char) (REG100_100(signed char)) [size 14] from er9x.o using wildcard
      Select section .text.REG(signed char, signed char, signed char) (REG(signed char, signed char, signed char)) [size 56] from er9x.o using wildcard
      Select section .text.IS_EXPO_THROTTLE(unsigned char) (IS_EXPO_THROTTLE(unsigned char)) [size 20] from er9x.o using wildcard
      Select section .text._GLOBAL__sub_I_er9x.cpp (_GLOBAL__sub_I_er9x.cpp) [size 16] from er9x.o using wildcard
      Select section .text.A7105_AntSwitch() (A7105_AntSwitch()) [size 40] from A7105_SPI.o using wildcard
      Select section .text.A7105_SetTxRxMode(unsigned char) (A7105_SetTxRxMode(unsigned char)) [size 8] from A7105_SPI.o using wildcard
      Select section .text.A7105_Strobe(unsigned char) (A7105_Strobe(unsigned char)) [size 28] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_WriteReg(unsigned char, unsigned char)) [size 30] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteData(unsigned char, unsigned char) (A7105_WriteData(unsigned char, unsigned char)) [size 80] from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadData(unsigned char) (A7105_ReadData(unsigned char)) [size 48] from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadReg(unsigned char) (A7105_ReadReg(unsigned char)) [size 44] from A7105_SPI.o using wildcard
      Select section .text.A7105_Reset() (A7105_Reset()) [size 40] from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteID(unsigned int) (A7105_WriteID(unsigned int)) [size 44] from A7105_SPI.o using wildcard
      Select section .text.A7105_SetPower() (A7105_SetPower()) [size 52] from A7105_SPI.o using wildcard
      Select section .text.A7105_AdjustLOBaseFreq() (A7105_AdjustLOBaseFreq()) [size 100] from A7105_SPI.o using wildcard
      Select section .text.A7105_Sleep() (A7105_Sleep()) [size 16] from A7105_SPI.o using wildcard
      Select section .text.A7105_Init() (A7105_Init()) [size 204] from A7105_SPI.o using wildcard
      Select section .text.convert_failsafe_ppm(unsigned char) (convert_failsafe_ppm(unsigned char)) [size 56] from A7105_SPI.o using wildcard
      Select section .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_build_packet(unsigned char)) [size 344] from AFHDS2A_a7105.o using wildcard
      Select section .text.ActionAFHDS2A (ActionAFHDS2A) [size 988] from AFHDS2A_a7105.o using wildcard
      Select section .text.initAFHDS2A (initAFHDS2A) [size 180] from AFHDS2A_a7105.o using wildcard
      Select section .text.processFlySkySensor(unsigned char const*, unsigned char) (processFlySkySensor(unsigned char const*, unsigned char)) [size 332] from AFHDS2A_a7105.o using wildcard
      Select section .text.DoSum(unsigned char*, unsigned char) (DoSum(unsigned char*, unsigned char)) [size 36] from audio.o using wildcard
      Select section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) (Uart_SendCMD(unsigned char, unsigned char, unsigned short)) [size 40] from audio.o using wildcard
      Select section .text.audioQueue::busy() (audioQueue::busy()) [size 8] from audio.o using wildcard
      Select section .text.audioQueue::heartbeat() (audioQueue::heartbeat()) [size 128] from audio.o using wildcard
      Select section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)) [size 192] from audio.o using wildcard
      Select section .text.audioQueue::getToneLength(unsigned char) (audioQueue::getToneLength(unsigned char)) [size 64] from audio.o using wildcard
      Select section .text.audioQueue::event(unsigned char, unsigned char) (audioQueue::event(unsigned char, unsigned char)) [size 828] from audio.o using wildcard
      Select section .text.audioDefevent(unsigned char) (audioDefevent(unsigned char)) [size 20] from audio.o using wildcard
      Select section .text.audioEvent(unsigned char, unsigned short) (audioEvent(unsigned char, unsigned short)) [size 20] from audio.o using wildcard
      Select section .text.audioVoiceDefevent(unsigned char, unsigned char) (audioVoiceDefevent(unsigned char, unsigned char)) [size 28] from audio.o using wildcard
      Select section .text.putVoiceQueue(unsigned char) (putVoiceQueue(unsigned char)) [size 8] from audio.o using wildcard
      Select section .text.voice_numeric(short, unsigned char, unsigned char) (voice_numeric(short, unsigned char, unsigned char)) [size 246] from audio.o using wildcard
      Select section .text.putVoiceQueueUpper(unsigned char) (putVoiceQueueUpper(unsigned char)) [size 14] from audio.o using wildcard
      Select section .text.putVoiceQueueLong(unsigned short) (putVoiceQueueLong(unsigned short)) [size 44] from audio.o using wildcard
      Select section .text.setVolume(unsigned char) (setVolume(unsigned char)) [size 32] from audio.o using wildcard
      Select section .text.on_voice_cb(unsigned char*, unsigned char) (on_voice_cb(unsigned char*, unsigned char)) [size 28] from audio.o using wildcard
      Select section .text.t_voice::voice_process() (t_voice::voice_process()) [size 132] from audio.o using wildcard
      Select section .text.ee_waite() (ee_waite()) [size 36] from drivers.o using wildcard
      Select section .text.eeprom_read_block(void*, void const*, unsigned int) (eeprom_read_block(void*, void const*, unsigned int)) [size 68] from drivers.o using wildcard
      Select section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (eeprom_write_page_cmp(char const*, unsigned short, unsigned int)) [size 344] from drivers.o using wildcard
      Select section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (eeWriteBlockCmp(void const*, unsigned short, unsigned int)) [size 68] from drivers.o using wildcard
      Select section .text.Key::input(bool, EnumKeys) (Key::input(bool, EnumKeys)) [size 196] from drivers.o using wildcard
      Select section .text.menuPressed() (menuPressed()) [size 32] from drivers.o using wildcard
      Select section .text.switchPosition(unsigned char) (switchPosition(unsigned char)) [size 12] from drivers.o using wildcard
      Select section .text.keyState(EnumKeys) (keyState(EnumKeys)) [size 136] from drivers.o using wildcard
      Select section .text.pauseEvents(unsigned char) (pauseEvents(unsigned char)) [size 32] from drivers.o using wildcard
      Select section .text.killEvents(unsigned char) (killEvents(unsigned char)) [size 28] from drivers.o using wildcard
      Select section .text.per10ms() (per10ms()) [size 216] from drivers.o using wildcard
      Select section .text.EeFsGetFree() (EeFsGetFree()) [size 32] from file.o using wildcard
      Select section .text.EeFsGetLink(unsigned char) (EeFsGetLink(unsigned char)) [size 10] from file.o using wildcard
      Select section .text.EeFsck() (EeFsck()) [size 164] from file.o using wildcard
      Select section .text.EeFsSetLink(unsigned char, unsigned char) (EeFsSetLink(unsigned char, unsigned char)) [size 22] from file.o using wildcard
      Select section .text.EeFsFlush() (EeFsFlush()) [size 20] from file.o using wildcard
      Select section .text.EeFsFlushFreelist() (EeFsFlushFreelist()) [size 20] from file.o using wildcard
      Select section .text.EeFsFormat() (EeFsFormat()) [size 60] from file.o using wildcard
      Select section .text.EeFsOpen() (EeFsOpen()) [size 48] from file.o using wildcard
      Select section .text.EFile::exists(unsigned char) (EFile::exists(unsigned char)) [size 20] from file.o using wildcard
      Select section .text.EFile::swap(unsigned char, unsigned char) (EFile::swap(unsigned char, unsigned char)) [size 64] from file.o using wildcard
      Select section .text.EFile::rm(unsigned char) (EFile::rm(unsigned char)) [size 40] from file.o using wildcard
      Select section .text.EeFsFree(unsigned char) (EeFsFree(unsigned char)) [size 48] from file.o using wildcard
      Select section .text.EFile::size() (EFile::size()) [size 32] from file.o using wildcard
      Select section .text.EFile::openRd(unsigned char) (EFile::openRd(unsigned char)) [size 36] from file.o using wildcard
      Select section .text.EFile::read(unsigned char*, unsigned short) (EFile::read(unsigned char*, unsigned short)) [size 120] from file.o using wildcard
      Select section .text.EFile::readRlc(unsigned char*, unsigned short) (EFile::readRlc(unsigned char*, unsigned short)) [size 114] from file.o using wildcard
      Select section .text.EFile::write(unsigned char*, unsigned char) (EFile::write(unsigned char*, unsigned char)) [size 196] from file.o using wildcard
      Select section .text.EeFsAlloc() (EeFsAlloc()) [size 40] from file.o using wildcard
      Select section .text.EFile::create(unsigned char, unsigned char, unsigned short) (EFile::create(unsigned char, unsigned char, unsigned short)) [size 48] from file.o using wildcard
      Select section .text.EFile::closeTrunc() (EFile::closeTrunc()) [size 88] from file.o using wildcard
      Select section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)) [size 224] from file.o using wildcard
      Select section .text.EeFsRead(unsigned char, unsigned char) (EeFsRead(unsigned char, unsigned char)) [size 24] from file.o using wildcard
      Select section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)) [size 24] from menus.o using wildcard
      Select section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (calc_scaler(unsigned char, unsigned char*, unsigned char*)) [size 204] from menus.o using wildcard
      Select section .text.voiceMinutes(short) (voiceMinutes(short)) [size 28] from menus.o using wildcard
      Select section .text.voice_telem_item(unsigned char) (voice_telem_item(unsigned char)) [size 204] from menus.o using wildcard
      Select section .text.get_telemetry_value(unsigned char) (get_telemetry_value(unsigned char)) [size 116] from menus.o using wildcard
      Select section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)) [size 28] from menus.o using wildcard
      Select section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)) [size 456] from menus.o using wildcard
      Select section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)) [size 44] from menus.o using wildcard
      Select section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)) [size 140] from menus.o using wildcard
      Select section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)) [size 22] from menus.o using wildcard
      Select section .text.get_dr_state(unsigned char) (get_dr_state(unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)) [size 176] from menus.o using wildcard
      Select section .text.char2idx(char) (char2idx(char)) [size 48] from menus.o using wildcard
      Select section .text.idx2char(unsigned char) (idx2char(unsigned char)) [size 20] from menus.o using wildcard
      Select section .text.TITLEP(char const*) (TITLEP(char const*)) [size 16] from menus.o using wildcard
      Select section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)) [size 20] from menus.o using wildcard
      Select section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (checkIndexed(unsigned char, char const*, unsigned char, unsigned char)) [size 144] from menus.o using wildcard
      Select section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (hyphinvMenuItem(unsigned char, unsigned char, unsigned char)) [size 24] from menus.o using wildcard
      Select section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)) [size 32] from menus.o using wildcard
      Select section .text.MState2::check_columns(unsigned char, unsigned char) (MState2::check_columns(unsigned char, unsigned char)) [size 828] from menus.o using wildcard
      Select section .text.telltale(unsigned char, signed char, signed char) (telltale(unsigned char, signed char, signed char)) [size 90] from menus.o using wildcard
      Select section .text.doMainScreenGrphics() (doMainScreenGrphics()) [size 140] from menus.o using wildcard
      Select section .text.drawFunction(unsigned char, unsigned char) (drawFunction(unsigned char, unsigned char)) [size 160] from menus.o using wildcard
      Select section .text.intpol(short, unsigned char) (intpol(short, unsigned char)) [size 116] from menus.o using wildcard
      Select section .text.calcExpo(unsigned char, short) (calcExpo(unsigned char, short)) [size 188] from menus.o using wildcard
      Select section .text.drawCurve(unsigned char) (drawCurve(unsigned char)) [size 136] from menus.o using wildcard
      Select section .text.curveAddress(unsigned char) (curveAddress(unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuProcCurveOne(unsigned char) (menuProcCurveOne(unsigned char)) [size 340] from menus.o using wildcard
      Select section .text.menuProcCurve(unsigned char) (menuProcCurve(unsigned char)) [size 184] from menus.o using wildcard
      Select section .text.evalOffset(signed char) (evalOffset(signed char)) [size 40] from menus.o using wildcard
      Select section .text.setStickCenter() (setStickCenter()) [size 216] from menus.o using wildcard
      Select section .text.perOut(short*, unsigned char) (perOut(short*, unsigned char)) [size 3016] from menus.o using wildcard
      Select section .text.displayNext() (displayNext()) [size 20] from menus.o using wildcard
      Select section .text.menuProcTelemetry(unsigned char) (menuProcTelemetry(unsigned char)) [size 488] from menus.o using wildcard
      Select section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (put_curve(unsigned char, unsigned char, signed char, unsigned char)) [size 52] from menus.o using wildcard
      Select section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (scalerDecimal(unsigned char, unsigned char, unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuScaleOne(unsigned char) (menuScaleOne(unsigned char)) [size 660] from menus.o using wildcard
      Select section .text.menuProcGlobals(unsigned char) (menuProcGlobals(unsigned char)) [size 488] from menus.o using wildcard
      Select section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)) [size 84] from menus.o using wildcard
      Select section .text.menuProcMixOne(unsigned char) (menuProcMixOne(unsigned char)) [size 1232] from menus.o using wildcard
      Select section .text.onoffItem(unsigned char, unsigned char, unsigned char) (onoffItem(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.offonItem(unsigned char, unsigned char, unsigned char) (offonItem(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)) [size 28] from menus.o using wildcard
      Select section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (editSlowDelay(unsigned char, unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.menuMixersLimit(unsigned char) (menuMixersLimit(unsigned char)) [size 44] from menus.o using wildcard
      Select section .text.menuProcMix(unsigned char) (menuProcMix(unsigned char)) [size 1192] from menus.o using wildcard
      Select section .text.reachMixerCountLimit() (reachMixerCountLimit()) [size 36] from menus.o using wildcard
      Select section .text.yesNoMenuExit(unsigned char, char const*) (yesNoMenuExit(unsigned char, char const*)) [size 72] from menus.o using wildcard
      Select section .text.menuDeleteMix(unsigned char) (menuDeleteMix(unsigned char)) [size 112] from menus.o using wildcard
      Select section .text.doPopup(char const*, unsigned char, unsigned char) (doPopup(char const*, unsigned char, unsigned char)) [size 324] from menus.o using wildcard
      Select section .text.insertMix(unsigned char, unsigned char) (insertMix(unsigned char, unsigned char)) [size 112] from menus.o using wildcard
      Select section .text.expou(unsigned short, unsigned short) (expou(unsigned short, unsigned short)) [size 34] from menus.o using wildcard
      Select section .text.expo(short, short) (expo(short, short)) [size 60] from menus.o using wildcard
      Select section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 176] from menus.o using wildcard
      Select section .text.menuDeleteDupModel(unsigned char) (menuDeleteDupModel(unsigned char)) [size 164] from menus.o using wildcard
      Select section .text.menuProcModelSelect(unsigned char) (menuProcModelSelect(unsigned char)) [size 796] from menus.o using wildcard
      Select section .text.menuRangeBind(unsigned char) (menuRangeBind(unsigned char)) [size 164] from menus.o using wildcard
      Select section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) [size 80] from menus.o using wildcard
      Select section .text.menuPhaseOne(unsigned char) (menuPhaseOne(unsigned char)) [size 476] from menus.o using wildcard
      Select section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (dispFlightModename(unsigned char, unsigned char, unsigned char)) [size 36] from menus.o using wildcard
      Select section .text.menuModelPhases(unsigned char) (menuModelPhases(unsigned char)) [size 236] from menus.o using wildcard
      Select section .text.menuProcModelIndex(unsigned char) (menuProcModelIndex(unsigned char)) [size 4280] from menus.o using wildcard
      Select section .text.putc_0_1(unsigned char, unsigned char, unsigned char) (putc_0_1(unsigned char, unsigned char, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.timer() (timer()) [size 808] from menus.o using wildcard
      Select section .text.resetTimer1() (resetTimer1()) [size 20] from menus.o using wildcard
      Select section .text.resetTimer2() (resetTimer2()) [size 10] from menus.o using wildcard
      Select section .text.trace() (trace()) [size 32] from menus.o using wildcard
      Select section .text.putsTimeNoAtt(unsigned char, unsigned char, short) (putsTimeNoAtt(unsigned char, unsigned char, short)) [size 16] from menus.o using wildcard
      Select section .text.menuProcStatistic(unsigned char) (menuProcStatistic(unsigned char)) [size 192] from menus.o using wildcard
      Select section .text.resetTimern(unsigned char) (resetTimern(unsigned char)) [size 56] from menus.o using wildcard
      Select section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)) [size 62] from menus.o using wildcard
      Select section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (displayOneSwitch(unsigned char, unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.switchDisplay(unsigned char, unsigned char) (switchDisplay(unsigned char, unsigned char)) [size 40] from menus.o using wildcard
      Select section .text.dispSignalQality(unsigned char) (dispSignalQality(unsigned char)) [size 84] from menus.o using wildcard
      Select section .text.menuProc0(unsigned char) (menuProc0(unsigned char)) [size 1420] from menus.o using wildcard
      Select section .text.menuProcIndex(unsigned char) (menuProcIndex(unsigned char)) [size 3216] from menus.o using wildcard
      Select section .text.perOutPhase(short*, unsigned char) (perOutPhase(short*, unsigned char)) [size 388] from menus.o using wildcard
      Select section .text.scaleAnalog(short, unsigned char) (scaleAnalog(short, unsigned char)) [size 124] from menus.o using wildcard
      Select section .text.indexProcess(unsigned char, MState2*, unsigned char) (indexProcess(unsigned char, MState2*, unsigned char)) [size 180] from menus.o using wildcard
      Select section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)) [size 108] from menus.o using wildcard
      Select section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)) [size 18] from menus.o using wildcard
      Select section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)) [size 48] from menus.o using wildcard
      Select section .text.menuProcVoiceOne(unsigned char) (menuProcVoiceOne(unsigned char)) [size 1140] from menus.o using wildcard
      Select section .text.menuProcVoiceAlarm(unsigned char) (menuProcVoiceAlarm(unsigned char)) [size 280] from menus.o using wildcard
      Select section .text.rangeBindAction(unsigned char, unsigned char) (rangeBindAction(unsigned char, unsigned char)) [size 60] from menus.o using wildcard
      Select section .text.menuRXSetup(unsigned char) (menuRXSetup(unsigned char)) [size 192] from menus.o using wildcard
      Select section .text.menuSetFailsafe(unsigned char) (menuSetFailsafe(unsigned char)) [size 456] from menus.o using wildcard
      Select section .text.menuProcProtocol(unsigned char) (menuProcProtocol(unsigned char)) [size 796] from menus.o using wildcard
      Select section .text.SetStartPulsePol() (SetStartPulsePol()) [size 72] from pulses.o using wildcard
      Select section .text.ISR_TIMER1_COMPA_vect (ISR_TIMER1_COMPA_vect) [size 68] from pulses.o using wildcard
      Select section .text.setupPulses() (setupPulses()) [size 196] from pulses.o using wildcard
      Select section .text.startPulses() (startPulses()) [size 40] from pulses.o using wildcard
      Select section .text.setupPulsesPPM(unsigned char) (setupPulsesPPM(unsigned char)) [size 236] from pulses.o using wildcard
      Select section .text.clearMixes() (clearMixes()) [size 20] from templates.o using wildcard
      Select section .text.setMix(unsigned char, unsigned char) (setMix(unsigned char, unsigned char)) [size 88] from templates.o using wildcard
      Select section .text.applyTemplate() (applyTemplate()) [size 92] from templates.o using wildcard
      Select section .text.main (main) [size 14] from main.o using wildcard
      Select section .text.initAFHDS (initAFHDS) [size 144] from AFHDS.o using wildcard
      Select section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)) [size 52] from elrsV2.o using wildcard
      Select section .text.crossfireTelemetryPing() (crossfireTelemetryPing()) [size 52] from elrsV2.o using wildcard
      Select section .text.parseDeviceInfoMessage(unsigned char*) (parseDeviceInfoMessage(unsigned char*)) [size 88] from elrsV2.o using wildcard
      Select section .text.parseParameterInfoMessage(unsigned char*, unsigned char) (parseParameterInfoMessage(unsigned char*, unsigned char)) [size 872] from elrsV2.o using wildcard
      Select section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)) [size 588] from elrsV2.o using wildcard
      Select section .text.executeMenu(unsigned char) (executeMenu(unsigned char)) [size 164] from elrsV2.o using wildcard
      Select section .text.resetElrsMenuVariables() (resetElrsMenuVariables()) [size 72] from elrsV2.o using wildcard
      Select section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)) [size 672] from elrsV2.o using wildcard
      Select section .text.crc8(unsigned char const*, unsigned int) (crc8(unsigned char const*, unsigned int)) [size 32] from crc_crsf.o using wildcard
      Select section .text.createCrossfireChannelsFrame(unsigned char*, short*) (createCrossfireChannelsFrame(unsigned char*, short*)) [size 128] from crossfire.o using wildcard
      Select section .text.setupPulsesCrossfire() (setupPulsesCrossfire()) [size 76] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryValue(unsigned char, int) (processCrossfireTelemetryValue(unsigned char, int)) [size 64] from crossfire.o using wildcard
      Select section .text.checkCrossfireTelemetryFrameCRC() (checkCrossfireTelemetryFrameCRC()) [size 32] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryFrame() (processCrossfireTelemetryFrame()) [size 608] from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryData(unsigned char) (processCrossfireTelemetryData(unsigned char)) [size 108] from crossfire.o using wildcard
      Select section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)) [size 100] from crossfire.o using wildcard
      Select section .text.crsf_init() (crsf_init()) [size 36] from crossfire.o using wildcard
      Select section .text.crsf_shutdown() (crsf_shutdown()) [size 8] from crossfire.o using wildcard
      Select section .text.crsf_action() (crsf_action()) [size 36] from crossfire.o using wildcard
      Select section .text.evalChkSum() (evalChkSum()) [size 36] from pers.o using wildcard
      Select section .text.setNameP(char*, char const*) (setNameP(char*, char const*)) [size 20] from pers.o using wildcard
      Select section .text.eeGeneralDefault() (eeGeneralDefault()) [size 136] from pers.o using wildcard
      Select section .text.modelSave(unsigned char) (modelSave(unsigned char)) [size 48] from pers.o using wildcard
      Select section .text.modelDefaultWrite(unsigned char) (modelDefaultWrite(unsigned char)) [size 112] from pers.o using wildcard
      Select section .text.eeLoadModelName(unsigned char, char*, unsigned char) (eeLoadModelName(unsigned char, char*, unsigned char)) [size 96] from pers.o using wildcard
      Select section .text.eeModelExists(unsigned char) (eeModelExists(unsigned char)) [size 12] from pers.o using wildcard
      Select section .text.eeLoadModelForBackup(unsigned char) (eeLoadModelForBackup(unsigned char)) [size 52] from pers.o using wildcard
      Select section .text.eeLoadModel(unsigned char) (eeLoadModel(unsigned char)) [size 524] from pers.o using wildcard
      Select section .text.validateName(char*, unsigned char) (validateName(char*, unsigned char)) [size 28] from pers.o using wildcard
      Select section .text.eeDirty(unsigned char) (eeDirty(unsigned char)) [size 48] from pers.o using wildcard
      Select section .text.eeWaitComplete() (eeWaitComplete()) [size 40] from pers.o using wildcard
      Select section .text.eeDuplicateModel(unsigned char) (eeDuplicateModel(unsigned char)) [size 104] from pers.o using wildcard
      Select section .text.eeReadGeneral() (eeReadGeneral()) [size 120] from pers.o using wildcard
      Select section .text.eeWriteGeneral() (eeWriteGeneral()) [size 84] from pers.o using wildcard
      Select section .text.eeCheck(bool) (eeCheck(bool)) [size 352] from pers.o using wildcard
      Select section .text.SX127xDriver::SX127xDriver() (SX127xDriver::SX127xDriver()) [size 44] from SX127x.o using wildcard
      Select section .text._GLOBAL__sub_I_SX127x.cpp (_GLOBAL__sub_I_SX127x.cpp) [size 16] from SX127x.o using wildcard
      Select section .text.SX127xHal::SX127xHal() (SX127xHal::SX127xHal()) [size 12] from SX127xHal.o using wildcard
      Select section .text._GLOBAL__sub_I_ELRS.cpp (_GLOBAL__sub_I_ELRS.cpp) [size 72] from ELRS.o using wildcard
      Select section .text.StubbornReceiver::StubbornReceiver(unsigned char) (StubbornReceiver::StubbornReceiver(unsigned char)) [size 20] from stubborn_receiver.o using wildcard
      Select section .text.StubbornSender::StubbornSender(unsigned char) (StubbornSender::StubbornSender(unsigned char)) [size 14] from stubborn_sender.o using wildcard
      Select section .text.StubbornSender::ResetState() (StubbornSender::ResetState()) [size 24] from stubborn_sender.o using wildcard
      Select section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) (GENERIC_CRC14::GENERIC_CRC14(unsigned short)) [size 46] from crc.o using wildcard
      Select section .text.libc.__aeabi_llsl (__aeabi_llsl) [size 30] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_llsr (__aeabi_llsr) [size 30] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_idiv (__aeabi_idiv) [size 64] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_idivmod (__aeabi_idivmod) [size 14] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_uidiv (__aeabi_uidiv) [size 56] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_uidivmod (__aeabi_uidivmod) [size 16] from intasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.div (div) [size 42] from intops.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.strlen (strlen) [size 14] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcpy (memcpy) [size 14] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_memclr (__aeabi_memclr) [size 20] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_memmove (__aeabi_memmove) [size 34] from strasmops_arm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcmp (memcmp) [size 46] from strops.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .rodata.Lcdinit (Lcdinit) [size 12] from lcd.o using wildcard
      Select section .rodata.font (font) [size 495] from lcd.o using wildcard
      Select section .rodata.font_dblsize (font_dblsize) [size 1380] from lcd.o using wildcard
      Select section .rodata._bitmask (_bitmask) [size 8] from lcd.o using wildcard
      Select section .rodata.ChannelToPin (ChannelToPin) [size 7] from BoardI6.o using wildcard
      Select section .rodata.AFHDS2A_A7105_regs (AFHDS2A_A7105_regs) [size 50] from BoardI6.o using wildcard
      Select section .rodata.AFHDS_A7105_regs (AFHDS_A7105_regs) [size 50] from BoardI6.o using wildcard
      Select section .rodata..Lswitch.table.SetPRTTimPeriod ([.rodata..Lswitch.table.SetPRTTimPeriod]) [size 16] from BoardI6.o using wildcard
      Select section .rodata.bchout_ar (bchout_ar) [size 24] from er9x.o using wildcard
      Select section .rodata.Str_Switches (Str_Switches) [size 65] from er9x.o using wildcard
      Select section .rodata.Str_OFF (Str_OFF) [size 4] from er9x.o using wildcard
      Select section .rodata.Str_ON (Str_ON) [size 4] from er9x.o using wildcard
      Select section .rodata.modi12x3 (modi12x3) [size 18] from er9x.o using wildcard
      Select section .rodata.stickScramble (stickScramble) [size 16] from er9x.o using wildcard
      Select section .rodata.csTypeTable (csTypeTable) [size 15] from er9x.o using wildcard
      Select section .rodata.Str_Hyphens (Str_Hyphens) [size 5] from er9x.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 13] from er9x.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 4] from er9x.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 22] from er9x.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 14] from er9x.o using wildcard
      Select section .rodata.Str_Alert (Str_Alert) [size 7] from er9x.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 8] from er9x.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 33] from er9x.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 37] from er9x.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 13] from er9x.o using wildcard
      Select section .rodata.rate (rate) [size 8] from er9x.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 9] from er9x.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) [size 11] from er9x.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) [size 7] from er9x.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) [size 15] from er9x.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) [size 16] from er9x.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) [size 43] from er9x.o using wildcard
      Select section .rodata.AFHDS2A_tel (AFHDS2A_tel) [size 88] from AFHDS2A_a7105.o using wildcard
      Select section .rodata.per10ms()::crossTrim (per10ms()::crossTrim) [size 8] from drivers.o using wildcard
      Select section .rodata.Str_Chans_Gv (Str_Chans_Gv) [size 166] from menus.o using wildcard
      Select section .rodata.Curve_Str (Curve_Str) [size 74] from menus.o using wildcard
      Select section .rodata.Str_telemItems (Str_telemItems) [size 238] from menus.o using wildcard
      Select section .rodata.TelemIndex (TelemIndex) [size 58] from menus.o using wildcard
      Select section .rodata.UnitsVoice (UnitsVoice) [size 8] from menus.o using wildcard
      Select section .rodata.UnitsText (UnitsText) [size 8] from menus.o using wildcard
      Select section .rodata.Str_GV (Str_GV) [size 3] from menus.o using wildcard
      Select section .rodata.Str_Name (Str_Name) [size 5] from menus.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 10] from menus.o using wildcard
      Select section .rodata.Str_Curve (Str_Curve) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 7] from menus.o using wildcard
      Select section .rodata.Str_Curves (Str_Curves) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 5] from menus.o using wildcard
      Select section .rodata.Str_Telemetry (Str_Telemetry) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 65] from menus.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 15] from menus.o using wildcard
      Select section .rodata.Str_SC (Str_SC) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 63] from menus.o using wildcard
      Select section .rodata.UnitsString (UnitsString) [size 42] from menus.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 14] from menus.o using wildcard
      Select section .rodata.Str_Globals (Str_Globals) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Gv_Source (Str_Gv_Source) [size 41] from menus.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 9] from menus.o using wildcard
      Select section .rodata.SW_3_IDX (SW_3_IDX) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) [size 125] from menus.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.14 ([.rodata..L.str.14]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.15 ([.rodata..L.str.15]) [size 28] from menus.o using wildcard
      Select section .rodata..L.str.16 ([.rodata..L.str.16]) [size 46] from menus.o using wildcard
      Select section .rodata..L.str.17 ([.rodata..L.str.17]) [size 25] from menus.o using wildcard
      Select section .rodata..L.str.18 ([.rodata..L.str.18]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.19 ([.rodata..L.str.19]) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Mixer (Str_Mixer) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.20 ([.rodata..L.str.20]) [size 5] from menus.o using wildcard
      Select section .rodata.s_charTab (s_charTab) [size 67] from menus.o using wildcard
      Select section .rodata..L.str.21 ([.rodata..L.str.21]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.22 ([.rodata..L.str.22]) [size 13] from menus.o using wildcard
      Select section .rodata..L.str.23 ([.rodata..L.str.23]) [size 18] from menus.o using wildcard
      Select section .rodata..L.str.24 ([.rodata..L.str.24]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.25 ([.rodata..L.str.25]) [size 18] from menus.o using wildcard
      Select section .rodata.Str_1_RETA (Str_1_RETA) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.26 ([.rodata..L.str.26]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.27 ([.rodata..L.str.27]) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.28 ([.rodata..L.str.28]) [size 4] from menus.o using wildcard
      Select section .rodata.Str_Modes (Str_Modes) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.29 ([.rodata..L.str.29]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.30 ([.rodata..L.str.30]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.31 ([.rodata..L.str.31]) [size 6] from menus.o using wildcard
      Select section .rodata.ModelPopList (ModelPopList) [size 38] from menus.o using wildcard
      Select section .rodata..L.str.32 ([.rodata..L.str.32]) [size 5] from menus.o using wildcard
      Select section .rodata..L.str.33 ([.rodata..L.str.33]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.34 ([.rodata..L.str.34]) [size 19] from menus.o using wildcard
      Select section .rodata..L.str.35 ([.rodata..L.str.35]) [size 23] from menus.o using wildcard
      Select section .rodata..L.str.38 ([.rodata..L.str.38]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.39 ([.rodata..L.str.39]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.40 ([.rodata..L.str.40]) [size 17] from menus.o using wildcard
      Select section .rodata.menuProc0(unsigned char)::xt (menuProc0(unsigned char)::xt) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.41 ([.rodata..L.str.41]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.42 ([.rodata..L.str.42]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.43 ([.rodata..L.str.43]) [size 20] from menus.o using wildcard
      Select section .rodata.Str_Main_Popup (Str_Main_Popup) [size 58] from menus.o using wildcard
      Select section .rodata.menuProcIndex(unsigned char)::n_Strings (menuProcIndex(unsigned char)::n_Strings) [size 44] from menus.o using wildcard
      Select section .rodata.Str_Display (Str_Display) [size 8] from menus.o using wildcard
      Select section .rodata.Str_AudioHaptic (Str_AudioHaptic) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Alarms (Str_Alarms) [size 7] from menus.o using wildcard
      Select section .rodata.Str_General (Str_General) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Controls (Str_Controls) [size 9] from menus.o using wildcard
      Select section .rodata.Str_Calibration (Str_Calibration) [size 12] from menus.o using wildcard
      Select section .rodata.Str_Trainer (Str_Trainer) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Version (Str_Version) [size 8] from menus.o using wildcard
      Select section .rodata.Str_DiagSwtch (Str_DiagSwtch) [size 10] from menus.o using wildcard
      Select section .rodata.Str_DiagAna (Str_DiagAna) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Hardware (Str_Hardware) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.44 ([.rodata..L.str.44]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.45 ([.rodata..L.str.45]) [size 76] from menus.o using wildcard
      Select section .rodata..L.str.46 ([.rodata..L.str.46]) [size 40] from menus.o using wildcard
      Select section .rodata..L.str.47 ([.rodata..L.str.47]) [size 46] from menus.o using wildcard
      Select section .rodata..L.str.48 ([.rodata..L.str.48]) [size 54] from menus.o using wildcard
      Select section .rodata..L.str.49 ([.rodata..L.str.49]) [size 17] from menus.o using wildcard
      Select section .rodata.Str_minute_Beep (Str_minute_Beep) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.50 ([.rodata..L.str.50]) [size 46] from menus.o using wildcard
      Select section .rodata.sticks (sticks) [size 75] from menus.o using wildcard
      Select section .rodata..L.str.51 ([.rodata..L.str.51]) [size 82] from menus.o using wildcard
      Select section .rodata..L.str.52 ([.rodata..L.str.52]) [size 14] from menus.o using wildcard
      Select section .rodata.Str_Beep_Countdown (Str_Beep_Countdown) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.53 ([.rodata..L.str.53]) [size 26] from menus.o using wildcard
      Select section .rodata..L.str.54 ([.rodata..L.str.54]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.55 ([.rodata..L.str.55]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.56 ([.rodata..L.str.56]) [size 5] from menus.o using wildcard
      Select section .rodata..L.str.57 ([.rodata..L.str.57]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.58 ([.rodata..L.str.58]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.59 ([.rodata..L.str.59]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.60 ([.rodata..L.str.60]) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.61 ([.rodata..L.str.61]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.62 ([.rodata..L.str.62]) [size 13] from menus.o using wildcard
      Select section .rodata..L.str.63 ([.rodata..L.str.63]) [size 11] from menus.o using wildcard
      Select section .rodata..L.str.64 ([.rodata..L.str.64]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.65 ([.rodata..L.str.65]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.66 ([.rodata..L.str.66]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.67 ([.rodata..L.str.67]) [size 14] from menus.o using wildcard
      Select section .rodata.menuWhenDone (menuWhenDone) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.68 ([.rodata..L.str.68]) [size 18] from menus.o using wildcard
      Select section .rodata.Str_On_Off_Both (Str_On_Off_Both) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.69 ([.rodata..L.str.69]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.70 ([.rodata..L.str.70]) [size 41] from menus.o using wildcard
      Select section .rodata..L.str.71 ([.rodata..L.str.71]) [size 37] from menus.o using wildcard
      Select section .rodata..L.str.72 ([.rodata..L.str.72]) [size 5] from menus.o using wildcard
      Select section .rodata.Str_Cswitch (Str_Cswitch) [size 114] from menus.o using wildcard
      Select section .rodata..L.str.73 ([.rodata..L.str.73]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.74 ([.rodata..L.str.74]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.75 ([.rodata..L.str.75]) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.76 ([.rodata..L.str.76]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.77 ([.rodata..L.str.77]) [size 22] from menus.o using wildcard
      Select section .rodata..L.str.78 ([.rodata..L.str.78]) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Sounds (Str_Sounds) [size 98] from menus.o using wildcard
      Select section .rodata..L.str.79 ([.rodata..L.str.79]) [size 7] from menus.o using wildcard
      Select section .rodata..L.str.80 ([.rodata..L.str.80]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.81 ([.rodata..L.str.81]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.82 ([.rodata..L.str.82]) [size 3] from menus.o using wildcard
      Select section .rodata..L.str.83 ([.rodata..L.str.83]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.84 ([.rodata..L.str.84]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.85 ([.rodata..L.str.85]) [size 27] from menus.o using wildcard
      Select section .rodata..L.str.86 ([.rodata..L.str.86]) [size 14] from menus.o using wildcard
      Select section .rodata..L.str.87 ([.rodata..L.str.87]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.88 ([.rodata..L.str.88]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.89 ([.rodata..L.str.89]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.90 ([.rodata..L.str.90]) [size 11] from menus.o using wildcard
      Select section .rodata..L.str.91 ([.rodata..L.str.91]) [size 6] from menus.o using wildcard
      Select section .rodata..L.str.92 ([.rodata..L.str.92]) [size 43] from menus.o using wildcard
      Select section .rodata..L.str.93 ([.rodata..L.str.93]) [size 30] from menus.o using wildcard
      Select section .rodata..L.str.94 ([.rodata..L.str.94]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.95 ([.rodata..L.str.95]) [size 15] from menus.o using wildcard
      Select section .rodata..L.str.96 ([.rodata..L.str.96]) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.97 ([.rodata..L.str.97]) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.98 ([.rodata..L.str.98]) [size 38] from menus.o using wildcard
      Select section .rodata..L.str.99 ([.rodata..L.str.99]) [size 14] from menus.o using wildcard
      Select section .rodata..L.str.100 ([.rodata..L.str.100]) [size 20] from menus.o using wildcard
      Select section .rodata..L.str.101 ([.rodata..L.str.101]) [size 37] from menus.o using wildcard
      Select section .rodata.menuProcModelIndex(unsigned char)::n_Strings (menuProcModelIndex(unsigned char)::n_Strings) [size 56] from menus.o using wildcard
      Select section .rodata.Str_heli_setup (Str_heli_setup) [size 11] from menus.o using wildcard
      Select section .rodata.Str_limits (Str_limits) [size 7] from menus.o using wildcard
      Select section .rodata.Str_Expo (Str_Expo) [size 8] from menus.o using wildcard
      Select section .rodata.Str_Cswitches (Str_Cswitches) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Safety (Str_Safety) [size 11] from menus.o using wildcard
      Select section .rodata.Str_Timer (Str_Timer) [size 6] from menus.o using wildcard
      Select section .rodata.Str_Protocol (Str_Protocol) [size 9] from menus.o using wildcard
      Select section .rodata..L.str.102 ([.rodata..L.str.102]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.103 ([.rodata..L.str.103]) [size 53] from menus.o using wildcard
      Select section .rodata.Str_TRE012AG (Str_TRE012AG) [size 10] from menus.o using wildcard
      Select section .rodata..L.str.104 ([.rodata..L.str.104]) [size 28] from menus.o using wildcard
      Select section .rodata..L.str.105 ([.rodata..L.str.105]) [size 71] from menus.o using wildcard
      Select section .rodata..L.str.106 ([.rodata..L.str.106]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.107 ([.rodata..L.str.107]) [size 52] from menus.o using wildcard
      Select section .rodata..L.str.108 ([.rodata..L.str.108]) [size 34] from menus.o using wildcard
      Select section .rodata..L.str.109 ([.rodata..L.str.109]) [size 8] from menus.o using wildcard
      Select section .rodata..L.str.110 ([.rodata..L.str.110]) [size 75] from menus.o using wildcard
      Select section .rodata..L.str.111 ([.rodata..L.str.111]) [size 24] from menus.o using wildcard
      Select section .rodata..L.str.112 ([.rodata..L.str.112]) [size 12] from menus.o using wildcard
      Select section .rodata..L.str.113 ([.rodata..L.str.113]) [size 32] from menus.o using wildcard
      Select section .rodata..L.str.114 ([.rodata..L.str.114]) [size 15] from menus.o using wildcard
      Select section .rodata.MixPopList (MixPopList) [size 39] from menus.o using wildcard
      Select section .rodata..L.str.115 ([.rodata..L.str.115]) [size 43] from menus.o using wildcard
      Select section .rodata..L.str.116 ([.rodata..L.str.116]) [size 24] from menus.o using wildcard
      Select section .rodata..L.str.117 ([.rodata..L.str.117]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.118 ([.rodata..L.str.118]) [size 4] from menus.o using wildcard
      Select section .rodata..L.str.119 ([.rodata..L.str.119]) [size 17] from menus.o using wildcard
      Select section .rodata..L.str.120 ([.rodata..L.str.120]) [size 16] from menus.o using wildcard
      Select section .rodata..L.str.121 ([.rodata..L.str.121]) [size 16] from menus.o using wildcard
      Select section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) ([.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]) [size 56] from menus.o using wildcard
      Select section .rodata.Stamps (Stamps) [size 49] from stamp.o using wildcard
      Select section .rodata.AFHDS_tx_channels (AFHDS_tx_channels) [size 32] from AFHDS.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 22] from elrsV2.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 22] from elrsV2.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 42] from elrsV2.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 50] from elrsV2.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 39] from elrsV2.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 3] from elrsV2.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 6] from elrsV2.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) [size 17] from elrsV2.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) [size 8] from elrsV2.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) [size 50] from elrsV2.o using wildcard
      Select section .rodata.crc8tab (crc8tab) [size 256] from crc_crsf.o using wildcard
      Select section .rodata.idx_to_afhds2a (idx_to_afhds2a) [size 30] from crossfire.o using wildcard
      Select section .rodata.processCrossfireTelemetryFrame()::power_values (processCrossfireTelemetryFrame()::power_values) [size 36] from crossfire.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) [size 11] from pers.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) [size 11] from pers.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) [size 21] from pers.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) [size 19] from pers.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) [size 16] from pers.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) [size 18] from pers.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) [size 15] from pers.o using wildcard
      Select section .rodata.Str_EEPROM_Overflow (Str_EEPROM_Overflow) [size 16] from pers.o using wildcard
      Select section .init (Reset_Handler) [size 40] from Kinetis_KL_Startup.o using name
      Select section .init (NMI_Handler) [size 68] from MKL16Z4_Vectors.o using name
  Select inputs for 'place in' block <#8> at line 108, col 45
      Select block tdata_load ([tdata_load]) [size 0] from [ Linker created ] using name
  Select inputs for 'place in' block <#9> at line 115, col 44
  Select inputs for 'place in' block <#11> at line 120, col 45
      Select block tls ([tls]) [size 0] from [ Linker created ] using name
  Select inputs for 'place in' block <#12> at line 124, col 45
      Select section .data.AlarmControl (AlarmControl) [size 4] from er9x.o using wildcard
      Select section .data.prev_power (prev_power) [size 1] from A7105_SPI.o using wildcard
      Select section .data.A7105_AdjustLOBaseFreq()::old_offset (A7105_AdjustLOBaseFreq()::old_offset) [size 2] from A7105_SPI.o using wildcard
      Select section .data.AFHDS2A_update_telemetry()::Dacc (AFHDS2A_update_telemetry()::Dacc) [size 4] from AFHDS2A_a7105.o using wildcard
      Select section .data.play_cmd_buf (play_cmd_buf) [size 10] from audio.o using wildcard
      Select section .data.ISR_TIMER1_COMPA_vect::pulsePtr (ISR_TIMER1_COMPA_vect::pulsePtr) [size 4] from pulses.o using wildcard
      Select section .data.curfieldId (curfieldId) [size 1] from elrsV2.o using wildcard
      Select section .data.expectedChunks (expectedChunks) [size 1] from elrsV2.o using wildcard
      Select section .data.shacommit (shacommit) [size 7] from elrsV2.o using wildcard
      Select section .bss.LcdLock (LcdLock) [size 1] from lcd.o using wildcard
      Select section .bss.Lcd_lastPos (Lcd_lastPos) [size 1] from lcd.o using wildcard
      Select section .bss.DisplayBuf (DisplayBuf) [size 1024] from lcd.o using wildcard
      Select section .bss.EepromActive (EepromActive) [size 1] from lcd.o using wildcard
      Select section .bss.plotType (plotType) [size 1] from lcd.o using wildcard
      Select section .bss.SPI_BufferPtr (SPI_BufferPtr) [size 4] from BoardI6.o using wildcard
      Select section .bss.SPI_Size (SPI_Size) [size 2] from BoardI6.o using wildcard
      Select section .bss.g_crsf_rx_buf (g_crsf_rx_buf) [size 64] from BoardI6.o using wildcard
      Select section .bss.g_crsf_read_callback (g_crsf_read_callback) [size 4] from BoardI6.o using wildcard
      Select section .bss.g_voice_cb (g_voice_cb) [size 4] from BoardI6.o using wildcard
      Select section .bss.voice_uart_recv_buf (voice_uart_recv_buf) [size 10] from BoardI6.o using wildcard
      Select section .bss.voice_rx_idx (voice_rx_idx) [size 1] from BoardI6.o using wildcard
      Select section .bss.voice_uart_send_buf (voice_uart_send_buf) [size 10] from BoardI6.o using wildcard
      Select section .bss.voice_tx_idx (voice_tx_idx) [size 1] from BoardI6.o using wildcard
      Select section .bss.Last_switch (Last_switch) [size 12] from er9x.o using wildcard
      Select section .bss.g_eeGeneral (g_eeGeneral) [size 118] from er9x.o using wildcard
      Select section .bss.g_model (g_model) [size 1002] from er9x.o using wildcard
      Select section .bss.AlertMessage (AlertMessage) [size 4] from er9x.o using wildcard
      Select section .bss.Main_running (Main_running) [size 1] from er9x.o using wildcard
      Select section .bss.Nvs_state (Nvs_state) [size 8] from er9x.o using wildcard
      Select section .bss.Nvs_timer (Nvs_timer) [size 16] from er9x.o using wildcard
      Select section .bss.CurrentVolume (CurrentVolume) [size 1] from er9x.o using wildcard
      Select section .bss.ppmInAvailable (ppmInAvailable) [size 1] from er9x.o using wildcard
      Select section .bss.Rotary (Rotary) [size 9] from er9x.o using wildcard
      Select section .bss.Tevent (Tevent) [size 1] from er9x.o using wildcard
      Select section .bss.TimerConfig (TimerConfig) [size 10] from er9x.o using wildcard
      Select section .bss.audio (audio) [size 56] from er9x.o using wildcard
      Select section .bss.sysFlags (sysFlags) [size 1] from er9x.o using wildcard
      Select section .bss.SystemOptions (SystemOptions) [size 1] from er9x.o using wildcard
      Select section .bss.CsTimer (CsTimer) [size 24] from er9x.o using wildcard
      Select section .bss.g_ppmIns (g_ppmIns) [size 16] from er9x.o using wildcard
      Select section .bss.check_backlight_voice()::tmr10ms (check_backlight_voice()::tmr10ms) [size 1] from er9x.o using wildcard
      Select section .bss.g_LightOffCounter (g_LightOffCounter) [size 2] from er9x.o using wildcard
      Select section .bss.StickScrollAllowed (StickScrollAllowed) [size 1] from er9x.o using wildcard
      Select section .bss.StickScrollTimer (StickScrollTimer) [size 1] from er9x.o using wildcard
      Select section .bss.g_menuStack (g_menuStack) [size 20] from er9x.o using wildcard
      Select section .bss.g_menuStackPtr (g_menuStackPtr) [size 1] from er9x.o using wildcard
      Select section .bss.EnterMenu (EnterMenu) [size 1] from er9x.o using wildcard
      Select section .bss.P1values (P1values) [size 10] from er9x.o using wildcard
      Select section .bss.StepSize (StepSize) [size 1] from er9x.o using wildcard
      Select section .bss.LongMenuTimer (LongMenuTimer) [size 1] from er9x.o using wildcard
      Select section .bss.g_vbat100mV (g_vbat100mV) [size 1] from er9x.o using wildcard
      Select section .bss.tick10ms (tick10ms) [size 1] from er9x.o using wildcard
      Select section .bss.stickMoved (stickMoved) [size 1] from er9x.o using wildcard
      Select section .bss.Inactivity (Inactivity) [size 6] from er9x.o using wildcard
      Select section .bss.s_anaFilt (s_anaFilt) [size 16] from er9x.o using wildcard
      Select section .bss.g_tmr16KHz (g_tmr16KHz) [size 2] from er9x.o using wildcard
      Select section .bss.tmrEEPROM (tmrEEPROM) [size 2] from er9x.o using wildcard
      Select section .bss.mainSequence()::timer (mainSequence()::timer) [size 2] from er9x.o using wildcard
      Select section .bss.audioQueue::driver()::toneCounter (audioQueue::driver()::toneCounter) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::lastTMR (perMain()::lastTMR) [size 4] from er9x.o using wildcard
      Select section .bss.perMain()::repeater (perMain()::repeater) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::alertKey (perMain()::alertKey) [size 1] from er9x.o using wildcard
      Select section .bss.perMain()::s_batCheck (perMain()::s_batCheck) [size 1] from er9x.o using wildcard
      Select section .bss.RadioState (RadioState) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.protocol_flags (protocol_flags) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.packet (packet) [size 40] from A7105_SPI.o using wildcard
      Select section .bss.ID (ID) [size 4] from A7105_SPI.o using wildcard
      Select section .bss.packet_count (packet_count) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.bind_phase (bind_phase) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency (hopping_frequency) [size 16] from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency_no (hopping_frequency_no) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.A7105_AntSwitch()::sw (A7105_AntSwitch()::sw) [size 1] from A7105_SPI.o using wildcard
      Select section .bss.AFHDS2A_tel_data (AFHDS2A_tel_data) [size 172] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_status (AFHDS2A_tel_status) [size 8] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_res_cnt (AFHDS2A_tel_res_cnt) [size 43] from AFHDS2A_a7105.o using wildcard
      Select section .bss.AltOffset (AltOffset) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.GAltOffset (GAltOffset) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_type (ActionAFHDS2A::packet_type) [size 1] from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_counter (ActionAFHDS2A::packet_counter) [size 2] from AFHDS2A_a7105.o using wildcard
      Select section .bss.Voice (Voice) [size 36] from audio.o using wildcard
      Select section .bss.wait_fin_count (wait_fin_count) [size 1] from audio.o using wildcard
      Select section .bss.i2c_buffer (i2c_buffer) [size 12] from drivers.o using wildcard
      Select section .bss.s_evt (s_evt) [size 1] from drivers.o using wildcard
      Select section .bss.keys (keys) [size 45] from drivers.o using wildcard
      Select section .bss.g_tmr10ms (g_tmr10ms) [size 4] from drivers.o using wildcard
      Select section .bss.g_blinkTmr10ms (g_blinkTmr10ms) [size 1] from drivers.o using wildcard
      Select section .bss.per10ms()::current (per10ms()::current) [size 1] from drivers.o using wildcard
      Select section .bss.eeFs (eeFs) [size 64] from file.o using wildcard
      Select section .bss.Xmem (Xmem) [size 106] from menus.o using wildcard
      Select section .bss.PopupData (PopupData) [size 4] from menus.o using wildcard
      Select section .bss.MenuControl (MenuControl) [size 3] from menus.o using wildcard
      Select section .bss.s_timer (s_timer) [size 32] from menus.o using wildcard
      Select section .bss.RotaryState (RotaryState) [size 1] from menus.o using wildcard
      Select section .bss.CalcScaleNest (CalcScaleNest) [size 1] from menus.o using wildcard
      Select section .bss.ThrottleStickyOn (ThrottleStickyOn) [size 1] from menus.o using wildcard
      Select section .bss.phyStick (phyStick) [size 4] from menus.o using wildcard
      Select section .bss.calibratedStick (calibratedStick) [size 14] from menus.o using wildcard
      Select section .bss.Ex_chans (Ex_chans) [size 32] from menus.o using wildcard
      Select section .bss.s_pgOfs (s_pgOfs) [size 1] from menus.o using wildcard
      Select section .bss.s_editMode (s_editMode) [size 1] from menus.o using wildcard
      Select section .bss.s_editing (s_editing) [size 1] from menus.o using wildcard
      Select section .bss.s_noHi (s_noHi) [size 1] from menus.o using wildcard
      Select section .bss.scrollLR (scrollLR) [size 1] from menus.o using wildcard
      Select section .bss.scroll_disabled (scroll_disabled) [size 1] from menus.o using wildcard
      Select section .bss.scrollUD (scrollUD) [size 1] from menus.o using wildcard
      Select section .bss.InverseBlink (InverseBlink) [size 1] from menus.o using wildcard
      Select section .bss.EditType (EditType) [size 1] from menus.o using wildcard
      Select section .bss.EditColumns (EditColumns) [size 1] from menus.o using wildcard
      Select section .bss.g_chans512 (g_chans512) [size 32] from menus.o using wildcard
      Select section .bss.g_posHorz (g_posHorz) [size 1] from menus.o using wildcard
      Select section .bss.M_longMenuTimer (M_longMenuTimer) [size 1] from menus.o using wildcard
      Select section .bss.Columns (Columns) [size 1] from menus.o using wildcard
      Select section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp (MState2::check_columns(unsigned char, unsigned char)::lateUp) [size 1] from menus.o using wildcard
      Select section .bss.s_curveChan (s_curveChan) [size 1] from menus.o using wildcard
      Select section .bss.s_expoChan (s_expoChan) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::dfltCrv (menuProcCurveOne(unsigned char)::dfltCrv) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::mstate2 (menuProcCurveOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcCurve(unsigned char)::mstate2 (menuProcCurve(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.CurrentPhase (CurrentPhase) [size 1] from menus.o using wildcard
      Select section .bss.menuProcTelemetry(unsigned char)::mstate2 (menuProcTelemetry(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuScaleOne(unsigned char)::mstate2 (menuScaleOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currIdx (s_currIdx) [size 1] from menus.o using wildcard
      Select section .bss.menuProcGlobals(unsigned char)::mstate2 (menuProcGlobals(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currMixIdx (s_currMixIdx) [size 1] from menus.o using wildcard
      Select section .bss.menuProcMixOne(unsigned char)::mstate2 (menuProcMixOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_mixMaxSel (s_mixMaxSel) [size 1] from menus.o using wildcard
      Select section .bss.mixToDelete (mixToDelete) [size 1] from menus.o using wildcard
      Select section .bss.s_moveMode (s_moveMode) [size 1] from menus.o using wildcard
      Select section .bss.menuProcMix(unsigned char)::mstate2 (menuProcMix(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.s_currDestCh (s_currDestCh) [size 1] from menus.o using wildcard
      Select section .bss.s_moveMixIdx (s_moveMixIdx) [size 1] from menus.o using wildcard
      Select section .bss.DupIfNonzero (DupIfNonzero) [size 1] from menus.o using wildcard
      Select section .bss.DupSub (DupSub) [size 1] from menus.o using wildcard
      Select section .bss.menuRangeBind(unsigned char)::timer (menuRangeBind(unsigned char)::timer) [size 1] from menus.o using wildcard
      Select section .bss.menuPhaseOne(unsigned char)::mstate2 (menuPhaseOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuModelPhases(unsigned char)::mstate2 (menuModelPhases(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::mstate2 (menuProcModelSelect(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::sel_editMode (menuProcModelSelect(unsigned char)::sel_editMode) [size 1] from menus.o using wildcard
      Select section .bss.TimeGlobals (TimeGlobals) [size 8] from menus.o using wildcard
      Select section .bss.trace()::s_time (trace()::s_time) [size 2] from menus.o using wildcard
      Select section .bss.g_latency (g_latency) [size 2] from menus.o using wildcard
      Select section .bss.menuProc0(unsigned char)::trimSwLock (menuProc0(unsigned char)::trimSwLock) [size 1] from menus.o using wildcard
      Select section .bss.inputs_subview (inputs_subview) [size 1] from menus.o using wildcard
      Select section .bss.bpanaCenter (bpanaCenter) [size 1] from menus.o using wildcard
      Select section .bss.Output (Output) [size 256] from menus.o using wildcard
      Select section .bss.Fade (Fade) [size 80] from menus.o using wildcard
      Select section .bss.perOutPhase(short*, unsigned char)::lastPhase (perOutPhase(short*, unsigned char)::lastPhase) [size 1] from menus.o using wildcard
      Select section .bss.perOut(short*, unsigned char)::sticky (perOut(short*, unsigned char)::sticky) [size 1] from menus.o using wildcard
      Select section .bss.menuProcIndex(unsigned char)::mstate (menuProcIndex(unsigned char)::mstate) [size 1] from menus.o using wildcard
      Select section .bss.IlinesCount (IlinesCount) [size 1] from menus.o using wildcard
      Select section .bss.menuProcVoiceOne(unsigned char)::mstate2 (menuProcVoiceOne(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 (menuProcVoiceAlarm(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuRXSetup(unsigned char)::mstate2 (menuRXSetup(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuSetFailsafe(unsigned char)::mstate2 (menuSetFailsafe(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcProtocol(unsigned char)::mstate2 (menuProcProtocol(unsigned char)::mstate2) [size 1] from menus.o using wildcard
      Select section .bss.menuProcModelIndex(unsigned char)::mstate (menuProcModelIndex(unsigned char)::mstate) [size 1] from menus.o using wildcard
      Select section .bss.pulses2MHz (pulses2MHz) [size 144] from pulses.o using wildcard
      Select section .bss.heartbeat (heartbeat) [size 1] from pulses.o using wildcard
      Select section .bss.Current_protocol (Current_protocol) [size 1] from pulses.o using wildcard
      Select section .bss.pxxFlag (pxxFlag) [size 1] from pulses.o using wildcard
      Select section .bss.PausePulses (PausePulses) [size 1] from pulses.o using wildcard
      Select section .bss.serialDat0 (serialDat0) [size 1] from pulses.o using wildcard
      Select section .bss.RadioActive (RadioActive) [size 1] from pulses.o using wildcard
      Select section .bss.B3_comp_value (B3_comp_value) [size 2] from pulses.o using wildcard
      Select section .bss.badPkt (badPkt) [size 1] from elrsV2.o using wildcard
      Select section .bss.goodPkt (goodPkt) [size 4] from elrsV2.o using wildcard
      Select section .bss.fields (fields) [size 300] from elrsV2.o using wildcard
      Select section .bss.curselectIdx (curselectIdx) [size 1] from elrsV2.o using wildcard
      Select section .bss.curFieldChunk (curFieldChunk) [size 1] from elrsV2.o using wildcard
      Select section .bss.curNumSelection (curNumSelection) [size 1] from elrsV2.o using wildcard
      Select section .bss.fieldData (fieldData) [size 72] from elrsV2.o using wildcard
      Select section .bss.fieldDataLen (fieldDataLen) [size 1] from elrsV2.o using wildcard
      Select section .bss.statusComplete (statusComplete) [size 1] from elrsV2.o using wildcard
      Select section .bss.fields_count (fields_count) [size 1] from elrsV2.o using wildcard
      Select section .bss.allParamsLoaded (allParamsLoaded) [size 1] from elrsV2.o using wildcard
      Select section .bss.itemmodified (itemmodified) [size 1] from elrsV2.o using wildcard
      Select section .bss.bMenuShown (bMenuShown) [size 1] from elrsV2.o using wildcard
      Select section .bss.fieldTimeout (fieldTimeout) [size 4] from elrsV2.o using wildcard
      Select section .bss.reusableBufferOffset (reusableBufferOffset) [size 2] from elrsV2.o using wildcard
      Select section .bss.reusableBuffer (reusableBuffer) [size 800] from elrsV2.o using wildcard
      Select section .bss.linkstatTimeout (linkstatTimeout) [size 4] from elrsV2.o using wildcard
      Select section .bss.outputTelemetryBuffer (outputTelemetryBuffer) [size 16] from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferSize (outputTelemetryBufferSize) [size 1] from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferTrigger (outputTelemetryBufferTrigger) [size 1] from crossfire.o using wildcard
      Select section .bss.telemetryRxBuffer (telemetryRxBuffer) [size 128] from crossfire.o using wildcard
      Select section .bss.telemetryRxBufferCount (telemetryRxBufferCount) [size 1] from crossfire.o using wildcard
      Select section .bss.g_crossfire (g_crossfire) [size 65] from crossfire.o using wildcard
      Select section .bss.telemetryErrors (telemetryErrors) [size 4] from crossfire.o using wildcard
      Select section .bss.g_elrs_update_rate (g_elrs_update_rate) [size 4] from crossfire.o using wildcard
      Select section .bss.g_elrs_lag (g_elrs_lag) [size 4] from crossfire.o using wildcard
      Select section .bss.theFile (theFile) [size 10] from pers.o using wildcard
      Select section .bss.theWriteFile (theWriteFile) [size 10] from pers.o using wildcard
      Select section .bss.s_eeDirtyMsk (s_eeDirtyMsk) [size 1] from pers.o using wildcard
      Select section .bss.s_eeDirtyTime10ms (s_eeDirtyTime10ms) [size 2] from pers.o using wildcard
      Select section .bss.s_eeLongTimer (s_eeLongTimer) [size 1] from pers.o using wildcard
      Select section .bss.Ee_lock (Ee_lock) [size 1] from pers.o using wildcard
      Select section .bss.hal (hal) [size 4] from SX127x.o using wildcard
      Select section .bss.SX127xDriver::instance (SX127xDriver::instance) [size 4] from SX127x.o using wildcard
      Select section .bss.SX127xHal::instance (SX127xHal::instance) [size 4] from SX127xHal.o using wildcard
      Select section .bss.Radio (Radio) [size 48] from ELRS.o using wildcard
      Select section .bss.ota_crc (ota_crc) [size 514] from ELRS.o using wildcard
      Select section .bss.LQCalc (LQCalc) [size 12] from ELRS.o using wildcard
      Select section .bss.TelemetryReceiver (TelemetryReceiver) [size 12] from ELRS.o using wildcard
      Select section .bss.MspSender (MspSender) [size 16] from ELRS.o using wildcard
  Select inputs for 'place in' block <#13> at line 128, col 45
      Select block heap ([heap]) [size 0] from [ Linker created ] using name


***************************************************************************************
***                                                                                 ***
***                                  Pad sections                                   ***
***                                                                                 ***
***************************************************************************************

  Padding sections for section alignment


***************************************************************************************
***                                                                                 ***
***                               Assign init methods                               ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (9 inputs)
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      play_cmd_buf from audio.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      curfieldId from elrsV2.o
      expectedChunks from elrsV2.o
      shacommit from elrsV2.o
  Applying user initialization 'auto': (0 inputs)


***************************************************************************************
***                                                                                 ***
***                                   Sort inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Sorting sections with auto order for block vectors
  Sorting sections with auto order for block vectors_ram
  Sorting sections with alphabetical order for inline block <#1> at line 61, col 85
  Sorting sections with auto order for block ctors
  Sorting sections with reverse alphabetical order for inline block <#2> at line 62, col 85
  Sorting sections with auto order for block dtors
  Sorting sections with auto order for block exidx
  Sorting sections with auto order for block tbss
  Sorting sections with auto order for block tdata
  Sorting sections with auto order for block tls
  Sorting sections with auto order for block tdata_load
  Sorting sections with auto order for block heap
  Sorting sections with auto order for block stack
  Sorting sections with auto order for block cfm
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000400 to 0x0000040f]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                               Size and alignment                                ***
***                                                                                 ***
***************************************************************************************

  Process block vectors:
      size = 192, alignment = 4
  Process block vectors_ram:
      size = 0, alignment = 0
  Process inline block <#1> at line 61, col 85:
      size = 12, alignment = 4
  Process block ctors:
      size = 12, alignment = 4
  Process inline block <#2> at line 62, col 85:
      size = 0, alignment = 0
  Process block dtors:
      size = 0, alignment = 1
  Process block exidx:
      size = 0, alignment = 0
  Process block tbss:
      size = 0, alignment = 0
  Process block tdata:
      size = 0, alignment = 0
  Process block tls:
      size = 0, alignment = 1
  Process block tdata_load:
      Process block tdata:
          size = 0, alignment = 0
      size = 0, alignment = 1
  Process block heap:
      size = 0, alignment = 8
  Process block stack:
      size = 256, alignment = 8
  Process block cfm:
      size = 16, alignment = 2
  Process 'place at start' block <#5> at line 97, col 45:
      size = 192, alignment = 4
  Process 'place at start' block <#6> at line 98, col 45:
      size = 16, alignment = 2
  Process 'place at start' block <#10> at line 119, col 45:
      size = 0, alignment = 1
  Process 'place at end' block <#14> at line 129, col 45:
      size = 256, alignment = 8
  Testing input sections to see if nonzero selected size
      All inputs (if any) have zero size
  Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
  Testing input sections to see if nonzero selected size
      block ctors has size 12
  Initialize by calling __SEGGER_init_ctors has nonzero selector size, must include


***************************************************************************************
***                                                                                 ***
***                                Dump Script tasks                                ***
***                                                                                 ***
***************************************************************************************

  Internal linker script
      define symbol __STACKSIZE__
      define symbol __STACKSIZE_PROCESS__
      define symbol __HEAPSIZE__
      define symbol __SEGGER_RTL_vfprintf
      define symbol __SEGGER_RTL_vfscanf
      define symbol __dso_handle
      define region FLASH = [0x00000000 to 0x0000ffff]
      define region CFM = [0x00000400 to 0x0000040f]
      define region RAM = [0x1ffff800 to 0x200017ff]
      define block vectors
          input section .vectors from MKL16Z4_Vectors.o, size 192, align 4
      define block vectors_ram
      define inline block <#1> at line 61, col 85
          input section .init_array from er9x.o, size 4, align 4
          input section .init_array from SX127x.o, size 4, align 4
          input section .init_array from ELRS.o, size 4, align 4
      define block ctors
          input inline block <#1> at line 61, col 85 from [ Linker created ], size 12, align 4
      define inline block <#2> at line 62, col 85
      define block dtors
          input inline block <#2> at line 62, col 85 from [ Linker created ], size 0, align 1
      define block exidx
      define block tbss
      define block tdata
      define block tls
          input block tdata from [ Linker created ], size 0, align 1
          input block tbss from [ Linker created ], size 0, align 1
      define block tdata_load
          input copy of block tdata from [ Linker created ], size 0, align 1
          copy of block tdata
      define block heap
          with fixed size 0
      define block stack
          with fixed size 0x100
      define block cfm
          input section .cfm from MKL16Z4_Vectors.o, size 16, align 2
      do not initialize {
          section .non_init,
          section .non_init.*,
          section .*.non_init,
          section .*.non_init.*,
      }
      do not initialize {
          section .no_init,
          section .no_init.*,
          section .*.no_init,
          section .*.no_init.*,
      }
      do not initialize {
          section .noinit,
          section .noinit.*,
          section .*.noinit,
          section .*.noinit.*,
      }
      do not initialize {
          block vectors_ram,
      }
      initialize by auto {
          section .data,
          section .data.*,
          section .*.data,
          section .*.data.*,
      }
      initialize by auto {
          section .fast,
          section .fast.*,
      }
      initialize by calling __SEGGER_init_heap {
          block heap,
      }
      initialize by calling __SEGGER_init_ctors {
          block ctors,
      }
      keep {
          section .cfm,
      }
      place at 0x00000000
          input block vectors from [ Linker created ], size 192, align 4
      place at 0x00000400
          input block cfm from [ Linker created ], size 16, align 2
      place at 0x1ffff800
          input block vectors_ram from [ Linker created ], size 0, align 1
      place at 0x20001800
          input block stack from [ Linker created ], size 256, align 8
      place in [0x00000000 to 0x0000ffff] with auto order
      place in [0x00000400 to 0x0000040f] with auto order
      place in [0x00000000 to 0x0000ffff] with auto order
          input section .text.menuProcModelIndex(unsigned char) from menus.o, size 4280, align 4
          input section .text.menuProcIndex(unsigned char) from menus.o, size 3216, align 4
          input section .text.perOut(short*, unsigned char) from menus.o, size 3016, align 4
          input section .text.mainSequence() from er9x.o, size 1944, align 4
          input section .text.menuProc0(unsigned char) from menus.o, size 1420, align 4
          input section .text.menuProcMixOne(unsigned char) from menus.o, size 1232, align 4
          input section .text.menuProcMix(unsigned char) from menus.o, size 1192, align 4
          input section .text.menuProcVoiceOne(unsigned char) from menus.o, size 1140, align 4
          input section .text.ActionAFHDS2A from AFHDS2A_a7105.o, size 988, align 4
          input section .text.HW_Init from BoardI6.o, size 944, align 4
          input section .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o, size 872, align 4
          input section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o, size 828, align 4
          input section .text.audioQueue::event(unsigned char, unsigned char) from audio.o, size 828, align 4
          input section .text.timer() from menus.o, size 808, align 4
          input section .text.menuProcModelSelect(unsigned char) from menus.o, size 796, align 4
          input section .text.menuProcProtocol(unsigned char) from menus.o, size 796, align 4
          input section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o, size 732, align 4
          input section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o, size 672, align 4
          input section .text.menuScaleOne(unsigned char) from menus.o, size 660, align 4
          input section .text.processCrossfireTelemetryFrame() from crossfire.o, size 608, align 4
          input section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o, size 588, align 4
          input section .text.mainER() from er9x.o, size 544, align 4
          input section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o, size 544, align 4
          input section .text.eeLoadModel(unsigned char) from pers.o, size 524, align 4
          input section .text.getSwitch(signed char, bool, unsigned char) from er9x.o, size 488, align 4
          input section .text.menuProcTelemetry(unsigned char) from menus.o, size 488, align 4
          input section .text.menuProcGlobals(unsigned char) from menus.o, size 488, align 4
          input section .text.menuPhaseOne(unsigned char) from menus.o, size 476, align 4
          input section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o, size 456, align 4
          input section .text.menuSetFailsafe(unsigned char) from menus.o, size 456, align 4
          input section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o, size 392, align 4
          input section .text.perOutPhase(short*, unsigned char) from menus.o, size 388, align 4
          input section .text.i2c_master from BoardI6.o, size 352, align 4
          input section .text.eeCheck(bool) from pers.o, size 352, align 4
          input section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o, size 344, align 4
          input section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o, size 344, align 4
          input section .text.menuProcCurveOne(unsigned char) from menus.o, size 340, align 4
          input section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o, size 332, align 4
          input section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o, size 324, align 4
          input section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o, size 292, align 4
          input section .text.menuProcVoiceAlarm(unsigned char) from menus.o, size 280, align 4
          input section .text.setup_crsf_serial_port from BoardI6.o, size 268, align 4
          input section .text.menuModelPhases(unsigned char) from menus.o, size 236, align 4
          input section .text.setupPulsesPPM(unsigned char) from pulses.o, size 236, align 4
          input section .text.checkSwitches() from er9x.o, size 228, align 4
          input section .text.per10ms() from drivers.o, size 216, align 4
          input section .text.setStickCenter() from menus.o, size 216, align 4
          input section .text.voice_telem_item(unsigned char) from menus.o, size 204, align 4
          input section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o, size 204, align 4
          input section .text.A7105_Init() from A7105_SPI.o, size 204, align 4
          input section .text.EFile::write(unsigned char*, unsigned char) from file.o, size 196, align 4
          input section .text.Key::input(bool, EnumKeys) from drivers.o, size 196, align 4
          input section .text.setupPulses() from pulses.o, size 196, align 4
          input section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o, size 192, align 4
          input section .text.menuProcStatistic(unsigned char) from menus.o, size 192, align 4
          input section .text.menuRXSetup(unsigned char) from menus.o, size 192, align 4
          input section .text.calcExpo(unsigned char, short) from menus.o, size 188, align 4
          input section .text.menuProcCurve(unsigned char) from menus.o, size 184, align 4
          input section .text.initAFHDS2A from AFHDS2A_a7105.o, size 180, align 4
          input section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o, size 180, align 4
          input section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.EeFsck() from file.o, size 164, align 4
          input section .text.menuDeleteDupModel(unsigned char) from menus.o, size 164, align 4
          input section .text.menuRangeBind(unsigned char) from menus.o, size 164, align 4
          input section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 164, align 4
          input section .text.executeMenu(unsigned char) from elrsV2.o, size 164, align 4
          input section .text.drawFunction(unsigned char, unsigned char) from menus.o, size 160, align 4
          input section .text.shutdown_crsf_serial_port from BoardI6.o, size 152, align 4
          input section .init.SystemInit from system_MKL16Z4.o, size 148, align 4
          input section .text.initAFHDS from AFHDS.o, size 144, align 4
          input section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o, size 144, align 4
          input section .text.doMainScreenGrphics() from menus.o, size 140, align 4
          input section .text.refreshDiplay() from lcd.o, size 140, align 4
          input section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o, size 140, align 4
          input section .text.drawCurve(unsigned char) from menus.o, size 136, align 4
          input section .text.keyState(EnumKeys) from drivers.o, size 136, align 4
          input section .text.eeGeneralDefault() from pers.o, size 136, align 4
          input section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 136, align 4
          input section .text.t_voice::voice_process() from audio.o, size 132, align 4
          input section .text.audioQueue::heartbeat() from audio.o, size 128, align 4
          input section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o, size 128, align 4
          input section .text.set_lpsci_direction(bool) from BoardI6.o, size 128, align 4
          input section .text.scaleAnalog(short, unsigned char) from menus.o, size 124, align 4
          input section .text.EFile::read(unsigned char*, unsigned short) from file.o, size 120, align 4
          input section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o, size 120, align 4
          input section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o, size 120, align 4
          input section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 120, align 4
          input section .text.eeReadGeneral() from pers.o, size 120, align 4
          input section .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) from BoardI6.o, size 116, align 4
          input section .text.get_telemetry_value(unsigned char) from menus.o, size 116, align 4
          input section .text.getGvarSourceValue(unsigned char) from er9x.o, size 116, align 4
          input section .text.insertMix(unsigned char, unsigned char) from menus.o, size 112, align 4
          input section .text.getValue(unsigned char) from er9x.o, size 112, align 4
          input section .text.alertx(char const*, bool) from er9x.o, size 112, align 4
          input section .text.modelDefaultWrite(unsigned char) from pers.o, size 112, align 4
          input section .text.menuDeleteMix(unsigned char) from menus.o, size 112, align 4
          input section .text.UART2_IRQHandler from BoardI6.o, size 112, align 4
          input section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o, size 108, align 4
          input section .text.SPI0_IRQHandler from BoardI6.o, size 108, align 4
          input section .text.eeDuplicateModel(unsigned char) from pers.o, size 104, align 4
          input section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o, size 100, align 4
          input section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o, size 100, align 4
          input section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o, size 100, align 4
          input section .text.PIND from BoardI6.o, size 100, align 4
          input section .text.getADC_osmp from BoardI6.o, size 96, align 4
          input section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o, size 96, align 4
          input section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o, size 96, align 4
          input section .text.TPM0_IRQHandler from BoardI6.o, size 96, align 4
          input section .text.PINB from BoardI6.o, size 96, align 4
          input section .text.almess(char const*, unsigned char) from er9x.o, size 92, align 4
          input section .text.doBackLightVoice(unsigned char) from er9x.o, size 92, align 4
          input section .text.calcStickScroll(unsigned char) from er9x.o, size 92, align 4
          input section .text.applyTemplate() from templates.o, size 92, align 4
          input section .text.DMA0_IRQHandler from BoardI6.o, size 92, align 4
          input section .text.EFile::closeTrunc() from file.o, size 88, align 4
          input section .text.lcd_init() from lcd.o, size 88, align 4
          input section .text.setMix(unsigned char, unsigned char) from templates.o, size 88, align 4
          input section .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o, size 88, align 4
          input section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o, size 88, align 4
          input section .text.dispSignalQality(unsigned char) from menus.o, size 84, align 4
          input section .text.eeWriteGeneral() from pers.o, size 84, align 4
          input section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o, size 84, align 4
          input section .text.PINE from BoardI6.o, size 84, align 4
          input section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o, size 80, align 4
          input section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 80, align 4
          input section .text.ISR_TIMER0_COMP_vect from er9x.o, size 80, align 4
          input section .text.crsf_send_data from BoardI6.o, size 76, align 4
          input section .text.checkTHR() from er9x.o, size 76, align 4
          input section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o, size 76, align 4
          input section .text.check_backlight_voice() from er9x.o, size 76, align 4
          input section .text.checkThrottlePosition() from er9x.o, size 76, align 4
          input section .text.setupPulsesCrossfire() from crossfire.o, size 76, align 4
          input section .text.SPI_RADIO_ReceiveBlock from BoardI6.o, size 76, align 4
          input section .text.popMenu(bool) from er9x.o, size 72, align 4
          input section .text.resetElrsMenuVariables() from elrsV2.o, size 72, align 4
          input section .text.SetStartPulsePol() from pulses.o, size 72, align 4
          input section .text.yesNoMenuExit(unsigned char, char const*) from menus.o, size 72, align 4
          input section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o, size 72, align 4
          input section .text.PIT_IRQHandler from BoardI6.o, size 72, align 4
          input section .text.start_lpsci_DMA_receive() from BoardI6.o, size 68, align 4
          input section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o, size 68, align 4
          input section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o, size 68, align 4
          input section .text.ISR_TIMER1_COMPA_vect from pulses.o, size 68, align 4
          input section .init from MKL16Z4_Vectors.o, size 68, align 4
          input section .text.EFile::swap(unsigned char, unsigned char) from file.o, size 64, align 4
          input section .text.audioQueue::getToneLength(unsigned char) from audio.o, size 64, align 4
          input section .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o, size 64, align 4
          input section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.anaIn(unsigned char) from er9x.o, size 60, align 4
          input section .text.process_read_dma_data() from BoardI6.o, size 60, align 4
          input section .text.stop_dma_receive() from BoardI6.o, size 60, align 4
          input section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.rangeBindAction(unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o, size 60, align 4
          input section .text.EeFsFormat() from file.o, size 60, align 4
          input section .text.audioQueue::driver() from er9x.o, size 56, align 4
          input section .text.REG(signed char, signed char, signed char) from er9x.o, size 56, align 4
          input section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o, size 56, align 4
          input section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 56, align 4
          input section .text.get_dr_state(unsigned char) from menus.o, size 56, align 4
          input section .text.resetTimern(unsigned char) from menus.o, size 56, align 4
          input section .text.PORTC_PORTD_IRQHandler from BoardI6.o, size 56, align 4
          input section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o, size 56, align 4
          input section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o, size 56, align 4
          input section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 52, align 4
          input section .text.pushMenu(void (*)(unsigned char)) from er9x.o, size 52, align 4
          input section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o, size 52, align 4
          input section .text.crossfireTelemetryPing() from elrsV2.o, size 52, align 4
          input section .text.eeLoadModelForBackup(unsigned char) from pers.o, size 52, align 4
          input section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o, size 52, align 4
          input section .text.getFlightPhase() from er9x.o, size 52, align 4
          input section .text.A7105_SetPower() from A7105_SPI.o, size 52, align 4
          input section .text.SPI_RADIO_SendBlock from BoardI6.o, size 52, align 4
          input section .rodata..L.str.3 from elrsV2.o, size 50, align 4
          input section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o, size 48, align 4
          input section .text.EeFsFree(unsigned char) from file.o, size 48, align 4
          input section .text.modelSave(unsigned char) from pers.o, size 48, align 4
          input section .text.char2idx(char) from menus.o, size 48, align 4
          input section .text.EeFsOpen() from file.o, size 48, align 4
          input section .text.eeDirty(unsigned char) from pers.o, size 48, align 4
          input section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 48, align 4
          input section .text.A7105_ReadData(unsigned char) from A7105_SPI.o, size 48, align 4
          input section .text.SX127xDriver::SX127xDriver() from SX127x.o, size 44, align 4
          input section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 44, align 4
          input section .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o, size 44, align 4
          input section .text.putVoiceQueueLong(unsigned short) from audio.o, size 44, align 4
          input section .text.menuMixersLimit(unsigned char) from menus.o, size 44, align 4
          input section .text.PING from BoardI6.o, size 44, align 4
          input section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o, size 44, align 4
          input section .rodata..L.str.2 from elrsV2.o, size 42, align 4
          input section .text.mDelay from BoardI6.o, size 40, align 4
          input section .text.EFile::rm(unsigned char) from file.o, size 40, align 4
          input section .text.EeFsAlloc() from file.o, size 40, align 4
          input section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 40, align 4
          input section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.lcd_plot(unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.A7105_AntSwitch() from A7105_SPI.o, size 40, align 4
          input section .text.eeWaitComplete() from pers.o, size 40, align 4
          input section .text.switchDisplay(unsigned char, unsigned char) from menus.o, size 40, align 4
          input section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o, size 40, align 4
          input section .text.startPulses() from pulses.o, size 40, align 4
          input section .text.evalOffset(signed char) from menus.o, size 40, align 4
          input section .init from Kinetis_KL_Startup.o, size 40, align 4
          input section .rodata..L.str.4 from elrsV2.o, size 39, align 4
          input section .text.EFile::openRd(unsigned char) from file.o, size 36, align 4
          input section .text.curveAddress(unsigned char) from menus.o, size 36, align 4
          input section .text.crsf_init() from crossfire.o, size 36, align 4
          input section .text.ee_waite() from drivers.o, size 36, align 4
          input section .text.reachMixerCountLimit() from menus.o, size 36, align 4
          input section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 4
          input section .text.crsf_action() from crossfire.o, size 36, align 4
          input section .text.evalChkSum() from pers.o, size 36, align 4
          input section .text.LCD_DATA from BoardI6.o, size 36, align 4
          input section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o, size 36, align 4
          input section .text.EFile::size() from file.o, size 32, align 4
          input section .text.setVolume(unsigned char) from audio.o, size 32, align 4
          input section .text.chainMenu(void (*)(unsigned char)) from er9x.o, size 32, align 4
          input section .text.trace() from menus.o, size 32, align 4
          input section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o, size 32, align 4
          input section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o, size 32, align 4
          input section .text.processVoiceAlarms() from er9x.o, size 32, align 4
          input section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o, size 32, align 4
          input section .text.lcdSetRefVolt(unsigned char) from lcd.o, size 32, align 4
          input section .text.backlightKey() from er9x.o, size 32, align 4
          input section .text.pauseEvents(unsigned char) from drivers.o, size 32, align 4
          input section .text.menuPressed() from drivers.o, size 32, align 4
          input section .text.EeFsGetFree() from file.o, size 32, align 4
          input section .text.SetPRTTimPeriod from BoardI6.o, size 32, align 4
          input section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o, size 28, align 4
          input section .text.throttleReversed() from er9x.o, size 28, align 4
          input section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o, size 28, align 4
          input section .text.modeFixValue(unsigned char) from er9x.o, size 28, align 4
          input section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 28, align 4
          input section .text.on_voice_cb(unsigned char*, unsigned char) from audio.o, size 28, align 4
          input section .text.killEvents(unsigned char) from drivers.o, size 28, align 4
          input section .text.TPM2_IRQHandler from BoardI6.o, size 28, align 4
          input section .text.TPM1_IRQHandler from BoardI6.o, size 28, align 4
          input section .text.EnableGIO from BoardI6.o, size 28, align 4
          input section .text.clearKeyEvents() from er9x.o, size 24, align 4
          input section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 24, align 4
          input section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.ISR_TIMER2_OVF_vect from er9x.o, size 24, align 4
          input section .text.GetChipID from BoardI6.o, size 24, align 4
          input section .rodata..L.str.1 from elrsV2.o, size 22, align 4
          input section .rodata..L.str from elrsV2.o, size 22, align 4
          input section .text.EFile::exists(unsigned char) from file.o, size 20, align 4
          input section .text.EeFsFlush() from file.o, size 20, align 4
          input section .text.EeFsFlushFreelist() from file.o, size 20, align 4
          input section .text.lcd_clear() from lcd.o, size 20, align 4
          input section .text.idx2char(unsigned char) from menus.o, size 20, align 4
          input section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o, size 20, align 4
          input section .text.checkIncDec_u0(short, unsigned char) from er9x.o, size 20, align 4
          input section .text.checkIncDec_0(signed char, signed char) from er9x.o, size 20, align 4
          input section .text.audioDefevent(unsigned char) from audio.o, size 20, align 4
          input section .text.resetTimer1() from menus.o, size 20, align 4
          input section .text.displayNext() from menus.o, size 20, align 4
          input section .text.clearMixes() from templates.o, size 20, align 4
          input section .text.audioEvent(unsigned char, unsigned short) from audio.o, size 20, align 4
          input section .text.DisableGIO from BoardI6.o, size 20, align 4
          input section .init._start from SEGGER_THUMB_Startup.o, size 20, align 4
          input section .text.rw_0 from BoardI6.o, size 16, align 4
          input section .text.rs_1 from BoardI6.o, size 16, align 4
          input section .text.rs_0 from BoardI6.o, size 16, align 4
          input section .text.rd_1 from BoardI6.o, size 16, align 4
          input section .text.rd_0 from BoardI6.o, size 16, align 4
          input section .text.crsf_is_sending from BoardI6.o, size 16, align 4
          input section .text.CS_STATE(unsigned char) from er9x.o, size 16, align 4
          input section .text.lcdSetContrast() from lcd.o, size 16, align 4
          input section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o, size 16, align 4
          input section .text.mixaddress(unsigned char) from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_er9x.cpp from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o, size 16, align 4
          input section .text.TX_RX_PutVal from BoardI6.o, size 16, align 4
          input section .text.GetPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.GetPPMOutState from BoardI6.o, size 16, align 4
          input section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.Buzzer_SetVal from BoardI6.o, size 16, align 4
          input section .text.Buzzer_ClrVal from BoardI6.o, size 16, align 4
          input section .rodata..Lswitch.table.SetPRTTimPeriod from BoardI6.o, size 16, align 4
          input section .text.rst_1 from BoardI6.o, size 12, align 4
          input section .text.rst_0 from BoardI6.o, size 12, align 4
          input section .text.cs_0 from BoardI6.o, size 12, align 4
          input section .text.backlight_on from BoardI6.o, size 12, align 4
          input section .text.backlight_off from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_on from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_off from BoardI6.o, size 12, align 4
          input section .text.SX127xHal::SX127xHal() from SX127xHal.o, size 12, align 4
          input section .text.get_tmr10ms() from er9x.o, size 12, align 4
          input section .text.SetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.RF1_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF1_ClrVal from BoardI6.o, size 12, align 4
          input section .text.RF0_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF0_ClrVal from BoardI6.o, size 12, align 4
          input section .text.GetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.EnablePRTTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMOut from BoardI6.o, size 12, align 4
          input section .text.DisablePRTTim from BoardI6.o, size 12, align 4
          input section .text.DisablePPMOut from BoardI6.o, size 12, align 4
          input section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o, size 246, align 2
          input section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o, size 224, align 2
          input section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o, size 132, align 2
          input section .text.intpol(short, unsigned char) from menus.o, size 116, align 2
          input section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o, size 114, align 2
          input section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o, size 108, align 2
          input section .text.telltale(unsigned char, signed char, signed char) from menus.o, size 90, align 2
          input section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 74, align 2
          input section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 70, align 2
          input section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o, size 66, align 2
          input section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o, size 66, align 2
          input section .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 64, align 2
          input section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o, size 62, align 2
          input section .text.expo(short, short) from menus.o, size 60, align 2
          input section .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 56, align 2
          input section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o, size 56, align 2
          input section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 50, align 2
          input section .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a), size 46, align 2
          input section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o, size 46, align 2
          input section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 46, align 2
          input section .text.A7105_WriteID(unsigned int) from A7105_SPI.o, size 44, align 2
          input section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o, size 44, align 2
          input section .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a), size 42, align 2
          input section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 42, align 2
          input section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o, size 40, align 2
          input section .text.A7105_Reset() from A7105_SPI.o, size 40, align 2
          input section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o, size 38, align 2
          input section .text.DoSum(unsigned char*, unsigned char) from audio.o, size 36, align 2
          input section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 2
          input section .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 34, align 2
          input section .text.expou(unsigned short, unsigned short) from menus.o, size 34, align 2
          input section .text.getCurrentSwitchStates() from er9x.o, size 34, align 2
          input section .text.lcdSendCtl(unsigned char) from lcd.o, size 32, align 2
          input section .text.stickMoveValue() from er9x.o, size 32, align 2
          input section .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 30, align 2
          input section .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 30, align 2
          input section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o, size 30, align 2
          input section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 28, align 2
          input section .text.validateName(char*, unsigned char) from pers.o, size 28, align 2
          input section .text.voiceMinutes(short) from menus.o, size 28, align 2
          input section .text.A7105_Strobe(unsigned char) from A7105_SPI.o, size 28, align 2
          input section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 26, align 2
          input section .text.StubbornSender::ResetState() from stubborn_sender.o, size 24, align 2
          input section .text.EeFsRead(unsigned char, unsigned char) from file.o, size 24, align 2
          input section .text.EeFsSetLink(unsigned char, unsigned char) from file.o, size 22, align 2
          input section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 22, align 2
          input section .text.calc100toRESX(signed char) from er9x.o, size 22, align 2
          input section .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 20, align 2
          input section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o, size 20, align 2
          input section .text.setNameP(char*, char const*) from pers.o, size 20, align 2
          input section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o, size 20, align 2
          input section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 20, align 2
          input section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 18, align 2
          input section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 16, align 2
          input section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.TITLEP(char const*) from menus.o, size 16, align 2
          input section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o, size 16, align 2
          input section .text.calc1000toRESX(short) from er9x.o, size 16, align 2
          input section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o, size 16, align 2
          input section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 16, align 2
          input section .text.getTrimValue(unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 16, align 2
          input section .text.A7105_Sleep() from A7105_SPI.o, size 16, align 2
          input section .text.main from main.o, size 14, align 2
          input section .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a), size 14, align 2
          input section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o, size 14, align 2
          input section .text.message(char const*) from er9x.o, size 14, align 2
          input section .text.keyDown() from er9x.o, size 14, align 2
          input section .text.putVoiceQueueUpper(unsigned char) from audio.o, size 14, align 2
          input section .text.REG100_100(signed char) from er9x.o, size 14, align 2
          input section .text.switchPosition(unsigned char) from drivers.o, size 12, align 2
          input section .text.eeModelExists(unsigned char) from pers.o, size 12, align 2
          input section .text.getSwitch00(signed char) from er9x.o, size 12, align 2
          input section .text.EeFsGetLink(unsigned char) from file.o, size 10, align 2
          input section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o, size 10, align 2
          input section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o, size 10, align 2
          input section .text.alert(char const*) from er9x.o, size 10, align 2
          input section .text.resetTimer2() from menus.o, size 10, align 2
          input section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o, size 10, align 2
          input section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o, size 10, align 2
          input section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o, size 10, align 2
          input section .text.audioQueue::busy() from audio.o, size 8, align 2
          input section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o, size 8, align 2
          input section .text.putVoiceQueue(unsigned char) from audio.o, size 8, align 2
          input section .text.crsf_shutdown() from crossfire.o, size 8, align 2
          input section .rodata.font_dblsize from lcd.o, size 1380, align 1
          input section .rodata.font from lcd.o, size 495, align 1
          input section .rodata.crc8tab from crc_crsf.o, size 256, align 1
          input section .rodata.Str_telemItems from menus.o, size 238, align 1
          input section .rodata.Str_Chans_Gv from menus.o, size 166, align 1
          input section .rodata..L.str.11 from menus.o, size 125, align 1
          input section .rodata.Str_Cswitch from menus.o, size 114, align 1
          input section .rodata.Str_Sounds from menus.o, size 98, align 1
          input section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o, size 88, align 1
          input section .rodata..L.str.51 from menus.o, size 82, align 1
          input section .rodata..L.str.45 from menus.o, size 76, align 1
          input section .rodata.sticks from menus.o, size 75, align 1
          input section .rodata..L.str.110 from menus.o, size 75, align 1
          input section .rodata.Curve_Str from menus.o, size 74, align 1
          input section .rodata..L.str.105 from menus.o, size 71, align 1
          input section .rodata.s_charTab from menus.o, size 67, align 1
          input section .rodata.Str_Switches from er9x.o, size 65, align 1
          input section .rodata..L.str.4 from menus.o, size 65, align 1
          input section .rodata..L.str.6 from menus.o, size 63, align 1
          input section .rodata.Str_Main_Popup from menus.o, size 58, align 1
          input section .rodata.TelemIndex from menus.o, size 58, align 1
          input section .rodata..L.str.48 from menus.o, size 54, align 1
          input section .rodata..L.str.103 from menus.o, size 53, align 1
          input section .rodata..L.str.107 from menus.o, size 52, align 1
          input section .rodata.AFHDS_A7105_regs from BoardI6.o, size 50, align 1
          input section .rodata.AFHDS2A_A7105_regs from BoardI6.o, size 50, align 1
          input section .rodata..L.str.9 from elrsV2.o, size 50, align 1
          input section .rodata.Stamps from stamp.o, size 49, align 1
          input section .rodata..L.str.50 from menus.o, size 46, align 1
          input section .rodata..L.str.47 from menus.o, size 46, align 1
          input section .rodata..L.str.16 from menus.o, size 46, align 1
          input section .rodata..L.str.92 from menus.o, size 43, align 1
          input section .rodata..L.str.13 from er9x.o, size 43, align 1
          input section .rodata..L.str.115 from menus.o, size 43, align 1
          input section .rodata.UnitsString from menus.o, size 42, align 1
          input section .rodata.Str_Gv_Source from menus.o, size 41, align 1
          input section .rodata..L.str.70 from menus.o, size 41, align 1
          input section .rodata..L.str.46 from menus.o, size 40, align 1
          input section .rodata.MixPopList from menus.o, size 39, align 1
          input section .rodata.ModelPopList from menus.o, size 38, align 1
          input section .rodata..L.str.98 from menus.o, size 38, align 1
          input section .rodata..L.str.71 from menus.o, size 37, align 1
          input section .rodata..L.str.6 from er9x.o, size 37, align 1
          input section .rodata..L.str.101 from menus.o, size 37, align 1
          input section .rodata..L.str.108 from menus.o, size 34, align 1
          input section .rodata..L.str.5 from er9x.o, size 33, align 1
          input section .rodata.AFHDS_tx_channels from AFHDS.o, size 32, align 1
          input section .rodata..L.str.74 from menus.o, size 32, align 1
          input section .rodata..L.str.57 from menus.o, size 32, align 1
          input section .rodata..L.str.113 from menus.o, size 32, align 1
          input section .rodata.SW_3_IDX from menus.o, size 30, align 1
          input section .rodata.idx_to_afhds2a from crossfire.o, size 30, align 1
          input section .rodata..L.str.93 from menus.o, size 30, align 1
          input section .rodata..L.str.27 from menus.o, size 30, align 1
          input section .rodata..L.str.15 from menus.o, size 28, align 1
          input section .rodata..L.str.104 from menus.o, size 28, align 1
          input section .rodata..L.str.85 from menus.o, size 27, align 1
          input section .rodata..L.str.53 from menus.o, size 26, align 1
          input section .rodata..L.str.17 from menus.o, size 25, align 1
          input section .rodata.bchout_ar from er9x.o, size 24, align 1
          input section .rodata..L.str.116 from menus.o, size 24, align 1
          input section .rodata..L.str.111 from menus.o, size 24, align 1
          input section .rodata..L.str.35 from menus.o, size 23, align 1
          input section .rodata.Str_On_Off_Both from menus.o, size 22, align 1
          input section .rodata..L.str.77 from menus.o, size 22, align 1
          input section .rodata..L.str.75 from menus.o, size 22, align 1
          input section .rodata..L.str.2 from er9x.o, size 22, align 1
          input section .rodata..L.str.2 from pers.o, size 21, align 1
          input section .rodata..L.str.43 from menus.o, size 20, align 1
          input section .rodata..L.str.100 from menus.o, size 20, align 1
          input section .rodata..L.str.34 from menus.o, size 19, align 1
          input section .rodata..L.str.3 from pers.o, size 19, align 1
          input section .rodata.modi12x3 from er9x.o, size 18, align 1
          input section .rodata..L.str.68 from menus.o, size 18, align 1
          input section .rodata..L.str.5 from pers.o, size 18, align 1
          input section .rodata..L.str.25 from menus.o, size 18, align 1
          input section .rodata..L.str.23 from menus.o, size 18, align 1
          input section .rodata.menuWhenDone from menus.o, size 17, align 1
          input section .rodata..L.str.7 from elrsV2.o, size 17, align 1
          input section .rodata..L.str.66 from menus.o, size 17, align 1
          input section .rodata..L.str.49 from menus.o, size 17, align 1
          input section .rodata..L.str.40 from menus.o, size 17, align 1
          input section .rodata..L.str.18 from menus.o, size 17, align 1
          input section .rodata..L.str.119 from menus.o, size 17, align 1
          input section .rodata..L.str.117 from menus.o, size 17, align 1
          input section .rodata..L.str.102 from menus.o, size 17, align 1
          input section .rodata.stickScramble from er9x.o, size 16, align 1
          input section .rodata.Str_EEPROM_Overflow from pers.o, size 16, align 1
          input section .rodata..L.str.73 from menus.o, size 16, align 1
          input section .rodata..L.str.61 from menus.o, size 16, align 1
          input section .rodata..L.str.4 from pers.o, size 16, align 1
          input section .rodata..L.str.21 from menus.o, size 16, align 1
          input section .rodata..L.str.121 from menus.o, size 16, align 1
          input section .rodata..L.str.120 from menus.o, size 16, align 1
          input section .rodata..L.str.12 from er9x.o, size 16, align 1
          input section .rodata..L.str.106 from menus.o, size 16, align 1
          input section .rodata.Str_Beep_Countdown from menus.o, size 15, align 1
          input section .rodata.csTypeTable from er9x.o, size 15, align 1
          input section .rodata..L.str.95 from menus.o, size 15, align 1
          input section .rodata..L.str.89 from menus.o, size 15, align 1
          input section .rodata..L.str.6 from pers.o, size 15, align 1
          input section .rodata..L.str.5 from menus.o, size 15, align 1
          input section .rodata..L.str.12 from menus.o, size 15, align 1
          input section .rodata..L.str.114 from menus.o, size 15, align 1
          input section .rodata..L.str.11 from er9x.o, size 15, align 1
          input section .rodata..L.str.99 from menus.o, size 14, align 1
          input section .rodata..L.str.86 from menus.o, size 14, align 1
          input section .rodata..L.str.7 from menus.o, size 14, align 1
          input section .rodata..L.str.67 from menus.o, size 14, align 1
          input section .rodata..L.str.52 from menus.o, size 14, align 1
          input section .rodata..L.str.3 from er9x.o, size 14, align 1
          input section .rodata..L.str.7 from er9x.o, size 13, align 1
          input section .rodata..L.str.62 from menus.o, size 13, align 1
          input section .rodata..L.str.22 from menus.o, size 13, align 1
          input section .rodata..L.str from er9x.o, size 13, align 1
          input section .rodata.Lcdinit from lcd.o, size 12, align 1
          input section .rodata.Str_minute_Beep from menus.o, size 12, align 1
          input section .rodata.Str_Calibration from menus.o, size 12, align 1
          input section .rodata.Str_AudioHaptic from menus.o, size 12, align 1
          input section .rodata..L.str.76 from menus.o, size 12, align 1
          input section .rodata..L.str.69 from menus.o, size 12, align 1
          input section .rodata..L.str.55 from menus.o, size 12, align 1
          input section .rodata..L.str.19 from menus.o, size 12, align 1
          input section .rodata..L.str.112 from menus.o, size 12, align 1
          input section .rodata.Str_heli_setup from menus.o, size 11, align 1
          input section .rodata.Str_Cswitches from menus.o, size 11, align 1
          input section .rodata.Str_Globals from menus.o, size 11, align 1
          input section .rodata.Str_Safety from menus.o, size 11, align 1
          input section .rodata..L.str.90 from menus.o, size 11, align 1
          input section .rodata..L.str.9 from er9x.o, size 11, align 1
          input section .rodata..L.str.78 from menus.o, size 11, align 1
          input section .rodata..L.str.63 from menus.o, size 11, align 1
          input section .rodata..L.str.1 from pers.o, size 11, align 1
          input section .rodata..L.str from pers.o, size 11, align 1
          input section .rodata.Str_Telemetry from menus.o, size 10, align 1
          input section .rodata.Str_DiagSwtch from menus.o, size 10, align 1
          input section .rodata.Str_TRE012AG from menus.o, size 10, align 1
          input section .rodata..L.str.96 from menus.o, size 10, align 1
          input section .rodata..L.str.80 from menus.o, size 10, align 1
          input section .rodata..L.str.54 from menus.o, size 10, align 1
          input section .rodata..L.str.29 from menus.o, size 10, align 1
          input section .rodata..L.str.10 from menus.o, size 10, align 1
          input section .rodata..L.str from menus.o, size 10, align 1
          input section .rodata.Str_Protocol from menus.o, size 9, align 1
          input section .rodata.Str_Hardware from menus.o, size 9, align 1
          input section .rodata.Str_Controls from menus.o, size 9, align 1
          input section .rodata..L.str.97 from menus.o, size 9, align 1
          input section .rodata..L.str.88 from menus.o, size 9, align 1
          input section .rodata..L.str.87 from menus.o, size 9, align 1
          input section .rodata..L.str.83 from menus.o, size 9, align 1
          input section .rodata..L.str.8 from er9x.o, size 9, align 1
          input section .rodata..L.str.8 from menus.o, size 9, align 1
          input section .rodata..L.str.44 from menus.o, size 9, align 1
          input section .rodata..L.str.33 from menus.o, size 9, align 1
          input section .rodata..L.str.30 from menus.o, size 9, align 1
          input section .rodata..L.str.24 from menus.o, size 9, align 1
          input section .rodata.per10ms()::crossTrim from drivers.o, size 8, align 1
          input section .rodata.UnitsText from menus.o, size 8, align 1
          input section .rodata._bitmask from lcd.o, size 8, align 1
          input section .rodata.Str_Expo from menus.o, size 8, align 1
          input section .rodata.rate from er9x.o, size 8, align 1
          input section .rodata.Str_Version from menus.o, size 8, align 1
          input section .rodata.Str_Trainer from menus.o, size 8, align 1
          input section .rodata.Str_General from menus.o, size 8, align 1
          input section .rodata.Str_Display from menus.o, size 8, align 1
          input section .rodata.Str_DiagAna from menus.o, size 8, align 1
          input section .rodata.UnitsVoice from menus.o, size 8, align 1
          input section .rodata..L.str.84 from menus.o, size 8, align 1
          input section .rodata..L.str.8 from elrsV2.o, size 8, align 1
          input section .rodata..L.str.65 from menus.o, size 8, align 1
          input section .rodata..L.str.58 from menus.o, size 8, align 1
          input section .rodata..L.str.4 from er9x.o, size 8, align 1
          input section .rodata..L.str.26 from menus.o, size 8, align 1
          input section .rodata..L.str.109 from menus.o, size 8, align 1
          input section .rodata.Str_Alert from er9x.o, size 7, align 1
          input section .rodata.ChannelToPin from BoardI6.o, size 7, align 1
          input section .rodata.Str_limits from menus.o, size 7, align 1
          input section .rodata.Str_Curves from menus.o, size 7, align 1
          input section .rodata.Str_Alarms from menus.o, size 7, align 1
          input section .rodata..L.str.79 from menus.o, size 7, align 1
          input section .rodata..L.str.60 from menus.o, size 7, align 1
          input section .rodata..L.str.10 from er9x.o, size 7, align 1
          input section .rodata..L.str.1 from menus.o, size 7, align 1
          input section .rodata.Str_Timer from menus.o, size 6, align 1
          input section .rodata.Str_Modes from menus.o, size 6, align 1
          input section .rodata.Str_Mixer from menus.o, size 6, align 1
          input section .rodata.Str_Curve from menus.o, size 6, align 1
          input section .rodata.Str_1_RETA from menus.o, size 6, align 1
          input section .rodata..L.str.91 from menus.o, size 6, align 1
          input section .rodata..L.str.81 from menus.o, size 6, align 1
          input section .rodata..L.str.6 from elrsV2.o, size 6, align 1
          input section .rodata..L.str.31 from menus.o, size 6, align 1
          input section .rodata..L.str.14 from menus.o, size 6, align 1
          input section .rodata..L.str.13 from menus.o, size 6, align 1
          input section .rodata.Str_Name from menus.o, size 5, align 1
          input section .rodata.Str_Hyphens from er9x.o, size 5, align 1
          input section .rodata..L.str.72 from menus.o, size 5, align 1
          input section .rodata..L.str.56 from menus.o, size 5, align 1
          input section .rodata..L.str.32 from menus.o, size 5, align 1
          input section .rodata..L.str.3 from menus.o, size 5, align 1
          input section .rodata..L.str.20 from menus.o, size 5, align 1
          input section .rodata.menuProc0(unsigned char)::xt from menus.o, size 4, align 1
          input section .rodata.Str_ON from er9x.o, size 4, align 1
          input section .rodata.Str_OFF from er9x.o, size 4, align 1
          input section .rodata..L.str.94 from menus.o, size 4, align 1
          input section .rodata..L.str.64 from menus.o, size 4, align 1
          input section .rodata..L.str.59 from menus.o, size 4, align 1
          input section .rodata..L.str.39 from menus.o, size 4, align 1
          input section .rodata..L.str.38 from menus.o, size 4, align 1
          input section .rodata..L.str.28 from menus.o, size 4, align 1
          input section .rodata..L.str.118 from menus.o, size 4, align 1
          input section .rodata..L.str.1 from er9x.o, size 4, align 1
          input section .rodata.Str_SC from menus.o, size 3, align 1
          input section .rodata.Str_GV from menus.o, size 3, align 1
          input section .rodata..L.str.9 from menus.o, size 3, align 1
          input section .rodata..L.str.82 from menus.o, size 3, align 1
          input section .rodata..L.str.5 from elrsV2.o, size 3, align 1
          input section .rodata..L.str.42 from menus.o, size 3, align 1
          input section .rodata..L.str.41 from menus.o, size 3, align 1
          input section .rodata..L.str.2 from menus.o, size 3, align 1
          input block exidx from [ Linker created ], size 0, align 1
          input block dtors from [ Linker created ], size 0, align 1
          input block ctors from [ Linker created ], size 12, align 4
      place in [0x00000000 to 0x0000ffff] with auto order
          input block tdata_load from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block tls from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o, size 8, align 8
          input section .bss.DisplayBuf from lcd.o, size 1024, align 4
          input section .bss.Output from menus.o, size 256, align 4
          input section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o, size 172, align 4
          input section .bss.Fade from menus.o, size 80, align 4
          input section .bss.g_crossfire from crossfire.o, size 65, align 4
          input section .bss.eeFs from file.o, size 64, align 4
          input section .bss.Radio from ELRS.o, size 48, align 4
          input section .bss.packet from A7105_SPI.o, size 40, align 4
          input section .bss.g_menuStack from er9x.o, size 20, align 4
          input section .bss.outputTelemetryBuffer from crossfire.o, size 16, align 4
          input section .bss.MspSender from ELRS.o, size 16, align 4
          input section .bss.i2c_buffer from drivers.o, size 12, align 4
          input section .bss.TelemetryReceiver from ELRS.o, size 12, align 4
          input section .bss.LQCalc from ELRS.o, size 12, align 4
          input section .bss.voice_uart_send_buf from BoardI6.o, size 10, align 4
          input section .bss.telemetryErrors from crossfire.o, size 4, align 4
          input section .bss.hal from SX127x.o, size 4, align 4
          input section .bss.goodPkt from elrsV2.o, size 4, align 4
          input section .bss.g_voice_cb from BoardI6.o, size 4, align 4
          input section .bss.g_tmr10ms from drivers.o, size 4, align 4
          input section .bss.g_elrs_update_rate from crossfire.o, size 4, align 4
          input section .bss.g_elrs_lag from crossfire.o, size 4, align 4
          input section .bss.perMain()::lastTMR from er9x.o, size 4, align 4
          input section .bss.SX127xHal::instance from SX127xHal.o, size 4, align 4
          input section .bss.SX127xDriver::instance from SX127x.o, size 4, align 4
          input section .bss.g_crsf_read_callback from BoardI6.o, size 4, align 4
          input section .bss.linkstatTimeout from elrsV2.o, size 4, align 4
          input section .bss.fieldTimeout from elrsV2.o, size 4, align 4
          input section .bss.SPI_BufferPtr from BoardI6.o, size 4, align 4
          input section .bss.ID from A7105_SPI.o, size 4, align 4
          input section .bss.AlertMessage from er9x.o, size 4, align 4
          input section .bss.ota_crc from ELRS.o, size 514, align 2
          input section .bss.fields from elrsV2.o, size 300, align 2
          input section .bss.pulses2MHz from pulses.o, size 144, align 2
          input section .bss.Xmem from menus.o, size 106, align 2
          input section .bss.Voice from audio.o, size 36, align 2
          input section .bss.s_timer from menus.o, size 32, align 2
          input section .bss.g_chans512 from menus.o, size 32, align 2
          input section .bss.Ex_chans from menus.o, size 32, align 2
          input section .bss.CsTimer from er9x.o, size 24, align 2
          input section .bss.s_anaFilt from er9x.o, size 16, align 2
          input section .bss.g_ppmIns from er9x.o, size 16, align 2
          input section .bss.Nvs_timer from er9x.o, size 16, align 2
          input section .bss.calibratedStick from menus.o, size 14, align 2
          input section .bss.theWriteFile from pers.o, size 10, align 2
          input section .bss.theFile from pers.o, size 10, align 2
          input section .bss.P1values from er9x.o, size 10, align 2
          input section .bss.TimeGlobals from menus.o, size 8, align 2
          input section .bss.Inactivity from er9x.o, size 6, align 2
          input section .bss.tmrEEPROM from er9x.o, size 2, align 2
          input section .bss.g_tmr16KHz from er9x.o, size 2, align 2
          input section .bss.g_latency from menus.o, size 2, align 2
          input section .bss.g_LightOffCounter from er9x.o, size 2, align 2
          input section .bss.trace()::s_time from menus.o, size 2, align 2
          input section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.mainSequence()::timer from er9x.o, size 2, align 2
          input section .bss.reusableBufferOffset from elrsV2.o, size 2, align 2
          input section .bss.s_eeDirtyTime10ms from pers.o, size 2, align 2
          input section .bss.SPI_Size from BoardI6.o, size 2, align 2
          input section .bss.GAltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.B3_comp_value from pulses.o, size 2, align 2
          input section .bss.AltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.g_model from er9x.o, size 1002, align 1
          input section .bss.reusableBuffer from elrsV2.o, size 800, align 1
          input section .bss.telemetryRxBuffer from crossfire.o, size 128, align 1
          input section .bss.g_eeGeneral from er9x.o, size 118, align 1
          input section .bss.fieldData from elrsV2.o, size 72, align 1
          input section .bss.g_crsf_rx_buf from BoardI6.o, size 64, align 1
          input section .bss.audio from er9x.o, size 56, align 1
          input section .bss.keys from drivers.o, size 45, align 1
          input section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o, size 43, align 1
          input section .bss.hopping_frequency from A7105_SPI.o, size 16, align 1
          input section .bss.Last_switch from er9x.o, size 12, align 1
          input section .bss.voice_uart_recv_buf from BoardI6.o, size 10, align 1
          input section .bss.TimerConfig from er9x.o, size 10, align 1
          input section .bss.Rotary from er9x.o, size 9, align 1
          input section .bss.Nvs_state from er9x.o, size 8, align 1
          input section .bss.phyStick from menus.o, size 4, align 1
          input section .bss.PopupData from menus.o, size 4, align 1
          input section .bss.MenuControl from menus.o, size 3, align 1
          input section .bss.voice_tx_idx from BoardI6.o, size 1, align 1
          input section .bss.voice_rx_idx from BoardI6.o, size 1, align 1
          input section .bss.tick10ms from er9x.o, size 1, align 1
          input section .bss.telemetryRxBufferCount from crossfire.o, size 1, align 1
          input section .bss.sysFlags from er9x.o, size 1, align 1
          input section .bss.stickMoved from er9x.o, size 1, align 1
          input section .bss.statusComplete from elrsV2.o, size 1, align 1
          input section .bss.serialDat0 from pulses.o, size 1, align 1
          input section .bss.scroll_disabled from menus.o, size 1, align 1
          input section .bss.scrollUD from menus.o, size 1, align 1
          input section .bss.scrollLR from menus.o, size 1, align 1
          input section .bss.s_pgOfs from menus.o, size 1, align 1
          input section .bss.s_noHi from menus.o, size 1, align 1
          input section .bss.s_moveMode from menus.o, size 1, align 1
          input section .bss.s_mixMaxSel from menus.o, size 1, align 1
          input section .bss.s_evt from drivers.o, size 1, align 1
          input section .bss.s_editing from menus.o, size 1, align 1
          input section .bss.s_editMode from menus.o, size 1, align 1
          input section .bss.pxxFlag from pulses.o, size 1, align 1
          input section .bss.protocol_flags from A7105_SPI.o, size 1, align 1
          input section .bss.ppmInAvailable from er9x.o, size 1, align 1
          input section .bss.plotType from lcd.o, size 1, align 1
          input section .bss.packet_count from A7105_SPI.o, size 1, align 1
          input section .bss.outputTelemetryBufferTrigger from crossfire.o, size 1, align 1
          input section .bss.outputTelemetryBufferSize from crossfire.o, size 1, align 1
          input section .bss.mixToDelete from menus.o, size 1, align 1
          input section .bss.itemmodified from elrsV2.o, size 1, align 1
          input section .bss.hopping_frequency_no from A7105_SPI.o, size 1, align 1
          input section .bss.heartbeat from pulses.o, size 1, align 1
          input section .bss.g_vbat100mV from er9x.o, size 1, align 1
          input section .bss.g_posHorz from menus.o, size 1, align 1
          input section .bss.g_menuStackPtr from er9x.o, size 1, align 1
          input section .bss.g_blinkTmr10ms from drivers.o, size 1, align 1
          input section .bss.fields_count from elrsV2.o, size 1, align 1
          input section .bss.fieldDataLen from elrsV2.o, size 1, align 1
          input section .bss.curselectIdx from elrsV2.o, size 1, align 1
          input section .bss.curNumSelection from elrsV2.o, size 1, align 1
          input section .bss.curFieldChunk from elrsV2.o, size 1, align 1
          input section .bss.bpanaCenter from menus.o, size 1, align 1
          input section .bss.bind_phase from A7105_SPI.o, size 1, align 1
          input section .bss.badPkt from elrsV2.o, size 1, align 1
          input section .bss.bMenuShown from elrsV2.o, size 1, align 1
          input section .bss.allParamsLoaded from elrsV2.o, size 1, align 1
          input section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o, size 1, align 1
          input section .bss.audioQueue::driver()::toneCounter from er9x.o, size 1, align 1
          input section .bss.perMain()::repeater from er9x.o, size 1, align 1
          input section .bss.perMain()::alertKey from er9x.o, size 1, align 1
          input section .bss.perMain()::s_batCheck from er9x.o, size 1, align 1
          input section .bss.menuProc0(unsigned char)::trimSwLock from menus.o, size 1, align 1
          input section .bss.per10ms()::current from drivers.o, size 1, align 1
          input section .bss.perOut(short*, unsigned char)::sticky from menus.o, size 1, align 1
          input section .bss.check_backlight_voice()::tmr10ms from er9x.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o, size 1, align 1
          input section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o, size 1, align 1
          input section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.A7105_AntSwitch()::sw from A7105_SPI.o, size 1, align 1
          input section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuRangeBind(unsigned char)::timer from menus.o, size 1, align 1
          input section .bss.menuProcIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o, size 1, align 1
          input section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o, size 1, align 1
          input section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcMix(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.s_currIdx from menus.o, size 1, align 1
          input section .bss.Columns from menus.o, size 1, align 1
          input section .bss.wait_fin_count from audio.o, size 1, align 1
          input section .bss.inputs_subview from menus.o, size 1, align 1
          input section .bss.s_eeLongTimer from pers.o, size 1, align 1
          input section .bss.LongMenuTimer from er9x.o, size 1, align 1
          input section .bss.s_moveMixIdx from menus.o, size 1, align 1
          input section .bss.s_eeDirtyMsk from pers.o, size 1, align 1
          input section .bss.s_currMixIdx from menus.o, size 1, align 1
          input section .bss.s_currDestCh from menus.o, size 1, align 1
          input section .bss.s_curveChan from menus.o, size 1, align 1
          input section .bss.IlinesCount from menus.o, size 1, align 1
          input section .bss.s_expoChan from menus.o, size 1, align 1
          input section .bss.ThrottleStickyOn from menus.o, size 1, align 1
          input section .bss.Tevent from er9x.o, size 1, align 1
          input section .bss.SystemOptions from er9x.o, size 1, align 1
          input section .bss.StickScrollTimer from er9x.o, size 1, align 1
          input section .bss.StickScrollAllowed from er9x.o, size 1, align 1
          input section .bss.StepSize from er9x.o, size 1, align 1
          input section .bss.RotaryState from menus.o, size 1, align 1
          input section .bss.RadioState from A7105_SPI.o, size 1, align 1
          input section .bss.RadioActive from pulses.o, size 1, align 1
          input section .bss.PausePulses from pulses.o, size 1, align 1
          input section .bss.Main_running from er9x.o, size 1, align 1
          input section .bss.M_longMenuTimer from menus.o, size 1, align 1
          input section .bss.Lcd_lastPos from lcd.o, size 1, align 1
          input section .bss.LcdLock from lcd.o, size 1, align 1
          input section .bss.InverseBlink from menus.o, size 1, align 1
          input section .bss.EnterMenu from er9x.o, size 1, align 1
          input section .bss.EepromActive from lcd.o, size 1, align 1
          input section .bss.Ee_lock from pers.o, size 1, align 1
          input section .bss.EditType from menus.o, size 1, align 1
          input section .bss.EditColumns from menus.o, size 1, align 1
          input section .bss.DupSub from menus.o, size 1, align 1
          input section .bss.DupIfNonzero from menus.o, size 1, align 1
          input section .bss.Current_protocol from pulses.o, size 1, align 1
          input section .bss.CurrentVolume from er9x.o, size 1, align 1
          input section .bss.CurrentPhase from menus.o, size 1, align 1
          input section .bss.CalcScaleNest from menus.o, size 1, align 1
          input section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o, size 4, align 4
          input section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o, size 4, align 4
          input section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o, size 2, align 2
          input section .data.play_cmd_buf from audio.o, size 10, align 1
          input section .data.shacommit from elrsV2.o, size 7, align 1
          input section .data.AlarmControl from er9x.o, size 4, align 1
          input section .data.prev_power from A7105_SPI.o, size 1, align 1
          input section .data.expectedChunks from elrsV2.o, size 1, align 1
          input section .data.curfieldId from elrsV2.o, size 1, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block heap from [ Linker created ], size 0, align 8


***************************************************************************************
***                                                                                 ***
***                                    Placement                                    ***
***                                                                                 ***
***************************************************************************************

  Executing place at [0x00000000 to 0x000000bf] for 'place at start' block <#5> at line 97, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#5> at line 97, col 45
          Inputs to block vectors
              Allocate [0x00000000 to 0x000000bf] to section .vectors from MKL16Z4_Vectors.o
          Allocate [0x00000000 to 0x000000bf] to block vectors from [ Linker created ]
  Executing place at [0x00000400 to 0x0000040f] for 'place at start' block <#6> at line 98, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#6> at line 98, col 45
          Inputs to block cfm
              Allocate [0x00000400 to 0x0000040f] to section .cfm from MKL16Z4_Vectors.o
          Allocate [0x00000400 to 0x0000040f] to block cfm from [ Linker created ]
  Executing place at [0x1ffff800 size 0] for 'place at start' block <#10> at line 119, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#10> at line 119, col 45
          Allocate [0x1ffff800 size 0] to block vectors_ram from [ Linker created ]
  Executing place at [0x20001700 to 0x200017ff] for 'place at end' block <#14> at line 129, col 45 (1 inputs selected)
      Inputs to 'place at end' block <#14> at line 129, col 45
          Allocate [0x20001700 to 0x200017ff] to block stack from [ Linker created ]
  Executing place in [0x000000c0 to 0x000003ff] + [0x00000410 to 0x0000ffff] (614 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x00000410 to 0x000014c7] to section .text.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x000014c8 to 0x00002157] to section .text.menuProcIndex(unsigned char) from menus.o
      Allocate [0x00002158 to 0x00002d1f] to section .text.perOut(short*, unsigned char) from menus.o
      Allocate [0x00002d20 to 0x000034b7] to section .text.mainSequence() from er9x.o
      Allocate [0x000034b8 to 0x00003a43] to section .text.menuProc0(unsigned char) from menus.o
      Allocate [0x00003a44 to 0x00003f13] to section .text.menuProcMixOne(unsigned char) from menus.o
      Allocate [0x00003f14 to 0x000043bb] to section .text.menuProcMix(unsigned char) from menus.o
      Allocate [0x000043bc to 0x0000482f] to section .text.menuProcVoiceOne(unsigned char) from menus.o
      Allocate [0x00004830 to 0x00004c0b] to section .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x00004c0c to 0x00004fbb] to section .text.HW_Init from BoardI6.o
      Allocate [0x00004fbc to 0x00005323] to section .text.parseParameterInfoMessage(unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x000000c0 to 0x000003fb] to section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Allocate [0x00005324 to 0x0000565f] to section .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Allocate [0x00005660 to 0x00005987] to section .text.timer() from menus.o
      Allocate [0x00005988 to 0x00005ca3] to section .text.menuProcModelSelect(unsigned char) from menus.o
      Allocate [0x00005ca4 to 0x00005fbf] to section .text.menuProcProtocol(unsigned char) from menus.o
      Allocate [0x00005fc0 to 0x0000629b] to section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Allocate [0x0000629c to 0x0000653b] to section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000653c to 0x000067cf] to section .text.menuScaleOne(unsigned char) from menus.o
      Allocate [0x000067d0 to 0x00006a2f] to section .text.processCrossfireTelemetryFrame() from crossfire.o
      Allocate [0x00006a30 to 0x00006c7b] to section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) from elrsV2.o
      Allocate [0x00006c7c to 0x00006e9b] to section .text.mainER() from er9x.o
      Allocate [0x00006e9c to 0x000070bb] to section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o
      Allocate [0x000070bc to 0x000072c7] to section .text.eeLoadModel(unsigned char) from pers.o
      Allocate [0x000072c8 to 0x000074af] to section .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Allocate [0x000074b0 to 0x00007697] to section .text.menuProcTelemetry(unsigned char) from menus.o
      Allocate [0x00007698 to 0x0000787f] to section .text.menuProcGlobals(unsigned char) from menus.o
      Allocate [0x00007880 to 0x00007a5b] to section .text.menuPhaseOne(unsigned char) from menus.o
      Allocate [0x00007a5c to 0x00007c23] to section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Allocate [0x00007c24 to 0x00007deb] to section .text.menuSetFailsafe(unsigned char) from menus.o
      Allocate [0x00007dec to 0x00007f73] to section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Allocate [0x00007f74 to 0x000080f7] to section .text.perOutPhase(short*, unsigned char) from menus.o
      Allocate [0x000080f8 to 0x00008257] to section .text.i2c_master from BoardI6.o
      Allocate [0x00008258 to 0x000083b7] to section .text.eeCheck(bool) from pers.o
      Allocate [0x000083b8 to 0x0000850f] to section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x00008510 to 0x00008667] to section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Allocate [0x00008668 to 0x000087bb] to section .text.menuProcCurveOne(unsigned char) from menus.o
      Allocate [0x000087bc to 0x00008907] to section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Allocate [0x00008908 to 0x00008a4b] to section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x00008a4c to 0x00008b6f] to section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Allocate [0x00008b70 to 0x00008c87] to section .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Allocate [0x00008c88 to 0x00008d93] to section .text.setup_crsf_serial_port from BoardI6.o
      Allocate [0x00008d94 to 0x00008e7f] to section .text.menuModelPhases(unsigned char) from menus.o
      Allocate [0x00008e80 to 0x00008f6b] to section .text.setupPulsesPPM(unsigned char) from pulses.o
      Allocate [0x00008f6c to 0x0000904f] to section .text.checkSwitches() from er9x.o
      Allocate [0x00009050 to 0x00009127] to section .text.per10ms() from drivers.o
      Allocate [0x00009128 to 0x000091ff] to section .text.setStickCenter() from menus.o
      Allocate [0x00009200 to 0x000092cb] to section .text.voice_telem_item(unsigned char) from menus.o
      Allocate [0x000092cc to 0x00009397] to section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Allocate [0x00009398 to 0x00009463] to section .text.A7105_Init() from A7105_SPI.o
      Allocate [0x00009464 to 0x00009527] to section .text.EFile::write(unsigned char*, unsigned char) from file.o
      Allocate [0x00009528 to 0x000095eb] to section .text.Key::input(bool, EnumKeys) from drivers.o
      Allocate [0x000095ec to 0x000096af] to section .text.setupPulses() from pulses.o
      Allocate [0x000096b0 to 0x0000976f] to section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Allocate [0x00009770 to 0x0000982f] to section .text.menuProcStatistic(unsigned char) from menus.o
      Allocate [0x00009830 to 0x000098ef] to section .text.menuRXSetup(unsigned char) from menus.o
      Allocate [0x000098f0 to 0x000099ab] to section .text.calcExpo(unsigned char, short) from menus.o
      Allocate [0x000099ac to 0x00009a63] to section .text.menuProcCurve(unsigned char) from menus.o
      Allocate [0x00009a64 to 0x00009b17] to section .text.initAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x00009b18 to 0x00009bcb] to section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Allocate [0x00009bcc to 0x00009c7b] to section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Allocate [0x00009c7c to 0x00009d2b] to section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x00009d2c to 0x00009dcf] to section .text.EeFsck() from file.o
      Allocate [0x00009dd0 to 0x00009e73] to section .text.menuDeleteDupModel(unsigned char) from menus.o
      Allocate [0x00009e74 to 0x00009f17] to section .text.menuRangeBind(unsigned char) from menus.o
      Allocate [0x00009f18 to 0x00009fbb] to section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x00009fbc to 0x0000a05f] to section .text.executeMenu(unsigned char) from elrsV2.o
      Allocate [0x0000a060 to 0x0000a0ff] to section .text.drawFunction(unsigned char, unsigned char) from menus.o
      Allocate [0x0000a100 to 0x0000a197] to section .text.shutdown_crsf_serial_port from BoardI6.o
      Allocate [0x0000a198 to 0x0000a22b] to section .init.SystemInit from system_MKL16Z4.o
      Allocate [0x0000a22c to 0x0000a2bb] to section .text.initAFHDS from AFHDS.o
      Allocate [0x0000a2bc to 0x0000a34b] to section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x0000a34c to 0x0000a3d7] to section .text.doMainScreenGrphics() from menus.o
      Allocate [0x0000a3d8 to 0x0000a463] to section .text.refreshDiplay() from lcd.o
      Allocate [0x0000a464 to 0x0000a4ef] to section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Allocate [0x0000a4f0 to 0x0000a577] to section .text.drawCurve(unsigned char) from menus.o
      Allocate [0x0000a578 to 0x0000a5ff] to section .text.keyState(EnumKeys) from drivers.o
      Allocate [0x0000a600 to 0x0000a687] to section .text.eeGeneralDefault() from pers.o
      Allocate [0x0000a688 to 0x0000a70f] to section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000a710 to 0x0000a793] to section .text.t_voice::voice_process() from audio.o
      Allocate [0x0000a794 to 0x0000a813] to section .text.audioQueue::heartbeat() from audio.o
      Allocate [0x0000a814 to 0x0000a893] to section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire.o
      Allocate [0x0000a894 to 0x0000a913] to section .text.set_lpsci_direction(bool) from BoardI6.o
      Allocate [0x0000a914 to 0x0000a98f] to section .text.scaleAnalog(short, unsigned char) from menus.o
      Allocate [0x0000a990 to 0x0000aa07] to section .text.EFile::read(unsigned char*, unsigned short) from file.o
      Allocate [0x0000aa08 to 0x0000aa7f] to section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000aa80 to 0x0000aaf7] to section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000aaf8 to 0x0000ab6f] to section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000ab70 to 0x0000abe7] to section .text.eeReadGeneral() from pers.o
      Allocate [0x0000abe8 to 0x0000ac5b] to section .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) from BoardI6.o
      Allocate [0x0000ac5c to 0x0000accf] to section .text.get_telemetry_value(unsigned char) from menus.o
      Allocate [0x0000acd0 to 0x0000ad43] to section .text.getGvarSourceValue(unsigned char) from er9x.o
      Allocate [0x0000ad44 to 0x0000adb3] to section .text.insertMix(unsigned char, unsigned char) from menus.o
      Allocate [0x0000adb4 to 0x0000ae23] to section .text.getValue(unsigned char) from er9x.o
      Allocate [0x0000ae24 to 0x0000ae93] to section .text.alertx(char const*, bool) from er9x.o
      Allocate [0x0000ae94 to 0x0000af03] to section .text.modelDefaultWrite(unsigned char) from pers.o
      Allocate [0x0000af04 to 0x0000af73] to section .text.menuDeleteMix(unsigned char) from menus.o
      Allocate [0x0000af74 to 0x0000afe3] to section .text.UART2_IRQHandler from BoardI6.o
      Allocate [0x0000afe4 to 0x0000b04f] to section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Allocate [0x0000b050 to 0x0000b0bb] to section .text.SPI0_IRQHandler from BoardI6.o
      Allocate [0x0000b0bc to 0x0000b123] to section .text.eeDuplicateModel(unsigned char) from pers.o
      Allocate [0x0000b124 to 0x0000b187] to section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) from crossfire.o
      Allocate [0x0000b188 to 0x0000b1eb] to section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Allocate [0x0000b1ec to 0x0000b24f] to section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Allocate [0x0000b250 to 0x0000b2b3] to section .text.PIND from BoardI6.o
      Allocate [0x0000b2b4 to 0x0000b313] to section .text.getADC_osmp from BoardI6.o
      Allocate [0x0000b314 to 0x0000b373] to section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Allocate [0x0000b374 to 0x0000b3d3] to section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Allocate [0x0000b3d4 to 0x0000b433] to section .text.TPM0_IRQHandler from BoardI6.o
      Allocate [0x0000b434 to 0x0000b493] to section .text.PINB from BoardI6.o
      Allocate [0x0000b494 to 0x0000b4ef] to section .text.almess(char const*, unsigned char) from er9x.o
      Allocate [0x0000b4f0 to 0x0000b54b] to section .text.doBackLightVoice(unsigned char) from er9x.o
      Allocate [0x0000b54c to 0x0000b5a7] to section .text.calcStickScroll(unsigned char) from er9x.o
      Allocate [0x0000b5a8 to 0x0000b603] to section .text.applyTemplate() from templates.o
      Allocate [0x0000b604 to 0x0000b65f] to section .text.DMA0_IRQHandler from BoardI6.o
      Allocate [0x0000b660 to 0x0000b6b7] to section .text.EFile::closeTrunc() from file.o
      Allocate [0x0000b6b8 to 0x0000b70f] to section .text.lcd_init() from lcd.o
      Allocate [0x0000b710 to 0x0000b767] to section .text.setMix(unsigned char, unsigned char) from templates.o
      Allocate [0x0000b768 to 0x0000b7bf] to section .text.parseDeviceInfoMessage(unsigned char*) from elrsV2.o
      Allocate [0x0000b7c0 to 0x0000b817] to section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)) from BoardI6.o
      Allocate [0x0000b818 to 0x0000b86b] to section .text.dispSignalQality(unsigned char) from menus.o
      Allocate [0x0000b86c to 0x0000b8bf] to section .text.eeWriteGeneral() from pers.o
      Allocate [0x0000b8c0 to 0x0000b913] to section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Allocate [0x0000b914 to 0x0000b967] to section .text.PINE from BoardI6.o
      Allocate [0x0000b968 to 0x0000b9b7] to section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000b9b8 to 0x0000ba07] to section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000ba08 to 0x0000ba57] to section .text.ISR_TIMER0_COMP_vect from er9x.o
      Allocate [0x0000ba58 to 0x0000baa3] to section .text.crsf_send_data from BoardI6.o
      Allocate [0x0000baa4 to 0x0000baef] to section .text.checkTHR() from er9x.o
      Allocate [0x0000baf0 to 0x0000bb3b] to section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Allocate [0x0000bb3c to 0x0000bb87] to section .text.check_backlight_voice() from er9x.o
      Allocate [0x0000bb88 to 0x0000bbd3] to section .text.checkThrottlePosition() from er9x.o
      Allocate [0x0000bbd4 to 0x0000bc1f] to section .text.setupPulsesCrossfire() from crossfire.o
      Allocate [0x0000bc20 to 0x0000bc6b] to section .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Allocate [0x0000bc6c to 0x0000bcb3] to section .text.popMenu(bool) from er9x.o
      Allocate [0x0000bcb4 to 0x0000bcfb] to section .text.resetElrsMenuVariables() from elrsV2.o
      Allocate [0x0000bcfc to 0x0000bd43] to section .text.SetStartPulsePol() from pulses.o
      Allocate [0x0000bd44 to 0x0000bd8b] to section .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Allocate [0x0000bd8c to 0x0000bdd3] to section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Allocate [0x0000bdd4 to 0x0000be1b] to section .text.PIT_IRQHandler from BoardI6.o
      Allocate [0x0000be1c to 0x0000be5f] to section .text.start_lpsci_DMA_receive() from BoardI6.o
      Allocate [0x0000be60 to 0x0000bea3] to section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Allocate [0x0000bea4 to 0x0000bee7] to section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x0000bee8 to 0x0000bf2b] to section .text.ISR_TIMER1_COMPA_vect from pulses.o
      Allocate [0x0000bf2c to 0x0000bf6f] to section .init from MKL16Z4_Vectors.o
      Allocate [0x0000bf70 to 0x0000bfaf] to section .text.EFile::swap(unsigned char, unsigned char) from file.o
      Allocate [0x0000bfb0 to 0x0000bfef] to section .text.audioQueue::getToneLength(unsigned char) from audio.o
      Allocate [0x0000bff0 to 0x0000c02f] to section .text.processCrossfireTelemetryValue(unsigned char, int) from crossfire.o
      Allocate [0x0000c030 to 0x0000c06b] to section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c06c to 0x0000c0a7] to section .text.anaIn(unsigned char) from er9x.o
      Allocate [0x0000c0a8 to 0x0000c0e3] to section .text.process_read_dma_data() from BoardI6.o
      Allocate [0x0000c0e4 to 0x0000c11f] to section .text.stop_dma_receive() from BoardI6.o
      Allocate [0x0000c120 to 0x0000c15b] to section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c15c to 0x0000c197] to section .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Allocate [0x0000c198 to 0x0000c1d3] to section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000c1d4 to 0x0000c20f] to section .text.EeFsFormat() from file.o
      Allocate [0x0000c210 to 0x0000c247] to section .text.audioQueue::driver() from er9x.o
      Allocate [0x0000c248 to 0x0000c27f] to section .text.REG(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000c280 to 0x0000c2b7] to section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Allocate [0x0000c2b8 to 0x0000c2ef] to section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c2f0 to 0x0000c327] to section .text.get_dr_state(unsigned char) from menus.o
      Allocate [0x0000c328 to 0x0000c35f] to section .text.resetTimern(unsigned char) from menus.o
      Allocate [0x0000c360 to 0x0000c397] to section .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Allocate [0x0000c398 to 0x0000c3cf] to section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000c3d0 to 0x0000c407] to section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x0000c408 to 0x0000c43b] to section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000c43c to 0x0000c46f] to section .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000c470 to 0x0000c4a3] to section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) from elrsV2.o
      Allocate [0x0000c4a4 to 0x0000c4d7] to section .text.crossfireTelemetryPing() from elrsV2.o
      Allocate [0x0000c4d8 to 0x0000c50b] to section .text.eeLoadModelForBackup(unsigned char) from pers.o
      Allocate [0x0000c50c to 0x0000c53f] to section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Allocate [0x0000c540 to 0x0000c573] to section .text.getFlightPhase() from er9x.o
      Allocate [0x0000c574 to 0x0000c5a7] to section .text.A7105_SetPower() from A7105_SPI.o
      Allocate [0x0000c5a8 to 0x0000c5db] to section .text.SPI_RADIO_SendBlock from BoardI6.o
      Allocate [0x0000c5dc to 0x0000c60d] to section .rodata..L.str.3 from elrsV2.o
      Allocate [0x0000c610 to 0x0000c63f] to section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Allocate [0x0000c640 to 0x0000c66f] to section .text.EeFsFree(unsigned char) from file.o
      Allocate [0x0000c670 to 0x0000c69f] to section .text.modelSave(unsigned char) from pers.o
      Allocate [0x0000c6a0 to 0x0000c6cf] to section .text.char2idx(char) from menus.o
      Allocate [0x0000c6d0 to 0x0000c6ff] to section .text.EeFsOpen() from file.o
      Allocate [0x0000c700 to 0x0000c72f] to section .text.eeDirty(unsigned char) from pers.o
      Allocate [0x0000c730 to 0x0000c75f] to section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c760 to 0x0000c78f] to section .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Allocate [0x0000c790 to 0x0000c7bb] to section .text.SX127xDriver::SX127xDriver() from SX127x.o
      Allocate [0x0000c7bc to 0x0000c7e7] to section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c7e8 to 0x0000c813] to section .text.sendSerialVoiceData(unsigned char*, unsigned int) from BoardI6.o
      Allocate [0x0000c814 to 0x0000c83f] to section .text.putVoiceQueueLong(unsigned short) from audio.o
      Allocate [0x0000c840 to 0x0000c86b] to section .text.menuMixersLimit(unsigned char) from menus.o
      Allocate [0x0000c86c to 0x0000c897] to section .text.PING from BoardI6.o
      Allocate [0x0000c898 to 0x0000c8c3] to section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000c8c4 to 0x0000c8ed] to section .rodata..L.str.2 from elrsV2.o
      Allocate [0x0000c8f0 to 0x0000c917] to section .text.mDelay from BoardI6.o
      Allocate [0x0000c918 to 0x0000c93f] to section .text.EFile::rm(unsigned char) from file.o
      Allocate [0x0000c940 to 0x0000c967] to section .text.EeFsAlloc() from file.o
      Allocate [0x0000c968 to 0x0000c98f] to section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000c990 to 0x0000c9b7] to section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c9b8 to 0x0000c9df] to section .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c9e0 to 0x0000ca07] to section .text.A7105_AntSwitch() from A7105_SPI.o
      Allocate [0x0000ca08 to 0x0000ca2f] to section .text.eeWaitComplete() from pers.o
      Allocate [0x0000ca30 to 0x0000ca57] to section .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Allocate [0x0000ca58 to 0x0000ca7f] to section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short) from audio.o
      Allocate [0x0000ca80 to 0x0000caa7] to section .text.startPulses() from pulses.o
      Allocate [0x0000caa8 to 0x0000cacf] to section .text.evalOffset(signed char) from menus.o
      Allocate [0x0000cad0 to 0x0000caf7] to section .init from Kinetis_KL_Startup.o
      Allocate [0x0000caf8 to 0x0000cb1e] to section .rodata..L.str.4 from elrsV2.o
      Allocate [0x0000cb20 to 0x0000cb43] to section .text.EFile::openRd(unsigned char) from file.o
      Allocate [0x0000cb44 to 0x0000cb67] to section .text.curveAddress(unsigned char) from menus.o
      Allocate [0x0000cb68 to 0x0000cb8b] to section .text.crsf_init() from crossfire.o
      Allocate [0x0000cb8c to 0x0000cbaf] to section .text.ee_waite() from drivers.o
      Allocate [0x0000cbb0 to 0x0000cbd3] to section .text.reachMixerCountLimit() from menus.o
      Allocate [0x0000cbd4 to 0x0000cbf7] to section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cbf8 to 0x0000cc1b] to section .text.crsf_action() from crossfire.o
      Allocate [0x0000cc1c to 0x0000cc3f] to section .text.evalChkSum() from pers.o
      Allocate [0x0000cc40 to 0x0000cc63] to section .text.LCD_DATA from BoardI6.o
      Allocate [0x0000cc64 to 0x0000cc87] to section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
      Allocate [0x0000cc88 to 0x0000cca7] to section .text.EFile::size() from file.o
      Allocate [0x0000cca8 to 0x0000ccc7] to section .text.setVolume(unsigned char) from audio.o
      Allocate [0x0000ccc8 to 0x0000cce7] to section .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000cce8 to 0x0000cd07] to section .text.trace() from menus.o
      Allocate [0x0000cd08 to 0x0000cd27] to section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Allocate [0x0000cd28 to 0x0000cd47] to section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Allocate [0x0000cd48 to 0x0000cd67] to section .text.processVoiceAlarms() from er9x.o
      Allocate [0x0000cd68 to 0x0000cd87] to section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Allocate [0x0000cd88 to 0x0000cda7] to section .text.lcdSetRefVolt(unsigned char) from lcd.o
      Allocate [0x0000cda8 to 0x0000cdc7] to section .text.backlightKey() from er9x.o
      Allocate [0x0000cdc8 to 0x0000cde7] to section .text.pauseEvents(unsigned char) from drivers.o
      Allocate [0x0000cde8 to 0x0000ce07] to section .text.menuPressed() from drivers.o
      Allocate [0x0000ce08 to 0x0000ce27] to section .text.EeFsGetFree() from file.o
      Allocate [0x0000ce28 to 0x0000ce47] to section .text.SetPRTTimPeriod from BoardI6.o
      Allocate [0x0000ce48 to 0x0000ce63] to section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Allocate [0x0000ce64 to 0x0000ce7f] to section .text.throttleReversed() from er9x.o
      Allocate [0x0000ce80 to 0x0000ce9b] to section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000ce9c to 0x0000ceb7] to section .text.modeFixValue(unsigned char) from er9x.o
      Allocate [0x0000ceb8 to 0x0000ced3] to section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000ced4 to 0x0000ceef] to section .text.on_voice_cb(unsigned char*, unsigned char) from audio.o
      Allocate [0x0000cef0 to 0x0000cf0b] to section .text.killEvents(unsigned char) from drivers.o
      Allocate [0x0000cf0c to 0x0000cf27] to section .text.TPM2_IRQHandler from BoardI6.o
      Allocate [0x0000cf28 to 0x0000cf43] to section .text.TPM1_IRQHandler from BoardI6.o
      Allocate [0x0000cf44 to 0x0000cf5f] to section .text.EnableGIO from BoardI6.o
      Allocate [0x0000cf60 to 0x0000cf77] to section .text.clearKeyEvents() from er9x.o
      Allocate [0x0000cf78 to 0x0000cf8f] to section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000cf90 to 0x0000cfa7] to section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cfa8 to 0x0000cfbf] to section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000cfc0 to 0x0000cfd7] to section .text.ISR_TIMER2_OVF_vect from er9x.o
      Allocate [0x0000cfd8 to 0x0000cfef] to section .text.GetChipID from BoardI6.o
      Allocate [0x0000cff0 to 0x0000d005] to section .rodata..L.str.1 from elrsV2.o
      Allocate [0x0000d008 to 0x0000d01d] to section .rodata..L.str from elrsV2.o
      Allocate [0x0000d020 to 0x0000d033] to section .text.EFile::exists(unsigned char) from file.o
      Allocate [0x0000d034 to 0x0000d047] to section .text.EeFsFlush() from file.o
      Allocate [0x0000d048 to 0x0000d05b] to section .text.EeFsFlushFreelist() from file.o
      Allocate [0x0000d05c to 0x0000d06f] to section .text.lcd_clear() from lcd.o
      Allocate [0x0000d070 to 0x0000d083] to section .text.idx2char(unsigned char) from menus.o
      Allocate [0x0000d084 to 0x0000d097] to section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Allocate [0x0000d098 to 0x0000d0ab] to section .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Allocate [0x0000d0ac to 0x0000d0bf] to section .text.checkIncDec_0(signed char, signed char) from er9x.o
      Allocate [0x0000d0c0 to 0x0000d0d3] to section .text.audioDefevent(unsigned char) from audio.o
      Allocate [0x0000d0d4 to 0x0000d0e7] to section .text.resetTimer1() from menus.o
      Allocate [0x0000d0e8 to 0x0000d0fb] to section .text.displayNext() from menus.o
      Allocate [0x0000d0fc to 0x0000d10f] to section .text.clearMixes() from templates.o
      Allocate [0x0000d110 to 0x0000d123] to section .text.audioEvent(unsigned char, unsigned short) from audio.o
      Allocate [0x0000d124 to 0x0000d137] to section .text.DisableGIO from BoardI6.o
      Allocate [0x0000d138 to 0x0000d14b] to section .init._start from SEGGER_THUMB_Startup.o
      Allocate [0x0000d14c to 0x0000d15b] to section .text.rw_0 from BoardI6.o
      Allocate [0x0000d15c to 0x0000d16b] to section .text.rs_1 from BoardI6.o
      Allocate [0x0000d16c to 0x0000d17b] to section .text.rs_0 from BoardI6.o
      Allocate [0x0000d17c to 0x0000d18b] to section .text.rd_1 from BoardI6.o
      Allocate [0x0000d18c to 0x0000d19b] to section .text.rd_0 from BoardI6.o
      Allocate [0x0000d19c to 0x0000d1ab] to section .text.crsf_is_sending from BoardI6.o
      Allocate [0x0000d1ac to 0x0000d1bb] to section .text.CS_STATE(unsigned char) from er9x.o
      Allocate [0x0000d1bc to 0x0000d1cb] to section .text.lcdSetContrast() from lcd.o
      Allocate [0x0000d1cc to 0x0000d1db] to section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000d1dc to 0x0000d1eb] to section .text.mixaddress(unsigned char) from er9x.o
      Allocate [0x0000d1ec to 0x0000d1fb] to section .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Allocate [0x0000d1fc to 0x0000d20b] to section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Allocate [0x0000d20c to 0x0000d21b] to section .text.TX_RX_PutVal from BoardI6.o
      Allocate [0x0000d21c to 0x0000d22b] to section .text.GetPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000d22c to 0x0000d23b] to section .text.GetPPMOutState from BoardI6.o
      Allocate [0x0000d23c to 0x0000d24b] to section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000d24c to 0x0000d25b] to section .text.Buzzer_SetVal from BoardI6.o
      Allocate [0x0000d25c to 0x0000d26b] to section .text.Buzzer_ClrVal from BoardI6.o
      Allocate [0x0000d26c to 0x0000d27b] to section .rodata..Lswitch.table.SetPRTTimPeriod from BoardI6.o
      Allocate [0x0000d27c to 0x0000d287] to section .text.rst_1 from BoardI6.o
      Allocate [0x0000d288 to 0x0000d293] to section .text.rst_0 from BoardI6.o
      Allocate [0x0000d294 to 0x0000d29f] to section .text.cs_0 from BoardI6.o
      Allocate [0x0000d2a0 to 0x0000d2ab] to section .text.backlight_on from BoardI6.o
      Allocate [0x0000d2ac to 0x0000d2b7] to section .text.backlight_off from BoardI6.o
      Allocate [0x0000d2b8 to 0x0000d2c3] to section .text.a7105_csn_on from BoardI6.o
      Allocate [0x0000d2c4 to 0x0000d2cf] to section .text.a7105_csn_off from BoardI6.o
      Allocate [0x0000d2d0 to 0x0000d2db] to section .text.SX127xHal::SX127xHal() from SX127xHal.o
      Allocate [0x0000d2dc to 0x0000d2e7] to section .text.get_tmr10ms() from er9x.o
      Allocate [0x0000d2e8 to 0x0000d2f3] to section .text.SetPPMTimCompare from BoardI6.o
      Allocate [0x0000d2f4 to 0x0000d2ff] to section .text.RF1_SetVal from BoardI6.o
      Allocate [0x0000d300 to 0x0000d30b] to section .text.RF1_ClrVal from BoardI6.o
      Allocate [0x0000d30c to 0x0000d317] to section .text.RF0_SetVal from BoardI6.o
      Allocate [0x0000d318 to 0x0000d323] to section .text.RF0_ClrVal from BoardI6.o
      Allocate [0x0000d324 to 0x0000d32f] to section .text.GetPPMTimCompare from BoardI6.o
      Allocate [0x0000d330 to 0x0000d33b] to section .text.EnablePRTTim from BoardI6.o
      Allocate [0x0000d33c to 0x0000d347] to section .text.EnablePPMTim from BoardI6.o
      Allocate [0x0000d348 to 0x0000d353] to section .text.EnablePPMOut from BoardI6.o
      Allocate [0x0000d354 to 0x0000d35f] to section .text.DisablePRTTim from BoardI6.o
      Allocate [0x0000d360 to 0x0000d36b] to section .text.DisablePPMOut from BoardI6.o
      Allocate [0x0000d36c to 0x0000d461] to section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Allocate [0x0000d462 to 0x0000d541] to section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Allocate [0x0000d542 to 0x0000d5c5] to section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d5c6 to 0x0000d639] to section .text.intpol(short, unsigned char) from menus.o
      Allocate [0x0000d63a to 0x0000d6ab] to section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Allocate [0x0000d6ac to 0x0000d717] to section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d718 to 0x0000d771] to section .text.telltale(unsigned char, signed char, signed char) from menus.o
      Allocate [0x0000d772 to 0x0000d7bb] to section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d7bc to 0x0000d801] to section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d802 to 0x0000d843] to section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000d844 to 0x0000d885] to section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Allocate [0x0000d886 to 0x0000d8c5] to section .text.libc.__aeabi_idiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d8c6 to 0x0000d903] to section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d904 to 0x0000d93f] to section .text.expo(short, short) from menus.o
      Allocate [0x0000d940 to 0x0000d977] to section .text.libc.__aeabi_uidiv from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d978 to 0x0000d9af] to section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d9b0 to 0x0000d9e1] to section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000d9e2 to 0x0000da0f] to section .text.libc.memcmp from strops.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000da10 to 0x0000da3d] to section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
      Allocate [0x0000da3e to 0x0000da6b] to section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000da6c to 0x0000da97] to section .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Allocate [0x0000da98 to 0x0000dac3] to section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Allocate [0x0000dac4 to 0x0000daed] to section .text.libc.div from intops.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000daee to 0x0000db17] to section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000db18 to 0x0000db3f] to section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Allocate [0x0000db40 to 0x0000db67] to section .text.A7105_Reset() from A7105_SPI.o
      Allocate [0x0000db68 to 0x0000db8d] to section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000db8e to 0x0000dbb1] to section .text.DoSum(unsigned char*, unsigned char) from audio.o
      Allocate [0x0000dbb2 to 0x0000dbd5] to section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000dbd6 to 0x0000dbf7] to section .text.libc.__aeabi_memmove from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dbf8 to 0x0000dc19] to section .text.expou(unsigned short, unsigned short) from menus.o
      Allocate [0x0000dc1a to 0x0000dc3b] to section .text.getCurrentSwitchStates() from er9x.o
      Allocate [0x0000dc3c to 0x0000dc5b] to section .text.lcdSendCtl(unsigned char) from lcd.o
      Allocate [0x0000dc5c to 0x0000dc7b] to section .text.stickMoveValue() from er9x.o
      Allocate [0x0000dc7c to 0x0000dc99] to section .text.libc.__aeabi_llsr from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dc9a to 0x0000dcb7] to section .text.libc.__aeabi_llsl from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dcb8 to 0x0000dcd5] to section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000dcd6 to 0x0000dcf1] to section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000dcf2 to 0x0000dd0d] to section .text.validateName(char*, unsigned char) from pers.o
      Allocate [0x0000dd0e to 0x0000dd29] to section .text.voiceMinutes(short) from menus.o
      Allocate [0x0000dd2a to 0x0000dd45] to section .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Allocate [0x0000dd46 to 0x0000dd5f] to section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000dd60 to 0x0000dd77] to section .text.StubbornSender::ResetState() from stubborn_sender.o
      Allocate [0x0000dd78 to 0x0000dd8f] to section .text.EeFsRead(unsigned char, unsigned char) from file.o
      Allocate [0x0000dd90 to 0x0000dda5] to section .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Allocate [0x0000dda6 to 0x0000ddbb] to section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000ddbc to 0x0000ddd1] to section .text.calc100toRESX(signed char) from er9x.o
      Allocate [0x0000ddd2 to 0x0000dde5] to section .text.libc.__aeabi_memclr from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000dde6 to 0x0000ddf9] to section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
      Allocate [0x0000ddfa to 0x0000de0d] to section .text.setNameP(char*, char const*) from pers.o
      Allocate [0x0000de0e to 0x0000de21] to section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Allocate [0x0000de22 to 0x0000de35] to section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000de36 to 0x0000de47] to section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000de48 to 0x0000de59] to section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000de5a to 0x0000de6b] to section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000de6c to 0x0000de7d] to section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000de7e to 0x0000de8d] to section .text.libc.__aeabi_uidivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000de8e to 0x0000de9d] to section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000de9e to 0x0000dead] to section .text.TITLEP(char const*) from menus.o
      Allocate [0x0000deae to 0x0000debd] to section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Allocate [0x0000debe to 0x0000decd] to section .text.calc1000toRESX(short) from er9x.o
      Allocate [0x0000dece to 0x0000dedd] to section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Allocate [0x0000dede to 0x0000deed] to section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000deee to 0x0000defd] to section .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000defe to 0x0000df0d] to section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000df0e to 0x0000df1d] to section .text.A7105_Sleep() from A7105_SPI.o
      Allocate [0x0000df1e to 0x0000df2b] to section .text.main from main.o
      Allocate [0x0000df2c to 0x0000df39] to section .text.libc.strlen from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df3a to 0x0000df47] to section .text.libc.memcpy from strasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df48 to 0x0000df55] to section .text.libc.__aeabi_idivmod from intasmops_arm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000df56 to 0x0000df63] to section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Allocate [0x0000df64 to 0x0000df71] to section .text.message(char const*) from er9x.o
      Allocate [0x0000df72 to 0x0000df7f] to section .text.keyDown() from er9x.o
      Allocate [0x0000df80 to 0x0000df8d] to section .text.putVoiceQueueUpper(unsigned char) from audio.o
      Allocate [0x0000df8e to 0x0000df9b] to section .text.REG100_100(signed char) from er9x.o
      Allocate [0x0000df9c to 0x0000dfa7] to section .text.switchPosition(unsigned char) from drivers.o
      Allocate [0x0000dfa8 to 0x0000dfb3] to section .text.eeModelExists(unsigned char) from pers.o
      Allocate [0x0000dfb4 to 0x0000dfbf] to section .text.getSwitch00(signed char) from er9x.o
      Allocate [0x0000dfc0 to 0x0000dfc9] to section .text.EeFsGetLink(unsigned char) from file.o
      Allocate [0x0000dfca to 0x0000dfd3] to section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000dfd4 to 0x0000dfdd] to section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Allocate [0x0000dfde to 0x0000dfe7] to section .text.alert(char const*) from er9x.o
      Allocate [0x0000dfe8 to 0x0000dff1] to section .text.resetTimer2() from menus.o
      Allocate [0x0000dff2 to 0x0000dffb] to section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Allocate [0x0000dffc to 0x0000e005] to section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Allocate [0x0000e006 to 0x0000e00f] to section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Allocate [0x0000e010 to 0x0000e017] to section .text.audioQueue::busy() from audio.o
      Allocate [0x0000e018 to 0x0000e01f] to section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Allocate [0x0000e020 to 0x0000e027] to section .text.putVoiceQueue(unsigned char) from audio.o
      Allocate [0x0000e028 to 0x0000e02f] to section .text.crsf_shutdown() from crossfire.o
      Allocate [0x0000e030 to 0x0000e593] to section .rodata.font_dblsize from lcd.o
      Allocate [0x0000e594 to 0x0000e782] to section .rodata.font from lcd.o
      Allocate [0x0000e783 to 0x0000e882] to section .rodata.crc8tab from crc_crsf.o
      Allocate [0x0000e883 to 0x0000e970] to section .rodata.Str_telemItems from menus.o
      Allocate [0x0000e971 to 0x0000ea16] to section .rodata.Str_Chans_Gv from menus.o
      Allocate [0x0000ea17 to 0x0000ea93] to section .rodata..L.str.11 from menus.o
      Allocate [0x0000ea94 to 0x0000eb05] to section .rodata.Str_Cswitch from menus.o
      Allocate [0x0000eb06 to 0x0000eb67] to section .rodata.Str_Sounds from menus.o
      Allocate [0x0000eb68 to 0x0000ebbf] to section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
      Allocate [0x0000ebc0 to 0x0000ec11] to section .rodata..L.str.51 from menus.o
      Allocate [0x0000ec12 to 0x0000ec5d] to section .rodata..L.str.45 from menus.o
      Allocate [0x0000ec5e to 0x0000eca8] to section .rodata.sticks from menus.o
      Allocate [0x0000eca9 to 0x0000ecf3] to section .rodata..L.str.110 from menus.o
      Allocate [0x0000ecf4 to 0x0000ed3d] to section .rodata.Curve_Str from menus.o
      Allocate [0x0000ed3e to 0x0000ed84] to section .rodata..L.str.105 from menus.o
      Allocate [0x0000ed85 to 0x0000edc7] to section .rodata.s_charTab from menus.o
      Allocate [0x0000edc8 to 0x0000ee08] to section .rodata.Str_Switches from er9x.o
      Allocate [0x0000ee09 to 0x0000ee49] to section .rodata..L.str.4 from menus.o
      Allocate [0x0000ee4a to 0x0000ee88] to section .rodata..L.str.6 from menus.o
      Allocate [0x0000ee89 to 0x0000eec2] to section .rodata.Str_Main_Popup from menus.o
      Allocate [0x0000eec3 to 0x0000eefc] to section .rodata.TelemIndex from menus.o
      Allocate [0x0000eefd to 0x0000ef32] to section .rodata..L.str.48 from menus.o
      Allocate [0x0000ef33 to 0x0000ef67] to section .rodata..L.str.103 from menus.o
      Allocate [0x0000ef68 to 0x0000ef9b] to section .rodata..L.str.107 from menus.o
      Allocate [0x0000ef9c to 0x0000efcd] to section .rodata.AFHDS_A7105_regs from BoardI6.o
      Allocate [0x0000efce to 0x0000efff] to section .rodata.AFHDS2A_A7105_regs from BoardI6.o
      Allocate [0x0000f000 to 0x0000f031] to section .rodata..L.str.9 from elrsV2.o
      Allocate [0x0000f032 to 0x0000f062] to section .rodata.Stamps from stamp.o
      Allocate [0x0000f063 to 0x0000f090] to section .rodata..L.str.50 from menus.o
      Allocate [0x0000f091 to 0x0000f0be] to section .rodata..L.str.47 from menus.o
      Allocate [0x0000f0bf to 0x0000f0ec] to section .rodata..L.str.16 from menus.o
      Allocate [0x0000f0ed to 0x0000f117] to section .rodata..L.str.92 from menus.o
      Allocate [0x0000f118 to 0x0000f142] to section .rodata..L.str.13 from er9x.o
      Allocate [0x0000f143 to 0x0000f16d] to section .rodata..L.str.115 from menus.o
      Allocate [0x0000f16e to 0x0000f197] to section .rodata.UnitsString from menus.o
      Allocate [0x0000f198 to 0x0000f1c0] to section .rodata.Str_Gv_Source from menus.o
      Allocate [0x0000f1c1 to 0x0000f1e9] to section .rodata..L.str.70 from menus.o
      Allocate [0x0000f1ea to 0x0000f211] to section .rodata..L.str.46 from menus.o
      Allocate [0x0000f212 to 0x0000f238] to section .rodata.MixPopList from menus.o
      Allocate [0x0000f239 to 0x0000f25e] to section .rodata.ModelPopList from menus.o
      Allocate [0x0000f25f to 0x0000f284] to section .rodata..L.str.98 from menus.o
      Allocate [0x0000f285 to 0x0000f2a9] to section .rodata..L.str.71 from menus.o
      Allocate [0x0000f2aa to 0x0000f2ce] to section .rodata..L.str.6 from er9x.o
      Allocate [0x0000f2cf to 0x0000f2f3] to section .rodata..L.str.101 from menus.o
      Allocate [0x0000f2f4 to 0x0000f315] to section .rodata..L.str.108 from menus.o
      Allocate [0x0000f316 to 0x0000f336] to section .rodata..L.str.5 from er9x.o
      Allocate [0x0000f337 to 0x0000f356] to section .rodata.AFHDS_tx_channels from AFHDS.o
      Allocate [0x0000f357 to 0x0000f376] to section .rodata..L.str.74 from menus.o
      Allocate [0x0000f377 to 0x0000f396] to section .rodata..L.str.57 from menus.o
      Allocate [0x0000f397 to 0x0000f3b6] to section .rodata..L.str.113 from menus.o
      Allocate [0x0000f3b7 to 0x0000f3d4] to section .rodata.SW_3_IDX from menus.o
      Allocate [0x0000f3d5 to 0x0000f3f2] to section .rodata.idx_to_afhds2a from crossfire.o
      Allocate [0x0000f3f3 to 0x0000f410] to section .rodata..L.str.93 from menus.o
      Allocate [0x0000f411 to 0x0000f42e] to section .rodata..L.str.27 from menus.o
      Allocate [0x0000f42f to 0x0000f44a] to section .rodata..L.str.15 from menus.o
      Allocate [0x0000f44b to 0x0000f466] to section .rodata..L.str.104 from menus.o
      Allocate [0x0000f467 to 0x0000f481] to section .rodata..L.str.85 from menus.o
      Allocate [0x0000f482 to 0x0000f49b] to section .rodata..L.str.53 from menus.o
      Allocate [0x0000f49c to 0x0000f4b4] to section .rodata..L.str.17 from menus.o
      Allocate [0x0000f4b5 to 0x0000f4cc] to section .rodata.bchout_ar from er9x.o
      Allocate [0x0000f4cd to 0x0000f4e4] to section .rodata..L.str.116 from menus.o
      Allocate [0x0000f4e5 to 0x0000f4fc] to section .rodata..L.str.111 from menus.o
      Allocate [0x0000f4fd to 0x0000f513] to section .rodata..L.str.35 from menus.o
      Allocate [0x0000f514 to 0x0000f529] to section .rodata.Str_On_Off_Both from menus.o
      Allocate [0x0000f52a to 0x0000f53f] to section .rodata..L.str.77 from menus.o
      Allocate [0x0000f540 to 0x0000f555] to section .rodata..L.str.75 from menus.o
      Allocate [0x0000f556 to 0x0000f56b] to section .rodata..L.str.2 from er9x.o
      Allocate [0x0000f56c to 0x0000f580] to section .rodata..L.str.2 from pers.o
      Allocate [0x0000f581 to 0x0000f594] to section .rodata..L.str.43 from menus.o
      Allocate [0x0000f595 to 0x0000f5a8] to section .rodata..L.str.100 from menus.o
      Allocate [0x0000f5a9 to 0x0000f5bb] to section .rodata..L.str.34 from menus.o
      Allocate [0x0000f5bc to 0x0000f5ce] to section .rodata..L.str.3 from pers.o
      Allocate [0x0000f5cf to 0x0000f5e0] to section .rodata.modi12x3 from er9x.o
      Allocate [0x0000f5e1 to 0x0000f5f2] to section .rodata..L.str.68 from menus.o
      Allocate [0x0000f5f3 to 0x0000f604] to section .rodata..L.str.5 from pers.o
      Allocate [0x0000f605 to 0x0000f616] to section .rodata..L.str.25 from menus.o
      Allocate [0x0000f617 to 0x0000f628] to section .rodata..L.str.23 from menus.o
      Allocate [0x0000f629 to 0x0000f639] to section .rodata.menuWhenDone from menus.o
      Allocate [0x0000f63a to 0x0000f64a] to section .rodata..L.str.7 from elrsV2.o
      Allocate [0x0000f64b to 0x0000f65b] to section .rodata..L.str.66 from menus.o
      Allocate [0x0000f65c to 0x0000f66c] to section .rodata..L.str.49 from menus.o
      Allocate [0x0000f66d to 0x0000f67d] to section .rodata..L.str.40 from menus.o
      Allocate [0x0000f67e to 0x0000f68e] to section .rodata..L.str.18 from menus.o
      Allocate [0x0000f68f to 0x0000f69f] to section .rodata..L.str.119 from menus.o
      Allocate [0x0000f6a0 to 0x0000f6b0] to section .rodata..L.str.117 from menus.o
      Allocate [0x0000f6b1 to 0x0000f6c1] to section .rodata..L.str.102 from menus.o
      Allocate [0x0000f6c2 to 0x0000f6d1] to section .rodata.stickScramble from er9x.o
      Allocate [0x0000f6d2 to 0x0000f6e1] to section .rodata.Str_EEPROM_Overflow from pers.o
      Allocate [0x0000f6e2 to 0x0000f6f1] to section .rodata..L.str.73 from menus.o
      Allocate [0x0000f6f2 to 0x0000f701] to section .rodata..L.str.61 from menus.o
      Allocate [0x0000f702 to 0x0000f711] to section .rodata..L.str.4 from pers.o
      Allocate [0x0000f712 to 0x0000f721] to section .rodata..L.str.21 from menus.o
      Allocate [0x0000f722 to 0x0000f731] to section .rodata..L.str.121 from menus.o
      Allocate [0x0000f732 to 0x0000f741] to section .rodata..L.str.120 from menus.o
      Allocate [0x0000f742 to 0x0000f751] to section .rodata..L.str.12 from er9x.o
      Allocate [0x0000f752 to 0x0000f761] to section .rodata..L.str.106 from menus.o
      Allocate [0x0000f762 to 0x0000f770] to section .rodata.Str_Beep_Countdown from menus.o
      Allocate [0x0000f771 to 0x0000f77f] to section .rodata.csTypeTable from er9x.o
      Allocate [0x0000f780 to 0x0000f78e] to section .rodata..L.str.95 from menus.o
      Allocate [0x0000f78f to 0x0000f79d] to section .rodata..L.str.89 from menus.o
      Allocate [0x0000f79e to 0x0000f7ac] to section .rodata..L.str.6 from pers.o
      Allocate [0x0000f7ad to 0x0000f7bb] to section .rodata..L.str.5 from menus.o
      Allocate [0x0000f7bc to 0x0000f7ca] to section .rodata..L.str.12 from menus.o
      Allocate [0x0000f7cb to 0x0000f7d9] to section .rodata..L.str.114 from menus.o
      Allocate [0x0000f7da to 0x0000f7e8] to section .rodata..L.str.11 from er9x.o
      Allocate [0x0000f7e9 to 0x0000f7f6] to section .rodata..L.str.99 from menus.o
      Allocate [0x0000f7f7 to 0x0000f804] to section .rodata..L.str.86 from menus.o
      Allocate [0x0000f805 to 0x0000f812] to section .rodata..L.str.7 from menus.o
      Allocate [0x0000f813 to 0x0000f820] to section .rodata..L.str.67 from menus.o
      Allocate [0x0000f821 to 0x0000f82e] to section .rodata..L.str.52 from menus.o
      Allocate [0x0000f82f to 0x0000f83c] to section .rodata..L.str.3 from er9x.o
      Allocate [0x0000f83d to 0x0000f849] to section .rodata..L.str.7 from er9x.o
      Allocate [0x0000f84a to 0x0000f856] to section .rodata..L.str.62 from menus.o
      Allocate [0x0000f857 to 0x0000f863] to section .rodata..L.str.22 from menus.o
      Allocate [0x0000f864 to 0x0000f870] to section .rodata..L.str from er9x.o
      Allocate [0x0000f871 to 0x0000f87c] to section .rodata.Lcdinit from lcd.o
      Allocate [0x0000f87d to 0x0000f888] to section .rodata.Str_minute_Beep from menus.o
      Allocate [0x0000f889 to 0x0000f894] to section .rodata.Str_Calibration from menus.o
      Allocate [0x0000f895 to 0x0000f8a0] to section .rodata.Str_AudioHaptic from menus.o
      Allocate [0x0000f8a1 to 0x0000f8ac] to section .rodata..L.str.76 from menus.o
      Allocate [0x0000f8ad to 0x0000f8b8] to section .rodata..L.str.69 from menus.o
      Allocate [0x0000f8b9 to 0x0000f8c4] to section .rodata..L.str.55 from menus.o
      Allocate [0x0000f8c5 to 0x0000f8d0] to section .rodata..L.str.19 from menus.o
      Allocate [0x0000f8d1 to 0x0000f8dc] to section .rodata..L.str.112 from menus.o
      Allocate [0x0000f8dd to 0x0000f8e7] to section .rodata.Str_heli_setup from menus.o
      Allocate [0x0000f8e8 to 0x0000f8f2] to section .rodata.Str_Cswitches from menus.o
      Allocate [0x0000f8f3 to 0x0000f8fd] to section .rodata.Str_Globals from menus.o
      Allocate [0x0000f8fe to 0x0000f908] to section .rodata.Str_Safety from menus.o
      Allocate [0x0000f909 to 0x0000f913] to section .rodata..L.str.90 from menus.o
      Allocate [0x0000f914 to 0x0000f91e] to section .rodata..L.str.9 from er9x.o
      Allocate [0x0000f91f to 0x0000f929] to section .rodata..L.str.78 from menus.o
      Allocate [0x0000f92a to 0x0000f934] to section .rodata..L.str.63 from menus.o
      Allocate [0x0000f935 to 0x0000f93f] to section .rodata..L.str.1 from pers.o
      Allocate [0x0000f940 to 0x0000f94a] to section .rodata..L.str from pers.o
      Allocate [0x0000f94b to 0x0000f954] to section .rodata.Str_Telemetry from menus.o
      Allocate [0x0000f955 to 0x0000f95e] to section .rodata.Str_DiagSwtch from menus.o
      Allocate [0x0000f95f to 0x0000f968] to section .rodata.Str_TRE012AG from menus.o
      Allocate [0x0000f969 to 0x0000f972] to section .rodata..L.str.96 from menus.o
      Allocate [0x0000f973 to 0x0000f97c] to section .rodata..L.str.80 from menus.o
      Allocate [0x0000f97d to 0x0000f986] to section .rodata..L.str.54 from menus.o
      Allocate [0x0000f987 to 0x0000f990] to section .rodata..L.str.29 from menus.o
      Allocate [0x0000f991 to 0x0000f99a] to section .rodata..L.str.10 from menus.o
      Allocate [0x0000f99b to 0x0000f9a4] to section .rodata..L.str from menus.o
      Allocate [0x0000f9a5 to 0x0000f9ad] to section .rodata.Str_Protocol from menus.o
      Allocate [0x0000f9ae to 0x0000f9b6] to section .rodata.Str_Hardware from menus.o
      Allocate [0x0000f9b7 to 0x0000f9bf] to section .rodata.Str_Controls from menus.o
      Allocate [0x0000f9c0 to 0x0000f9c8] to section .rodata..L.str.97 from menus.o
      Allocate [0x0000f9c9 to 0x0000f9d1] to section .rodata..L.str.88 from menus.o
      Allocate [0x0000f9d2 to 0x0000f9da] to section .rodata..L.str.87 from menus.o
      Allocate [0x0000f9db to 0x0000f9e3] to section .rodata..L.str.83 from menus.o
      Allocate [0x0000f9e4 to 0x0000f9ec] to section .rodata..L.str.8 from er9x.o
      Allocate [0x0000f9ed to 0x0000f9f5] to section .rodata..L.str.8 from menus.o
      Allocate [0x0000f9f6 to 0x0000f9fe] to section .rodata..L.str.44 from menus.o
      Allocate [0x0000f9ff to 0x0000fa07] to section .rodata..L.str.33 from menus.o
      Allocate [0x0000fa08 to 0x0000fa10] to section .rodata..L.str.30 from menus.o
      Allocate [0x0000fa11 to 0x0000fa19] to section .rodata..L.str.24 from menus.o
      Allocate [0x0000fa1a to 0x0000fa21] to section .rodata.per10ms()::crossTrim from drivers.o
      Allocate [0x0000fa22 to 0x0000fa29] to section .rodata.UnitsText from menus.o
      Allocate [0x0000fa2a to 0x0000fa31] to section .rodata._bitmask from lcd.o
      Allocate [0x0000fa32 to 0x0000fa39] to section .rodata.Str_Expo from menus.o
      Allocate [0x0000fa3a to 0x0000fa41] to section .rodata.rate from er9x.o
      Allocate [0x0000fa42 to 0x0000fa49] to section .rodata.Str_Version from menus.o
      Allocate [0x0000fa4a to 0x0000fa51] to section .rodata.Str_Trainer from menus.o
      Allocate [0x0000fa52 to 0x0000fa59] to section .rodata.Str_General from menus.o
      Allocate [0x0000fa5a to 0x0000fa61] to section .rodata.Str_Display from menus.o
      Allocate [0x0000fa62 to 0x0000fa69] to section .rodata.Str_DiagAna from menus.o
      Allocate [0x0000fa6a to 0x0000fa71] to section .rodata.UnitsVoice from menus.o
      Allocate [0x0000fa72 to 0x0000fa79] to section .rodata..L.str.84 from menus.o
      Allocate [0x0000fa7a to 0x0000fa81] to section .rodata..L.str.8 from elrsV2.o
      Allocate [0x0000fa82 to 0x0000fa89] to section .rodata..L.str.65 from menus.o
      Allocate [0x0000fa8a to 0x0000fa91] to section .rodata..L.str.58 from menus.o
      Allocate [0x0000fa92 to 0x0000fa99] to section .rodata..L.str.4 from er9x.o
      Allocate [0x0000fa9a to 0x0000faa1] to section .rodata..L.str.26 from menus.o
      Allocate [0x0000faa2 to 0x0000faa9] to section .rodata..L.str.109 from menus.o
      Allocate [0x0000faaa to 0x0000fab0] to section .rodata.Str_Alert from er9x.o
      Allocate [0x0000fab1 to 0x0000fab7] to section .rodata.ChannelToPin from BoardI6.o
      Allocate [0x0000fab8 to 0x0000fabe] to section .rodata.Str_limits from menus.o
      Allocate [0x0000fabf to 0x0000fac5] to section .rodata.Str_Curves from menus.o
      Allocate [0x0000fac6 to 0x0000facc] to section .rodata.Str_Alarms from menus.o
      Allocate [0x0000facd to 0x0000fad3] to section .rodata..L.str.79 from menus.o
      Allocate [0x0000fad4 to 0x0000fada] to section .rodata..L.str.60 from menus.o
      Allocate [0x0000fadb to 0x0000fae1] to section .rodata..L.str.10 from er9x.o
      Allocate [0x0000fae2 to 0x0000fae8] to section .rodata..L.str.1 from menus.o
      Allocate [0x0000fae9 to 0x0000faee] to section .rodata.Str_Timer from menus.o
      Allocate [0x0000faef to 0x0000faf4] to section .rodata.Str_Modes from menus.o
      Allocate [0x0000faf5 to 0x0000fafa] to section .rodata.Str_Mixer from menus.o
      Allocate [0x0000fafb to 0x0000fb00] to section .rodata.Str_Curve from menus.o
      Allocate [0x0000fb01 to 0x0000fb06] to section .rodata.Str_1_RETA from menus.o
      Allocate [0x0000fb07 to 0x0000fb0c] to section .rodata..L.str.91 from menus.o
      Allocate [0x0000fb0d to 0x0000fb12] to section .rodata..L.str.81 from menus.o
      Allocate [0x0000fb13 to 0x0000fb18] to section .rodata..L.str.6 from elrsV2.o
      Allocate [0x0000fb19 to 0x0000fb1e] to section .rodata..L.str.31 from menus.o
      Allocate [0x0000fb1f to 0x0000fb24] to section .rodata..L.str.14 from menus.o
      Allocate [0x0000fb25 to 0x0000fb2a] to section .rodata..L.str.13 from menus.o
      Allocate [0x0000fb2b to 0x0000fb2f] to section .rodata.Str_Name from menus.o
      Allocate [0x0000fb30 to 0x0000fb34] to section .rodata.Str_Hyphens from er9x.o
      Allocate [0x0000fb35 to 0x0000fb39] to section .rodata..L.str.72 from menus.o
      Allocate [0x0000fb3a to 0x0000fb3e] to section .rodata..L.str.56 from menus.o
      Allocate [0x0000fb3f to 0x0000fb43] to section .rodata..L.str.32 from menus.o
      Allocate [0x0000fb44 to 0x0000fb48] to section .rodata..L.str.3 from menus.o
      Allocate [0x0000fb49 to 0x0000fb4d] to section .rodata..L.str.20 from menus.o
      Allocate [0x000003fc to 0x000003ff] to section .rodata.menuProc0(unsigned char)::xt from menus.o
      Allocate [0x0000fb4e to 0x0000fb51] to section .rodata.Str_ON from er9x.o
      Allocate [0x0000fb52 to 0x0000fb55] to section .rodata.Str_OFF from er9x.o
      Allocate [0x0000fb56 to 0x0000fb59] to section .rodata..L.str.94 from menus.o
      Allocate [0x0000fb5a to 0x0000fb5d] to section .rodata..L.str.64 from menus.o
      Allocate [0x0000fb5e to 0x0000fb61] to section .rodata..L.str.59 from menus.o
      Allocate [0x0000fb62 to 0x0000fb65] to section .rodata..L.str.39 from menus.o
      Allocate [0x0000fb66 to 0x0000fb69] to section .rodata..L.str.38 from menus.o
      Allocate [0x0000fb6a to 0x0000fb6d] to section .rodata..L.str.28 from menus.o
      Allocate [0x0000fb6e to 0x0000fb71] to section .rodata..L.str.118 from menus.o
      Allocate [0x0000fb72 to 0x0000fb75] to section .rodata..L.str.1 from er9x.o
      Allocate [0x0000fb76 to 0x0000fb78] to section .rodata.Str_SC from menus.o
      Allocate [0x0000fb79 to 0x0000fb7b] to section .rodata.Str_GV from menus.o
      Allocate [0x0000fb7c to 0x0000fb7e] to section .rodata..L.str.9 from menus.o
      Allocate [0x0000fb7f to 0x0000fb81] to section .rodata..L.str.82 from menus.o
      Allocate [0x0000fb82 to 0x0000fb84] to section .rodata..L.str.5 from elrsV2.o
      Allocate [0x0000fb85 to 0x0000fb87] to section .rodata..L.str.42 from menus.o
      Allocate [0x0000fb88 to 0x0000fb8a] to section .rodata..L.str.41 from menus.o
      Allocate [0x0000fb8b to 0x0000fb8d] to section .rodata..L.str.2 from menus.o
      Allocate [0x0000c60e size 0] to block exidx from [ Linker created ]
      Allocate [0x0000c60e size 0] to block dtors from [ Linker created ]
      Inputs to block dtors
          Allocate [0x0000c60e size 0] to inline block <#2> at line 62, col 85 from [ Linker created ]
      Allocate [0x0000fb90 to 0x0000fb9b] to block ctors from [ Linker created ]
      Inputs to block ctors
          Inputs to inline block <#1> at line 61, col 85
              Allocate [0x0000fb90 to 0x0000fb93] to section .init_array from er9x.o
              Allocate [0x0000fb94 to 0x0000fb97] to section .init_array from SX127x.o
              Allocate [0x0000fb98 to 0x0000fb9b] to section .init_array from ELRS.o
          Allocate [0x0000fb90 to 0x0000fb9b] to inline block <#1> at line 61, col 85 from [ Linker created ]
  Executing place in [0x0000c60e to 0x0000c60f] + [0x0000c8ee to 0x0000c8ef] + [0x0000cb1f to 0x0000cb1f] + [0x0000d006 to 0x0000d007] + [0x0000d01e to 0x0000d01f] + [0x0000fb8e to 0x0000fb8f] + [0x0000fb9c to 0x0000ffff] (1 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x0000c60e size 0] to block tdata_load from [ Linker created ]
      Inputs to block tdata_load
          Allocate [0x0000c60e size 0] to copy of block tdata from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 size 0] to block tls from [ Linker created ]
      Inputs to block tls
          Allocate [0x1ffff800 size 0] to block tdata from [ Linker created ]
          Allocate [0x1ffff800 size 0] to block tbss from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (204 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 to 0x1ffff807] to section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
      Allocate [0x1ffff808 to 0x1ffffc07] to section .bss.DisplayBuf from lcd.o
      Allocate [0x1ffffc08 to 0x1ffffd07] to section .bss.Output from menus.o
      Allocate [0x1ffffd08 to 0x1ffffdb3] to section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
      Allocate [0x1ffffdb4 to 0x1ffffe03] to section .bss.Fade from menus.o
      Allocate [0x1ffffe04 to 0x1ffffe44] to section .bss.g_crossfire from crossfire.o
      Allocate [0x1ffffe48 to 0x1ffffe87] to section .bss.eeFs from file.o
      Allocate [0x1ffffe88 to 0x1ffffeb7] to section .bss.Radio from ELRS.o
      Allocate [0x1ffffeb8 to 0x1ffffedf] to section .bss.packet from A7105_SPI.o
      Allocate [0x1ffffee0 to 0x1ffffef3] to section .bss.g_menuStack from er9x.o
      Allocate [0x1ffffef4 to 0x1fffff03] to section .bss.outputTelemetryBuffer from crossfire.o
      Allocate [0x1fffff04 to 0x1fffff13] to section .bss.MspSender from ELRS.o
      Allocate [0x1fffff14 to 0x1fffff1f] to section .bss.i2c_buffer from drivers.o
      Allocate [0x1fffff20 to 0x1fffff2b] to section .bss.TelemetryReceiver from ELRS.o
      Allocate [0x1fffff2c to 0x1fffff37] to section .bss.LQCalc from ELRS.o
      Allocate [0x1fffff38 to 0x1fffff41] to section .bss.voice_uart_send_buf from BoardI6.o
      Allocate [0x1fffff44 to 0x1fffff47] to section .bss.telemetryErrors from crossfire.o
      Allocate [0x1fffff48 to 0x1fffff4b] to section .bss.hal from SX127x.o
      Allocate [0x1fffff4c to 0x1fffff4f] to section .bss.goodPkt from elrsV2.o
      Allocate [0x1fffff50 to 0x1fffff53] to section .bss.g_voice_cb from BoardI6.o
      Allocate [0x1fffff54 to 0x1fffff57] to section .bss.g_tmr10ms from drivers.o
      Allocate [0x1fffff58 to 0x1fffff5b] to section .bss.g_elrs_update_rate from crossfire.o
      Allocate [0x1fffff5c to 0x1fffff5f] to section .bss.g_elrs_lag from crossfire.o
      Allocate [0x1fffff60 to 0x1fffff63] to section .bss.perMain()::lastTMR from er9x.o
      Allocate [0x1fffff64 to 0x1fffff67] to section .bss.SX127xHal::instance from SX127xHal.o
      Allocate [0x1fffff68 to 0x1fffff6b] to section .bss.SX127xDriver::instance from SX127x.o
      Allocate [0x1fffff6c to 0x1fffff6f] to section .bss.g_crsf_read_callback from BoardI6.o
      Allocate [0x1fffff70 to 0x1fffff73] to section .bss.linkstatTimeout from elrsV2.o
      Allocate [0x1fffff74 to 0x1fffff77] to section .bss.fieldTimeout from elrsV2.o
      Allocate [0x1fffff78 to 0x1fffff7b] to section .bss.SPI_BufferPtr from BoardI6.o
      Allocate [0x1fffff7c to 0x1fffff7f] to section .bss.ID from A7105_SPI.o
      Allocate [0x1fffff80 to 0x1fffff83] to section .bss.AlertMessage from er9x.o
      Allocate [0x1fffff84 to 0x20000185] to section .bss.ota_crc from ELRS.o
      Allocate [0x20000186 to 0x200002b1] to section .bss.fields from elrsV2.o
      Allocate [0x200002b2 to 0x20000341] to section .bss.pulses2MHz from pulses.o
      Allocate [0x20000342 to 0x200003ab] to section .bss.Xmem from menus.o
      Allocate [0x200003ac to 0x200003cf] to section .bss.Voice from audio.o
      Allocate [0x200003d0 to 0x200003ef] to section .bss.s_timer from menus.o
      Allocate [0x200003f0 to 0x2000040f] to section .bss.g_chans512 from menus.o
      Allocate [0x20000410 to 0x2000042f] to section .bss.Ex_chans from menus.o
      Allocate [0x20000430 to 0x20000447] to section .bss.CsTimer from er9x.o
      Allocate [0x20000448 to 0x20000457] to section .bss.s_anaFilt from er9x.o
      Allocate [0x20000458 to 0x20000467] to section .bss.g_ppmIns from er9x.o
      Allocate [0x20000468 to 0x20000477] to section .bss.Nvs_timer from er9x.o
      Allocate [0x20000478 to 0x20000485] to section .bss.calibratedStick from menus.o
      Allocate [0x20000486 to 0x2000048f] to section .bss.theWriteFile from pers.o
      Allocate [0x20000490 to 0x20000499] to section .bss.theFile from pers.o
      Allocate [0x2000049a to 0x200004a3] to section .bss.P1values from er9x.o
      Allocate [0x200004a4 to 0x200004ab] to section .bss.TimeGlobals from menus.o
      Allocate [0x200004ac to 0x200004b1] to section .bss.Inactivity from er9x.o
      Allocate [0x1ffffe46 to 0x1ffffe47] to section .bss.tmrEEPROM from er9x.o
      Allocate [0x1fffff42 to 0x1fffff43] to section .bss.g_tmr16KHz from er9x.o
      Allocate [0x200004b2 to 0x200004b3] to section .bss.g_latency from menus.o
      Allocate [0x200004b4 to 0x200004b5] to section .bss.g_LightOffCounter from er9x.o
      Allocate [0x200004b6 to 0x200004b7] to section .bss.trace()::s_time from menus.o
      Allocate [0x200004b8 to 0x200004b9] to section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
      Allocate [0x200004ba to 0x200004bb] to section .bss.mainSequence()::timer from er9x.o
      Allocate [0x200004bc to 0x200004bd] to section .bss.reusableBufferOffset from elrsV2.o
      Allocate [0x200004be to 0x200004bf] to section .bss.s_eeDirtyTime10ms from pers.o
      Allocate [0x200004c0 to 0x200004c1] to section .bss.SPI_Size from BoardI6.o
      Allocate [0x200004c2 to 0x200004c3] to section .bss.GAltOffset from AFHDS2A_a7105.o
      Allocate [0x200004c4 to 0x200004c5] to section .bss.B3_comp_value from pulses.o
      Allocate [0x200004c6 to 0x200004c7] to section .bss.AltOffset from AFHDS2A_a7105.o
      Allocate [0x200004c8 to 0x200008b1] to section .bss.g_model from er9x.o
      Allocate [0x200008b2 to 0x20000bd1] to section .bss.reusableBuffer from elrsV2.o
      Allocate [0x20000bd2 to 0x20000c51] to section .bss.telemetryRxBuffer from crossfire.o
      Allocate [0x20000c52 to 0x20000cc7] to section .bss.g_eeGeneral from er9x.o
      Allocate [0x20000cc8 to 0x20000d0f] to section .bss.fieldData from elrsV2.o
      Allocate [0x20000d10 to 0x20000d4f] to section .bss.g_crsf_rx_buf from BoardI6.o
      Allocate [0x20000d50 to 0x20000d87] to section .bss.audio from er9x.o
      Allocate [0x20000d88 to 0x20000db4] to section .bss.keys from drivers.o
      Allocate [0x20000db5 to 0x20000ddf] to section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
      Allocate [0x20000de0 to 0x20000def] to section .bss.hopping_frequency from A7105_SPI.o
      Allocate [0x20000df0 to 0x20000dfb] to section .bss.Last_switch from er9x.o
      Allocate [0x20000dfc to 0x20000e05] to section .bss.voice_uart_recv_buf from BoardI6.o
      Allocate [0x20000e06 to 0x20000e0f] to section .bss.TimerConfig from er9x.o
      Allocate [0x20000e10 to 0x20000e18] to section .bss.Rotary from er9x.o
      Allocate [0x20000e19 to 0x20000e20] to section .bss.Nvs_state from er9x.o
      Allocate [0x20000e21 to 0x20000e24] to section .bss.phyStick from menus.o
      Allocate [0x20000e25 to 0x20000e28] to section .bss.PopupData from menus.o
      Allocate [0x20000e29 to 0x20000e2b] to section .bss.MenuControl from menus.o
      Allocate [0x1ffffe45 to 0x1ffffe45] to section .bss.voice_tx_idx from BoardI6.o
      Allocate [0x20000e2c to 0x20000e2c] to section .bss.voice_rx_idx from BoardI6.o
      Allocate [0x20000e2d to 0x20000e2d] to section .bss.tick10ms from er9x.o
      Allocate [0x20000e2e to 0x20000e2e] to section .bss.telemetryRxBufferCount from crossfire.o
      Allocate [0x20000e2f to 0x20000e2f] to section .bss.sysFlags from er9x.o
      Allocate [0x20000e30 to 0x20000e30] to section .bss.stickMoved from er9x.o
      Allocate [0x20000e31 to 0x20000e31] to section .bss.statusComplete from elrsV2.o
      Allocate [0x20000e32 to 0x20000e32] to section .bss.serialDat0 from pulses.o
      Allocate [0x20000e33 to 0x20000e33] to section .bss.scroll_disabled from menus.o
      Allocate [0x20000e34 to 0x20000e34] to section .bss.scrollUD from menus.o
      Allocate [0x20000e35 to 0x20000e35] to section .bss.scrollLR from menus.o
      Allocate [0x20000e36 to 0x20000e36] to section .bss.s_pgOfs from menus.o
      Allocate [0x20000e37 to 0x20000e37] to section .bss.s_noHi from menus.o
      Allocate [0x20000e38 to 0x20000e38] to section .bss.s_moveMode from menus.o
      Allocate [0x20000e39 to 0x20000e39] to section .bss.s_mixMaxSel from menus.o
      Allocate [0x20000e3a to 0x20000e3a] to section .bss.s_evt from drivers.o
      Allocate [0x20000e3b to 0x20000e3b] to section .bss.s_editing from menus.o
      Allocate [0x20000e3c to 0x20000e3c] to section .bss.s_editMode from menus.o
      Allocate [0x20000e3d to 0x20000e3d] to section .bss.pxxFlag from pulses.o
      Allocate [0x20000e3e to 0x20000e3e] to section .bss.protocol_flags from A7105_SPI.o
      Allocate [0x20000e3f to 0x20000e3f] to section .bss.ppmInAvailable from er9x.o
      Allocate [0x20000e40 to 0x20000e40] to section .bss.plotType from lcd.o
      Allocate [0x20000e41 to 0x20000e41] to section .bss.packet_count from A7105_SPI.o
      Allocate [0x20000e42 to 0x20000e42] to section .bss.outputTelemetryBufferTrigger from crossfire.o
      Allocate [0x20000e43 to 0x20000e43] to section .bss.outputTelemetryBufferSize from crossfire.o
      Allocate [0x20000e44 to 0x20000e44] to section .bss.mixToDelete from menus.o
      Allocate [0x20000e45 to 0x20000e45] to section .bss.itemmodified from elrsV2.o
      Allocate [0x20000e46 to 0x20000e46] to section .bss.hopping_frequency_no from A7105_SPI.o
      Allocate [0x20000e47 to 0x20000e47] to section .bss.heartbeat from pulses.o
      Allocate [0x20000e48 to 0x20000e48] to section .bss.g_vbat100mV from er9x.o
      Allocate [0x20000e49 to 0x20000e49] to section .bss.g_posHorz from menus.o
      Allocate [0x20000e4a to 0x20000e4a] to section .bss.g_menuStackPtr from er9x.o
      Allocate [0x20000e4b to 0x20000e4b] to section .bss.g_blinkTmr10ms from drivers.o
      Allocate [0x20000e4c to 0x20000e4c] to section .bss.fields_count from elrsV2.o
      Allocate [0x20000e4d to 0x20000e4d] to section .bss.fieldDataLen from elrsV2.o
      Allocate [0x20000e4e to 0x20000e4e] to section .bss.curselectIdx from elrsV2.o
      Allocate [0x20000e4f to 0x20000e4f] to section .bss.curNumSelection from elrsV2.o
      Allocate [0x20000e50 to 0x20000e50] to section .bss.curFieldChunk from elrsV2.o
      Allocate [0x20000e51 to 0x20000e51] to section .bss.bpanaCenter from menus.o
      Allocate [0x20000e52 to 0x20000e52] to section .bss.bind_phase from A7105_SPI.o
      Allocate [0x20000e53 to 0x20000e53] to section .bss.badPkt from elrsV2.o
      Allocate [0x20000e54 to 0x20000e54] to section .bss.bMenuShown from elrsV2.o
      Allocate [0x20000e55 to 0x20000e55] to section .bss.allParamsLoaded from elrsV2.o
      Allocate [0x20000e56 to 0x20000e56] to section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
      Allocate [0x20000e57 to 0x20000e57] to section .bss.audioQueue::driver()::toneCounter from er9x.o
      Allocate [0x20000e58 to 0x20000e58] to section .bss.perMain()::repeater from er9x.o
      Allocate [0x20000e59 to 0x20000e59] to section .bss.perMain()::alertKey from er9x.o
      Allocate [0x20000e5a to 0x20000e5a] to section .bss.perMain()::s_batCheck from er9x.o
      Allocate [0x20000e5b to 0x20000e5b] to section .bss.menuProc0(unsigned char)::trimSwLock from menus.o
      Allocate [0x20000e5c to 0x20000e5c] to section .bss.per10ms()::current from drivers.o
      Allocate [0x20000e5d to 0x20000e5d] to section .bss.perOut(short*, unsigned char)::sticky from menus.o
      Allocate [0x20000e5e to 0x20000e5e] to section .bss.check_backlight_voice()::tmr10ms from er9x.o
      Allocate [0x20000e5f to 0x20000e5f] to section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e60 to 0x20000e60] to section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
      Allocate [0x20000e61 to 0x20000e61] to section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e62 to 0x20000e62] to section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
      Allocate [0x20000e63 to 0x20000e63] to section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e64 to 0x20000e64] to section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e65 to 0x20000e65] to section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e66 to 0x20000e66] to section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e67 to 0x20000e67] to section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
      Allocate [0x20000e68 to 0x20000e68] to section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e69 to 0x20000e69] to section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e6a to 0x20000e6a] to section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e6b to 0x20000e6b] to section .bss.A7105_AntSwitch()::sw from A7105_SPI.o
      Allocate [0x20000e6c to 0x20000e6c] to section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e6d to 0x20000e6d] to section .bss.menuRangeBind(unsigned char)::timer from menus.o
      Allocate [0x20000e6e to 0x20000e6e] to section .bss.menuProcIndex(unsigned char)::mstate from menus.o
      Allocate [0x20000e6f to 0x20000e6f] to section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e70 to 0x20000e70] to section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
      Allocate [0x20000e71 to 0x20000e71] to section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e72 to 0x20000e72] to section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e73 to 0x20000e73] to section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
      Allocate [0x20000e74 to 0x20000e74] to section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e75 to 0x20000e75] to section .bss.menuProcMix(unsigned char)::mstate2 from menus.o
      Allocate [0x20000e76 to 0x20000e76] to section .bss.s_currIdx from menus.o
      Allocate [0x20000e77 to 0x20000e77] to section .bss.Columns from menus.o
      Allocate [0x20000e78 to 0x20000e78] to section .bss.wait_fin_count from audio.o
      Allocate [0x20000e79 to 0x20000e79] to section .bss.inputs_subview from menus.o
      Allocate [0x20000e7a to 0x20000e7a] to section .bss.s_eeLongTimer from pers.o
      Allocate [0x20000e7b to 0x20000e7b] to section .bss.LongMenuTimer from er9x.o
      Allocate [0x20000e7c to 0x20000e7c] to section .bss.s_moveMixIdx from menus.o
      Allocate [0x20000e7d to 0x20000e7d] to section .bss.s_eeDirtyMsk from pers.o
      Allocate [0x20000e7e to 0x20000e7e] to section .bss.s_currMixIdx from menus.o
      Allocate [0x20000e7f to 0x20000e7f] to section .bss.s_currDestCh from menus.o
      Allocate [0x20000e80 to 0x20000e80] to section .bss.s_curveChan from menus.o
      Allocate [0x20000e81 to 0x20000e81] to section .bss.IlinesCount from menus.o
      Allocate [0x20000e82 to 0x20000e82] to section .bss.s_expoChan from menus.o
      Allocate [0x20000e83 to 0x20000e83] to section .bss.ThrottleStickyOn from menus.o
      Allocate [0x20000e84 to 0x20000e84] to section .bss.Tevent from er9x.o
      Allocate [0x20000e85 to 0x20000e85] to section .bss.SystemOptions from er9x.o
      Allocate [0x20000e86 to 0x20000e86] to section .bss.StickScrollTimer from er9x.o
      Allocate [0x20000e87 to 0x20000e87] to section .bss.StickScrollAllowed from er9x.o
      Allocate [0x20000e88 to 0x20000e88] to section .bss.StepSize from er9x.o
      Allocate [0x20000e89 to 0x20000e89] to section .bss.RotaryState from menus.o
      Allocate [0x20000e8a to 0x20000e8a] to section .bss.RadioState from A7105_SPI.o
      Allocate [0x20000e8b to 0x20000e8b] to section .bss.RadioActive from pulses.o
      Allocate [0x20000e8c to 0x20000e8c] to section .bss.PausePulses from pulses.o
      Allocate [0x20000e8d to 0x20000e8d] to section .bss.Main_running from er9x.o
      Allocate [0x20000e8e to 0x20000e8e] to section .bss.M_longMenuTimer from menus.o
      Allocate [0x20000e8f to 0x20000e8f] to section .bss.Lcd_lastPos from lcd.o
      Allocate [0x20000e90 to 0x20000e90] to section .bss.LcdLock from lcd.o
      Allocate [0x20000e91 to 0x20000e91] to section .bss.InverseBlink from menus.o
      Allocate [0x20000e92 to 0x20000e92] to section .bss.EnterMenu from er9x.o
      Allocate [0x20000e93 to 0x20000e93] to section .bss.EepromActive from lcd.o
      Allocate [0x20000e94 to 0x20000e94] to section .bss.Ee_lock from pers.o
      Allocate [0x20000e95 to 0x20000e95] to section .bss.EditType from menus.o
      Allocate [0x20000e96 to 0x20000e96] to section .bss.EditColumns from menus.o
      Allocate [0x20000e97 to 0x20000e97] to section .bss.DupSub from menus.o
      Allocate [0x20000e98 to 0x20000e98] to section .bss.DupIfNonzero from menus.o
      Allocate [0x20000e99 to 0x20000e99] to section .bss.Current_protocol from pulses.o
      Allocate [0x20000e9a to 0x20000e9a] to section .bss.CurrentVolume from er9x.o
      Allocate [0x20000e9b to 0x20000e9b] to section .bss.CurrentPhase from menus.o
      Allocate [0x20000e9c to 0x20000e9c] to section .bss.CalcScaleNest from menus.o
      Allocate [0x20000ea0 to 0x20000ea3] to section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      Allocate [0x20000ea4 to 0x20000ea7] to section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Allocate [0x20000e9e to 0x20000e9f] to section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      Allocate [0x20000ea8 to 0x20000eb1] to section .data.play_cmd_buf from audio.o
      Allocate [0x20000eb2 to 0x20000eb8] to section .data.shacommit from elrsV2.o
      Allocate [0x20000eb9 to 0x20000ebc] to section .data.AlarmControl from er9x.o
      Allocate [0x20000e9d to 0x20000e9d] to section .data.prev_power from A7105_SPI.o
      Allocate [0x20000ebd to 0x20000ebd] to section .data.expectedChunks from elrsV2.o
      Allocate [0x20000ebe to 0x20000ebe] to section .data.curfieldId from elrsV2.o
  Executing place in [0x20000ebf to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x20000ec0 size 0] to block heap from [ Linker created ]


***************************************************************************************
***                                                                                 ***
***                              Normalize relocations                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Construct veneers                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating set_lpsci_direction(bool)
  Relocating submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  Relocating start_lpsci_DMA_receive()
  Relocating setup_crsf_serial_port
  Relocating stop_dma_receive()
  Relocating process_read_dma_data()
  Relocating crsf_send_data
  Relocating DMA0_IRQHandler
  Relocating crsf_is_sending
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_rx_buf
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating [.rodata..Lswitch.table.SetPRTTimPeriod]
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.41]
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.50]
  Relocating sticks
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.68]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.69]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.82]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating executeMenu(unsigned char)
  Relocating resetElrsMenuVariables()
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating badPkt
  Relocating goodPkt
  Relocating fields
  Relocating curfieldId
  Relocating curselectIdx
  Relocating curFieldChunk
  Relocating curNumSelection
  Relocating fieldData
  Relocating fieldDataLen
  Relocating expectedChunks
  Relocating statusComplete
  Relocating fields_count
  Relocating allParamsLoaded
  Relocating itemmodified
  Relocating shacommit
  Relocating bMenuShown
  Relocating fieldTimeout
  Relocating reusableBufferOffset
  Relocating reusableBuffer
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating linkstatTimeout
  Relocating [.rodata..L.str.9]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp


***************************************************************************************
***                                                                                 ***
***                               Synthetic sections                                ***
***                                                                                 ***
***************************************************************************************

  !!! block vectors
  !!! block vectors_ram
  !!! inline block <#1> at line 61, col 85
  !!! block ctors
  !!! inline block <#2> at line 62, col 85
  !!! block dtors
  !!! block exidx
  !!! block tbss
  !!! block tdata
  !!! block tls
  Create copy of block tdata:
      [0x0000c60e size 0]
  !!! block tdata_load
  !!! block heap
  @@@ block heap
  Create placeholder section for block heap
  !!! block stack
  @@@ block stack
  Create placeholder section for block stack
  !!! block cfm
  !!! 'place at start' block <#5> at line 97, col 45
  !!! 'place at start' block <#6> at line 98, col 45
  !!! 'place at start' block <#10> at line 119, col 45
  !!! 'place at end' block <#14> at line 129, col 45


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating set_lpsci_direction(bool)
  Relocating submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  Relocating start_lpsci_DMA_receive()
  Relocating setup_crsf_serial_port
  Relocating stop_dma_receive()
  Relocating process_read_dma_data()
  Relocating crsf_send_data
  Relocating DMA0_IRQHandler
  Relocating crsf_is_sending
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_rx_buf
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating [.rodata..Lswitch.table.SetPRTTimPeriod]
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.41]
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.50]
  Relocating sticks
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.68]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.69]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.82]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating executeMenu(unsigned char)
  Relocating resetElrsMenuVariables()
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating badPkt
  Relocating goodPkt
  Relocating fields
  Relocating curfieldId
  Relocating curselectIdx
  Relocating curFieldChunk
  Relocating curNumSelection
  Relocating fieldData
  Relocating fieldDataLen
  Relocating expectedChunks
  Relocating statusComplete
  Relocating fields_count
  Relocating allParamsLoaded
  Relocating itemmodified
  Relocating shacommit
  Relocating bMenuShown
  Relocating fieldTimeout
  Relocating reusableBufferOffset
  Relocating reusableBuffer
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating linkstatTimeout
  Relocating [.rodata..L.str.9]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                              Create block symbols                               ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
  Creating symbols for block stack
      Define global symbol __stack_end__ = 0x20001800
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                              Thread-local storage                               ***
***                                                                                 ***
***************************************************************************************

  Total size (excluding padding and alignment): 0 bytes
  Define global symbol __thread_pointer$ = 0x00000000


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating set_lpsci_direction(bool)
  Relocating submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  Relocating start_lpsci_DMA_receive()
  Relocating setup_crsf_serial_port
  Relocating stop_dma_receive()
  Relocating process_read_dma_data()
  Relocating crsf_send_data
  Relocating DMA0_IRQHandler
  Relocating crsf_is_sending
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_rx_buf
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating [.rodata..Lswitch.table.SetPRTTimPeriod]
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.41]
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.50]
  Relocating sticks
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.68]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.69]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.82]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating executeMenu(unsigned char)
  Relocating resetElrsMenuVariables()
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating badPkt
  Relocating goodPkt
  Relocating fields
  Relocating curfieldId
  Relocating curselectIdx
  Relocating curFieldChunk
  Relocating curNumSelection
  Relocating fieldData
  Relocating fieldDataLen
  Relocating expectedChunks
  Relocating statusComplete
  Relocating fields_count
  Relocating allParamsLoaded
  Relocating itemmodified
  Relocating shacommit
  Relocating bMenuShown
  Relocating fieldTimeout
  Relocating reusableBufferOffset
  Relocating reusableBuffer
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating linkstatTimeout
  Relocating [.rodata..L.str.9]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                             Warn unintended double                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Make inittab                                   ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (9 inputs)
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      play_cmd_buf from audio.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      curfieldId from elrsV2.o
      expectedChunks from elrsV2.o
      shacommit from elrsV2.o
  Applying user initialization 'auto': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
      [stack] from [ Linker created ]
  Initialize by auto:
      [0x20000e9d to 0x20000e9d] .data.prev_power [from A7105_SPI.o]
      [0x20000e9e to 0x20000e9f] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x20000ea0 to 0x20000ea3] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x20000ea4 to 0x20000ea7] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x20000ea8 to 0x20000eb1] .data.play_cmd_buf [from audio.o]
      [0x20000eb2 to 0x20000eb8] .data.shacommit [from elrsV2.o]
      [0x20000eb9 to 0x20000ebc] .data.AlarmControl [from er9x.o]
      [0x20000ebd to 0x20000ebd] .data.expectedChunks [from elrsV2.o]
      [0x20000ebe to 0x20000ebe] .data.curfieldId [from elrsV2.o]
  Selecting best packing for [0x20000e9d to 0x20000ebe], size=34
      Algorithms:
          Copy with packing=none:     image size=34 + algorithm code=26 for 60 total bytes
          Copy with packing=packbits: image size=35 + algorithm code=52 for 87 total bytes, 27 worse than plain copy
          Copy with packing=lzss:     image size=34 + algorithm code=74 for 108 total bytes, 48 worse than plain copy
          Copy with packing=zpak:     image size=32 + algorithm code=40 for 72 total bytes, 12 worse than plain copy
      Selected packing=copy
  Initialize by zero:
      [0x1ffff800 to 0x1ffff807] .bss.AFHDS2A_tel_status [from AFHDS2A_a7105.o]
      [0x1ffff808 to 0x1ffffc07] .bss.DisplayBuf [from lcd.o]
      [0x1ffffc08 to 0x1ffffd07] .bss.Output [from menus.o]
      [0x1ffffd08 to 0x1ffffdb3] .bss.AFHDS2A_tel_data [from AFHDS2A_a7105.o]
      [0x1ffffdb4 to 0x1ffffe03] .bss.Fade [from menus.o]
      [0x1ffffe04 to 0x1ffffe44] .bss.g_crossfire [from crossfire.o]
      [0x1ffffe45 to 0x1ffffe45] .bss.voice_tx_idx [from BoardI6.o]
      [0x1ffffe46 to 0x1ffffe47] .bss.tmrEEPROM [from er9x.o]
      [0x1ffffe48 to 0x1ffffe87] .bss.eeFs [from file.o]
      [0x1ffffe88 to 0x1ffffeb7] .bss.Radio [from ELRS.o]
      [0x1ffffeb8 to 0x1ffffedf] .bss.packet [from A7105_SPI.o]
      [0x1ffffee0 to 0x1ffffef3] .bss.g_menuStack [from er9x.o]
      [0x1ffffef4 to 0x1fffff03] .bss.outputTelemetryBuffer [from crossfire.o]
      [0x1fffff04 to 0x1fffff13] .bss.MspSender [from ELRS.o]
      [0x1fffff14 to 0x1fffff1f] .bss.i2c_buffer [from drivers.o]
      [0x1fffff20 to 0x1fffff2b] .bss.TelemetryReceiver [from ELRS.o]
      [0x1fffff2c to 0x1fffff37] .bss.LQCalc [from ELRS.o]
      [0x1fffff38 to 0x1fffff41] .bss.voice_uart_send_buf [from BoardI6.o]
      [0x1fffff42 to 0x1fffff43] .bss.g_tmr16KHz [from er9x.o]
      [0x1fffff44 to 0x1fffff47] .bss.telemetryErrors [from crossfire.o]
      [0x1fffff48 to 0x1fffff4b] .bss.hal [from SX127x.o]
      [0x1fffff4c to 0x1fffff4f] .bss.goodPkt [from elrsV2.o]
      [0x1fffff50 to 0x1fffff53] .bss.g_voice_cb [from BoardI6.o]
      [0x1fffff54 to 0x1fffff57] .bss.g_tmr10ms [from drivers.o]
      [0x1fffff58 to 0x1fffff5b] .bss.g_elrs_update_rate [from crossfire.o]
      [0x1fffff5c to 0x1fffff5f] .bss.g_elrs_lag [from crossfire.o]
      [0x1fffff60 to 0x1fffff63] .bss._ZZL7perMainvE7lastTMR [from er9x.o]
      [0x1fffff64 to 0x1fffff67] .bss._ZN9SX127xHal8instanceE [from SX127xHal.o]
      [0x1fffff68 to 0x1fffff6b] .bss._ZN12SX127xDriver8instanceE [from SX127x.o]
      [0x1fffff6c to 0x1fffff6f] .bss._ZL20g_crsf_read_callback [from BoardI6.o]
      [0x1fffff70 to 0x1fffff73] .bss._ZL15linkstatTimeout [from elrsV2.o]
      [0x1fffff74 to 0x1fffff77] .bss._ZL12fieldTimeout [from elrsV2.o]
      [0x1fffff78 to 0x1fffff7b] .bss.SPI_BufferPtr [from BoardI6.o]
      [0x1fffff7c to 0x1fffff7f] .bss.ID [from A7105_SPI.o]
      [0x1fffff80 to 0x1fffff83] .bss.AlertMessage [from er9x.o]
      [0x1fffff84 to 0x20000185] .bss.ota_crc [from ELRS.o]
      [0x20000186 to 0x200002b1] .bss.fields [from elrsV2.o]
      [0x200002b2 to 0x20000341] .bss.pulses2MHz [from pulses.o]
      [0x20000342 to 0x200003ab] .bss.Xmem [from menus.o]
      [0x200003ac to 0x200003cf] .bss.Voice [from audio.o]
      [0x200003d0 to 0x200003ef] .bss.s_timer [from menus.o]
      [0x200003f0 to 0x2000040f] .bss.g_chans512 [from menus.o]
      [0x20000410 to 0x2000042f] .bss.Ex_chans [from menus.o]
      [0x20000430 to 0x20000447] .bss.CsTimer [from er9x.o]
      [0x20000448 to 0x20000457] .bss.s_anaFilt [from er9x.o]
      [0x20000458 to 0x20000467] .bss.g_ppmIns [from er9x.o]
      [0x20000468 to 0x20000477] .bss.Nvs_timer [from er9x.o]
      [0x20000478 to 0x20000485] .bss.calibratedStick [from menus.o]
      [0x20000486 to 0x2000048f] .bss.theWriteFile [from pers.o]
      [0x20000490 to 0x20000499] .bss.theFile [from pers.o]
      [0x2000049a to 0x200004a3] .bss.P1values [from er9x.o]
      [0x200004a4 to 0x200004ab] .bss.TimeGlobals [from menus.o]
      [0x200004ac to 0x200004b1] .bss.Inactivity [from er9x.o]
      [0x200004b2 to 0x200004b3] .bss.g_latency [from menus.o]
      [0x200004b4 to 0x200004b5] .bss.g_LightOffCounter [from er9x.o]
      [0x200004b6 to 0x200004b7] .bss._ZZ5tracevE6s_time [from menus.o]
      [0x200004b8 to 0x200004b9] .bss._ZZ13ActionAFHDS2AE14packet_counter [from AFHDS2A_a7105.o]
      [0x200004ba to 0x200004bb] .bss._ZZ12mainSequencevE5timer [from er9x.o]
      [0x200004bc to 0x200004bd] .bss._ZL20reusableBufferOffset [from elrsV2.o]
      [0x200004be to 0x200004bf] .bss._ZL17s_eeDirtyTime10ms [from pers.o]
      [0x200004c0 to 0x200004c1] .bss.SPI_Size [from BoardI6.o]
      [0x200004c2 to 0x200004c3] .bss.GAltOffset [from AFHDS2A_a7105.o]
      [0x200004c4 to 0x200004c5] .bss.B3_comp_value [from pulses.o]
      [0x200004c6 to 0x200004c7] .bss.AltOffset [from AFHDS2A_a7105.o]
      [0x200004c8 to 0x200008b1] .bss.g_model [from er9x.o]
      [0x200008b2 to 0x20000bd1] .bss._ZL14reusableBuffer [from elrsV2.o]
      [0x20000bd2 to 0x20000c51] .bss.telemetryRxBuffer [from crossfire.o]
      [0x20000c52 to 0x20000cc7] .bss.g_eeGeneral [from er9x.o]
      [0x20000cc8 to 0x20000d0f] .bss.fieldData [from elrsV2.o]
      [0x20000d10 to 0x20000d4f] .bss._ZL13g_crsf_rx_buf [from BoardI6.o]
      [0x20000d50 to 0x20000d87] .bss.audio [from er9x.o]
      [0x20000d88 to 0x20000db4] .bss.keys [from drivers.o]
      [0x20000db5 to 0x20000ddf] .bss.AFHDS2A_tel_res_cnt [from AFHDS2A_a7105.o]
      [0x20000de0 to 0x20000def] .bss.hopping_frequency [from A7105_SPI.o]
      [0x20000df0 to 0x20000dfb] .bss.Last_switch [from er9x.o]
      [0x20000dfc to 0x20000e05] .bss.voice_uart_recv_buf [from BoardI6.o]
      [0x20000e06 to 0x20000e0f] .bss.TimerConfig [from er9x.o]
      [0x20000e10 to 0x20000e18] .bss.Rotary [from er9x.o]
      [0x20000e19 to 0x20000e20] .bss.Nvs_state [from er9x.o]
      [0x20000e21 to 0x20000e24] .bss.phyStick [from menus.o]
      [0x20000e25 to 0x20000e28] .bss.PopupData [from menus.o]
      [0x20000e29 to 0x20000e2b] .bss.MenuControl [from menus.o]
      [0x20000e2c to 0x20000e2c] .bss.voice_rx_idx [from BoardI6.o]
      [0x20000e2d to 0x20000e2d] .bss.tick10ms [from er9x.o]
      [0x20000e2e to 0x20000e2e] .bss.telemetryRxBufferCount [from crossfire.o]
      [0x20000e2f to 0x20000e2f] .bss.sysFlags [from er9x.o]
      [0x20000e30 to 0x20000e30] .bss.stickMoved [from er9x.o]
      [0x20000e31 to 0x20000e31] .bss.statusComplete [from elrsV2.o]
      [0x20000e32 to 0x20000e32] .bss.serialDat0 [from pulses.o]
      [0x20000e33 to 0x20000e33] .bss.scroll_disabled [from menus.o]
      [0x20000e34 to 0x20000e34] .bss.scrollUD [from menus.o]
      [0x20000e35 to 0x20000e35] .bss.scrollLR [from menus.o]
      [0x20000e36 to 0x20000e36] .bss.s_pgOfs [from menus.o]
      [0x20000e37 to 0x20000e37] .bss.s_noHi [from menus.o]
      [0x20000e38 to 0x20000e38] .bss.s_moveMode [from menus.o]
      [0x20000e39 to 0x20000e39] .bss.s_mixMaxSel [from menus.o]
      [0x20000e3a to 0x20000e3a] .bss.s_evt [from drivers.o]
      [0x20000e3b to 0x20000e3b] .bss.s_editing [from menus.o]
      [0x20000e3c to 0x20000e3c] .bss.s_editMode [from menus.o]
      [0x20000e3d to 0x20000e3d] .bss.pxxFlag [from pulses.o]
      [0x20000e3e to 0x20000e3e] .bss.protocol_flags [from A7105_SPI.o]
      [0x20000e3f to 0x20000e3f] .bss.ppmInAvailable [from er9x.o]
      [0x20000e40 to 0x20000e40] .bss.plotType [from lcd.o]
      [0x20000e41 to 0x20000e41] .bss.packet_count [from A7105_SPI.o]
      [0x20000e42 to 0x20000e42] .bss.outputTelemetryBufferTrigger [from crossfire.o]
      [0x20000e43 to 0x20000e43] .bss.outputTelemetryBufferSize [from crossfire.o]
      [0x20000e44 to 0x20000e44] .bss.mixToDelete [from menus.o]
      [0x20000e45 to 0x20000e45] .bss.itemmodified [from elrsV2.o]
      [0x20000e46 to 0x20000e46] .bss.hopping_frequency_no [from A7105_SPI.o]
      [0x20000e47 to 0x20000e47] .bss.heartbeat [from pulses.o]
      [0x20000e48 to 0x20000e48] .bss.g_vbat100mV [from er9x.o]
      [0x20000e49 to 0x20000e49] .bss.g_posHorz [from menus.o]
      [0x20000e4a to 0x20000e4a] .bss.g_menuStackPtr [from er9x.o]
      [0x20000e4b to 0x20000e4b] .bss.g_blinkTmr10ms [from drivers.o]
      [0x20000e4c to 0x20000e4c] .bss.fields_count [from elrsV2.o]
      [0x20000e4d to 0x20000e4d] .bss.fieldDataLen [from elrsV2.o]
      [0x20000e4e to 0x20000e4e] .bss.curselectIdx [from elrsV2.o]
      [0x20000e4f to 0x20000e4f] .bss.curNumSelection [from elrsV2.o]
      [0x20000e50 to 0x20000e50] .bss.curFieldChunk [from elrsV2.o]
      [0x20000e51 to 0x20000e51] .bss.bpanaCenter [from menus.o]
      [0x20000e52 to 0x20000e52] .bss.bind_phase [from A7105_SPI.o]
      [0x20000e53 to 0x20000e53] .bss.badPkt [from elrsV2.o]
      [0x20000e54 to 0x20000e54] .bss.bMenuShown [from elrsV2.o]
      [0x20000e55 to 0x20000e55] .bss.allParamsLoaded [from elrsV2.o]
      [0x20000e56 to 0x20000e56] .bss._ZZN7MState213check_columnsEhhE6lateUp [from menus.o]
      [0x20000e57 to 0x20000e57] .bss._ZZN10audioQueue6driverEvE11toneCounter [from er9x.o]
      [0x20000e58 to 0x20000e58] .bss._ZZL7perMainvE8repeater [from er9x.o]
      [0x20000e59 to 0x20000e59] .bss._ZZL7perMainvE8alertKey [from er9x.o]
      [0x20000e5a to 0x20000e5a] .bss._ZZL7perMainvE10s_batCheck [from er9x.o]
      [0x20000e5b to 0x20000e5b] .bss._ZZ9menuProc0hE10trimSwLock [from menus.o]
      [0x20000e5c to 0x20000e5c] .bss._ZZ7per10msvE7current [from drivers.o]
      [0x20000e5d to 0x20000e5d] .bss._ZZ6perOutPshE6sticky [from menus.o]
      [0x20000e5e to 0x20000e5e] .bss._ZZ21check_backlight_voicevE7tmr10ms [from er9x.o]
      [0x20000e5f to 0x20000e5f] .bss._ZZ19menuProcModelSelecthE7mstate2 [from menus.o]
      [0x20000e60 to 0x20000e60] .bss._ZZ19menuProcModelSelecthE12sel_editMode [from menus.o]
      [0x20000e61 to 0x20000e61] .bss._ZZ18menuProcVoiceAlarmhE7mstate2 [from menus.o]
      [0x20000e62 to 0x20000e62] .bss._ZZ18menuProcModelIndexhE6mstate [from menus.o]
      [0x20000e63 to 0x20000e63] .bss._ZZ17menuProcTelemetryhE7mstate2 [from menus.o]
      [0x20000e64 to 0x20000e64] .bss._ZZ16menuProcVoiceOnehE7mstate2 [from menus.o]
      [0x20000e65 to 0x20000e65] .bss._ZZ16menuProcProtocolhE7mstate2 [from menus.o]
      [0x20000e66 to 0x20000e66] .bss._ZZ16menuProcCurveOnehE7mstate2 [from menus.o]
      [0x20000e67 to 0x20000e67] .bss._ZZ16menuProcCurveOnehE7dfltCrv [from menus.o]
      [0x20000e68 to 0x20000e68] .bss._ZZ15menuSetFailsafehE7mstate2 [from menus.o]
      [0x20000e69 to 0x20000e69] .bss._ZZ15menuProcGlobalshE7mstate2 [from menus.o]
      [0x20000e6a to 0x20000e6a] .bss._ZZ15menuModelPhaseshE7mstate2 [from menus.o]
      [0x20000e6b to 0x20000e6b] .bss._ZZ15A7105_AntSwitchvE2sw [from A7105_SPI.o]
      [0x20000e6c to 0x20000e6c] .bss._ZZ14menuProcMixOnehE7mstate2 [from menus.o]
      [0x20000e6d to 0x20000e6d] .bss._ZZ13menuRangeBindhE5timer [from menus.o]
      [0x20000e6e to 0x20000e6e] .bss._ZZ13menuProcIndexhE6mstate [from menus.o]
      [0x20000e6f to 0x20000e6f] .bss._ZZ13menuProcCurvehE7mstate2 [from menus.o]
      [0x20000e70 to 0x20000e70] .bss._ZZ13ActionAFHDS2AE11packet_type [from AFHDS2A_a7105.o]
      [0x20000e71 to 0x20000e71] .bss._ZZ12menuScaleOnehE7mstate2 [from menus.o]
      [0x20000e72 to 0x20000e72] .bss._ZZ12menuPhaseOnehE7mstate2 [from menus.o]
      [0x20000e73 to 0x20000e73] .bss._ZZ11perOutPhasePshE9lastPhase [from menus.o]
      [0x20000e74 to 0x20000e74] .bss._ZZ11menuRXSetuphE7mstate2 [from menus.o]
      [0x20000e75 to 0x20000e75] .bss._ZZ11menuProcMixhE7mstate2 [from menus.o]
      [0x20000e76 to 0x20000e76] .bss._ZL9s_currIdx [from menus.o]
      [0x20000e77 to 0x20000e77] .bss._ZL7Columns [from menus.o]
      [0x20000e78 to 0x20000e78] .bss._ZL14wait_fin_count [from audio.o]
      [0x20000e79 to 0x20000e79] .bss._ZL14inputs_subview [from menus.o]
      [0x20000e7a to 0x20000e7a] .bss._ZL13s_eeLongTimer [from pers.o]
      [0x20000e7b to 0x20000e7b] .bss._ZL13LongMenuTimer [from er9x.o]
      [0x20000e7c to 0x20000e7c] .bss._ZL12s_moveMixIdx [from menus.o]
      [0x20000e7d to 0x20000e7d] .bss._ZL12s_eeDirtyMsk [from pers.o]
      [0x20000e7e to 0x20000e7e] .bss._ZL12s_currMixIdx [from menus.o]
      [0x20000e7f to 0x20000e7f] .bss._ZL12s_currDestCh [from menus.o]
      [0x20000e80 to 0x20000e80] .bss._ZL11s_curveChan [from menus.o]
      [0x20000e81 to 0x20000e81] .bss._ZL11IlinesCount [from menus.o]
      [0x20000e82 to 0x20000e82] .bss._ZL10s_expoChan [from menus.o]
      [0x20000e83 to 0x20000e83] .bss.ThrottleStickyOn [from menus.o]
      [0x20000e84 to 0x20000e84] .bss.Tevent [from er9x.o]
      [0x20000e85 to 0x20000e85] .bss.SystemOptions [from er9x.o]
      [0x20000e86 to 0x20000e86] .bss.StickScrollTimer [from er9x.o]
      [0x20000e87 to 0x20000e87] .bss.StickScrollAllowed [from er9x.o]
      [0x20000e88 to 0x20000e88] .bss.StepSize [from er9x.o]
      [0x20000e89 to 0x20000e89] .bss.RotaryState [from menus.o]
      [0x20000e8a to 0x20000e8a] .bss.RadioState [from A7105_SPI.o]
      [0x20000e8b to 0x20000e8b] .bss.RadioActive [from pulses.o]
      [0x20000e8c to 0x20000e8c] .bss.PausePulses [from pulses.o]
      [0x20000e8d to 0x20000e8d] .bss.Main_running [from er9x.o]
      [0x20000e8e to 0x20000e8e] .bss.M_longMenuTimer [from menus.o]
      [0x20000e8f to 0x20000e8f] .bss.Lcd_lastPos [from lcd.o]
      [0x20000e90 to 0x20000e90] .bss.LcdLock [from lcd.o]
      [0x20000e91 to 0x20000e91] .bss.InverseBlink [from menus.o]
      [0x20000e92 to 0x20000e92] .bss.EnterMenu [from er9x.o]
      [0x20000e93 to 0x20000e93] .bss.EepromActive [from lcd.o]
      [0x20000e94 to 0x20000e94] .bss.Ee_lock [from pers.o]
      [0x20000e95 to 0x20000e95] .bss.EditType [from menus.o]
      [0x20000e96 to 0x20000e96] .bss.EditColumns [from menus.o]
      [0x20000e97 to 0x20000e97] .bss.DupSub [from menus.o]
      [0x20000e98 to 0x20000e98] .bss.DupIfNonzero [from menus.o]
      [0x20000e99 to 0x20000e99] .bss.Current_protocol [from pulses.o]
      [0x20000e9a to 0x20000e9a] .bss.CurrentVolume [from er9x.o]
      [0x20000e9b to 0x20000e9b] .bss.CurrentPhase [from menus.o]
      [0x20000e9c to 0x20000e9c] .bss.CalcScaleNest [from menus.o]
  Initialize by copy:
      [0x20000e9d to 0x20000e9d] .data.prev_power [from A7105_SPI.o]
      [0x20000e9e to 0x20000e9f] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x20000ea0 to 0x20000ea3] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x20000ea4 to 0x20000ea7] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x20000ea8 to 0x20000eb1] .data.play_cmd_buf [from audio.o]
      [0x20000eb2 to 0x20000eb8] .data.shacommit [from elrsV2.o]
      [0x20000eb9 to 0x20000ebc] .data.AlarmControl [from er9x.o]
      [0x20000ebd to 0x20000ebd] .data.expectedChunks [from elrsV2.o]
      [0x20000ebe to 0x20000ebe] .data.curfieldId [from elrsV2.o]
  Initialize by lzss:
  Initialize by packbits:
  Initialize by zpak:
  Excluding call to __SEGGER_init_heap from initialization table as guard prevents this or selectors have zero size
  Including call to __SEGGER_init_ctors in initialization table as selectors have nonzero size
  Short-circuit initialization table is supported by startup code
  Find and place additional sections required by initialization table
      Defining any required ES block symbols
      Testing input sections to see if nonzero selected size
          All inputs (if any) have zero size
      Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_ctors
          Definition:     __SEGGER_init_ctors
          Pushing section .segger.init.__SEGGER_init_ctors to worklist [originates from symbol __SEGGER_init_ctors]
      
      Processing section: .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Load REL relocations for .segger.init.__SEGGER_init_ctors (SEGGER_crtinit_v6m_little.o)
          Reference:      __ctors_start__
          Reference:      __ctors_end__
      
      Selecting [ Linker created ] to define __SEGGER_init_table__
          Definition:     __SEGGER_init_table__
          Pushing section .segger.init.table to worklist [originates from symbol __SEGGER_init_table__]
      
      Processing section: .segger.init.table from [ Linker created ]
          Reference:      __SEGGER_init_zero
          Reference:      __SEGGER_init_copy
          Local section:  .segger.init.data from [ Linker created ] using relocation R_ARM_ABS32
          Reference:      __SEGGER_init_done
      
      Processing section: .segger.init.data from [ Linker created ]
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_copy
          Definition:     __SEGGER_init_copy
          Pushing section .segger.init.__SEGGER_init_copy to worklist [originates from symbol __SEGGER_init_copy]
      
      Processing section: .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
      
      Selecting SEGGER_THUMB_Startup.o to define __SEGGER_init_done
          Definition:     __SEGGER_init_done
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_zero
          Definition:     __SEGGER_init_zero
          Pushing section .segger.init.__SEGGER_init_zero to worklist [originates from symbol __SEGGER_init_zero]
      
      Processing section: .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      
      Selecting [ Linker created ] to define __stack_end__
          Definition:     __stack_end__
          Pushing section [ Linker absolute ] to worklist [originates from symbol __stack_end__]
      Testing input sections to see if nonzero selected size
          All inputs (if any) have zero size
      Initialize by calling __SEGGER_init_heap has zero selector size, not included yet
      Defining any required ES block symbols
      Select inputs for block vectors
      Select inputs for block vectors_ram
      Select inputs for inline block <#1> at line 61, col 85
      Select inputs for block ctors
      Select inputs for inline block <#2> at line 62, col 85
      Select inputs for block dtors
      Select inputs for block exidx
      Select inputs for block tbss
      Select inputs for block tdata
      Select inputs for block tls
      Select inputs for block tdata_load
      Select inputs for block heap
      Select inputs for block stack
      Select inputs for block cfm
      Select inputs for 'place at start' block <#5> at line 97, col 45
      Select inputs for 'place at start' block <#6> at line 98, col 45
      Select inputs for 'place at start' block <#10> at line 119, col 45
      Select inputs for 'place at end' block <#14> at line 129, col 45
      Select inputs for 'place in' block <#3> at line 90, col 44
      Select inputs for 'place in' block <#4> at line 91, col 44
      Select inputs for 'place in' block <#7> at line 99, col 45
          Select section .rodata.block.tdata.copy ([.rodata.block.tdata.copy]) [size 0] from [ Linker created ] using wildcard
          Select section .segger.init.__SEGGER_init_zero (__SEGGER_init_zero) [size 18] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_copy (__SEGGER_init_copy) [size 20] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_ctors (__SEGGER_init_ctors) [size 32] from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.table (__SEGGER_init_table__) [size 36] from [ Linker created ] using wildcard
          Select section .segger.init.data (__SEGGER_init_data__) [size 34] from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#8> at line 108, col 45
      Select inputs for 'place in' block <#9> at line 115, col 44
      Select inputs for 'place in' block <#11> at line 120, col 45
      Select inputs for 'place in' block <#12> at line 124, col 45
          Select section .bss.block.heap ([.bss.block.heap]) [size 0] from [ Linker created ] using wildcard
          Select section .bss.block.stack ([.bss.block.stack]) [size 256] from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#13> at line 128, col 45
      Executing place in [0x0000c60e to 0x0000c60f] + [0x0000c8ee to 0x0000c8ef] + [0x0000cb1f to 0x0000cb1f] + [0x0000d006 to 0x0000d007] + [0x0000d01e to 0x0000d01f] + [0x0000fb8e to 0x0000fb8f] + [0x0000fb9c to 0x0000ffff] (620 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
          Allocate [0x0000fb9c to 0x0000fbbf] to section .segger.init.table from [ Linker created ]
          Allocate [0x0000fbc0 to 0x0000fbe1] to section .segger.init.data from [ Linker created ]
          Allocate [0x0000fbe4 to 0x0000fc03] to section .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000fc04 to 0x0000fc17] to section .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000fc18 to 0x0000fc29] to section .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      Executing place in [0x0000c60e to 0x0000c60f] + [0x0000c8ee to 0x0000c8ef] + [0x0000cb1f to 0x0000cb1f] + [0x0000d006 to 0x0000d007] + [0x0000d01e to 0x0000d01f] + [0x0000fb8e to 0x0000fb8f] + [0x0000fbe2 to 0x0000fbe3] + [0x0000fc2a to 0x0000ffff] (1 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
      Executing place in [0x20000ebf to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000ebf to 0x200016ff] (206 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000ebf to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                               Make block symbols                                ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
      Define global symbol __ctors_start__ = 0x0000fb90
      Define global symbol __ctors_end__ = 0x0000fb9c
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
  Creating symbols for block stack
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating set_lpsci_direction(bool)
  Relocating submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  Relocating start_lpsci_DMA_receive()
  Relocating setup_crsf_serial_port
  Relocating stop_dma_receive()
  Relocating process_read_dma_data()
  Relocating crsf_send_data
  Relocating DMA0_IRQHandler
  Relocating crsf_is_sending
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_rx_buf
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating [.rodata..Lswitch.table.SetPRTTimPeriod]
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.41]
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.50]
  Relocating sticks
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.68]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.69]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.82]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating executeMenu(unsigned char)
  Relocating resetElrsMenuVariables()
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating badPkt
  Relocating goodPkt
  Relocating fields
  Relocating curfieldId
  Relocating curselectIdx
  Relocating curFieldChunk
  Relocating curNumSelection
  Relocating fieldData
  Relocating fieldDataLen
  Relocating expectedChunks
  Relocating statusComplete
  Relocating fields_count
  Relocating allParamsLoaded
  Relocating itemmodified
  Relocating shacommit
  Relocating bMenuShown
  Relocating fieldTimeout
  Relocating reusableBufferOffset
  Relocating reusableBuffer
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating linkstatTimeout
  Relocating [.rodata..L.str.9]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_ctors
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                 Region symbols                                  ***
***                                                                                 ***
***************************************************************************************

  Define region symbols for CFM
  Define region symbols for FLASH
  Define region symbols for RAM


***************************************************************************************
***                                                                                 ***
***                              Final relocate image                               ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating set_lpsci_direction(bool)
  Relocating submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool)
  Relocating start_lpsci_DMA_receive()
  Relocating setup_crsf_serial_port
  Relocating stop_dma_receive()
  Relocating process_read_dma_data()
  Relocating crsf_send_data
  Relocating DMA0_IRQHandler
  Relocating crsf_is_sending
  Relocating shutdown_crsf_serial_port
  Relocating serialVoiceInit(void (*)(unsigned char*, unsigned char))
  Relocating sendSerialVoiceData(unsigned char*, unsigned int)
  Relocating UART2_IRQHandler
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_rx_buf
  Relocating g_crsf_read_callback
  Relocating g_voice_cb
  Relocating voice_uart_recv_buf
  Relocating voice_rx_idx
  Relocating voice_uart_send_buf
  Relocating voice_tx_idx
  Relocating [.rodata..Lswitch.table.SetPRTTimPeriod]
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating DoSum(unsigned char*, unsigned char)
  Relocating Uart_SendCMD(unsigned char, unsigned char, unsigned short)
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating putVoiceQueue(unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating setVolume(unsigned char)
  Relocating on_voice_cb(unsigned char*, unsigned char)
  Relocating t_voice::voice_process()
  Relocating play_cmd_buf
  Relocating Voice
  Relocating wait_fin_count
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.6]
  Relocating UnitsString
  Relocating [.rodata..L.str.7]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.8]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.9]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.16]
  Relocating mixToDelete
  Relocating [.rodata..L.str.17]
  Relocating [.rodata..L.str.18]
  Relocating [.rodata..L.str.19]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.20]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.21]
  Relocating [.rodata..L.str.22]
  Relocating [.rodata..L.str.23]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.26]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.27]
  Relocating [.rodata..L.str.28]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.30]
  Relocating [.rodata..L.str.31]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.32]
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.38]
  Relocating [.rodata..L.str.39]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.40]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.41]
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.50]
  Relocating sticks
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating [.rodata..L.str.67]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.68]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.69]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.82]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating [.rodata..L.str.85]
  Relocating [.rodata..L.str.86]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating [.rodata..L.str.90]
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating [.rodata..L.str.99]
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating Str_Protocol
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating MixPopList
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char)
  Relocating crossfireTelemetryPing()
  Relocating parseDeviceInfoMessage(unsigned char*)
  Relocating parseParameterInfoMessage(unsigned char*, unsigned char)
  Relocating runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char)
  Relocating executeMenu(unsigned char)
  Relocating resetElrsMenuVariables()
  Relocating crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating badPkt
  Relocating goodPkt
  Relocating fields
  Relocating curfieldId
  Relocating curselectIdx
  Relocating curFieldChunk
  Relocating curNumSelection
  Relocating fieldData
  Relocating fieldDataLen
  Relocating expectedChunks
  Relocating statusComplete
  Relocating fields_count
  Relocating allParamsLoaded
  Relocating itemmodified
  Relocating shacommit
  Relocating bMenuShown
  Relocating fieldTimeout
  Relocating reusableBufferOffset
  Relocating reusableBuffer
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating [.rodata..L.str.8]
  Relocating linkstatTimeout
  Relocating [.rodata..L.str.9]
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating processCrossfireTelemetryValue(unsigned char, int)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char)
  Relocating crsf_init()
  Relocating crsf_shutdown()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_elrs_update_rate
  Relocating g_elrs_lag
  Relocating idx_to_afhds2a
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __aeabi_llsl
  Relocating __aeabi_llsr
  Relocating __aeabi_idiv
  Relocating __aeabi_idivmod
  Relocating __aeabi_uidiv
  Relocating __aeabi_uidivmod
  Relocating div
  Relocating strlen
  Relocating memcpy
  Relocating __aeabi_memclr
  Relocating __aeabi_memmove
  Relocating memcmp
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_ctors
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                  Fill regions                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Combine debug                                  ***
***                                                                                 ***
***************************************************************************************

  Load REL relocations for .debug_aranges (system_MKL16Z4.o)
  Load REL relocations for .debug_aranges (lcd.o)
  Load REL relocations for .debug_aranges (BoardI6.o)
  Load REL relocations for .debug_aranges (er9x.o)
  Load REL relocations for .debug_aranges (A7105_SPI.o)
  Load REL relocations for .debug_aranges (AFHDS2A_a7105.o)
  Load REL relocations for .debug_aranges (audio.o)
  Load REL relocations for .debug_aranges (drivers.o)
  Load REL relocations for .debug_aranges (file.o)
  Load REL relocations for .debug_aranges (menus.o)
  Load REL relocations for .debug_aranges (pulses.o)
  Load REL relocations for .debug_aranges (stamp.o)
  Load REL relocations for .debug_aranges (templates.o)
  Load REL relocations for .debug_aranges (main.o)
  Load REL relocations for .debug_aranges (AFHDS.o)
  Load REL relocations for .debug_aranges (elrsV2.o)
  Load REL relocations for .debug_aranges (crc_crsf.o)
  Load REL relocations for .debug_aranges (crossfire.o)
  Load REL relocations for .debug_aranges (pers.o)
  Load REL relocations for .debug_aranges (SX127x.o)
  Load REL relocations for .debug_aranges (SX127xHal.o)
  Load REL relocations for .debug_aranges (ELRS.o)
  Load REL relocations for .debug_aranges (stubborn_receiver.o)
  Load REL relocations for .debug_aranges (stubborn_sender.o)
  Load REL relocations for .debug_aranges (crc.o)
  Load REL relocations for .debug_aranges (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_aranges (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_aranges (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_frame (system_MKL16Z4.o)
  Load REL relocations for .debug_frame (lcd.o)
  Load REL relocations for .debug_frame (BoardI6.o)
  Load REL relocations for .debug_frame (er9x.o)
  Load REL relocations for .debug_frame (A7105_SPI.o)
  Load REL relocations for .debug_frame (AFHDS2A_a7105.o)
  Load REL relocations for .debug_frame (audio.o)
  Load REL relocations for .debug_frame (drivers.o)
  Load REL relocations for .debug_frame (file.o)
  Load REL relocations for .debug_frame (menus.o)
  Load REL relocations for .debug_frame (pulses.o)
  Load REL relocations for .debug_frame (templates.o)
  Load REL relocations for .debug_frame (main.o)
  Load REL relocations for .debug_frame (AFHDS.o)
  Load REL relocations for .debug_frame (elrsV2.o)
  Load REL relocations for .debug_frame (crc_crsf.o)
  Load REL relocations for .debug_frame (crossfire.o)
  Load REL relocations for .debug_frame (pers.o)
  Load REL relocations for .debug_frame (SX127x.o)
  Load REL relocations for .debug_frame (SX127xHal.o)
  Load REL relocations for .debug_frame (ELRS.o)
  Load REL relocations for .debug_frame (stubborn_receiver.o)
  Load REL relocations for .debug_frame (stubborn_sender.o)
  Load REL relocations for .debug_frame (crc.o)
  Load REL relocations for .debug_info (system_MKL16Z4.o)
  Load REL relocations for .debug_info (lcd.o)
  Load REL relocations for .debug_info (BoardI6.o)
  Load REL relocations for .debug_info (er9x.o)
  Load REL relocations for .debug_info (A7105_SPI.o)
  Load REL relocations for .debug_info (AFHDS2A_a7105.o)
  Load REL relocations for .debug_info (audio.o)
  Load REL relocations for .debug_info (drivers.o)
  Load REL relocations for .debug_info (file.o)
  Load REL relocations for .debug_info (menus.o)
  Load REL relocations for .debug_info (pulses.o)
  Load REL relocations for .debug_info (stamp.o)
  Load REL relocations for .debug_info (templates.o)
  Load REL relocations for .debug_info (main.o)
  Load REL relocations for .debug_info (AFHDS.o)
  Load REL relocations for .debug_info (elrsV2.o)
  Load REL relocations for .debug_info (crc_crsf.o)
  Load REL relocations for .debug_info (crossfire.o)
  Load REL relocations for .debug_info (pers.o)
  Load REL relocations for .debug_info (SX127x.o)
  Load REL relocations for .debug_info (SX127xHal.o)
  Load REL relocations for .debug_info (ELRS.o)
  Load REL relocations for .debug_info (stubborn_receiver.o)
  Load REL relocations for .debug_info (stubborn_sender.o)
  Load REL relocations for .debug_info (crc.o)
  Load REL relocations for .debug_info (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_info (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_info (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_line (system_MKL16Z4.o)
  Load REL relocations for .debug_line (lcd.o)
  Load REL relocations for .debug_line (BoardI6.o)
  Load REL relocations for .debug_line (er9x.o)
  Load REL relocations for .debug_line (A7105_SPI.o)
  Load REL relocations for .debug_line (AFHDS2A_a7105.o)
  Load REL relocations for .debug_line (audio.o)
  Load REL relocations for .debug_line (drivers.o)
  Load REL relocations for .debug_line (file.o)
  Load REL relocations for .debug_line (menus.o)
  Load REL relocations for .debug_line (pulses.o)
  Load REL relocations for .debug_line (templates.o)
  Load REL relocations for .debug_line (main.o)
  Load REL relocations for .debug_line (AFHDS.o)
  Load REL relocations for .debug_line (elrsV2.o)
  Load REL relocations for .debug_line (crc_crsf.o)
  Load REL relocations for .debug_line (crossfire.o)
  Load REL relocations for .debug_line (pers.o)
  Load REL relocations for .debug_line (SX127x.o)
  Load REL relocations for .debug_line (SX127xHal.o)
  Load REL relocations for .debug_line (ELRS.o)
  Load REL relocations for .debug_line (stubborn_receiver.o)
  Load REL relocations for .debug_line (stubborn_sender.o)
  Load REL relocations for .debug_line (crc.o)
  Load REL relocations for .debug_line (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_line (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_line (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_loc (system_MKL16Z4.o)
  Load REL relocations for .debug_loc (lcd.o)
  Load REL relocations for .debug_loc (BoardI6.o)
  Load REL relocations for .debug_loc (er9x.o)
  Load REL relocations for .debug_loc (A7105_SPI.o)
  Load REL relocations for .debug_loc (AFHDS2A_a7105.o)
  Load REL relocations for .debug_loc (audio.o)
  Load REL relocations for .debug_loc (drivers.o)
  Load REL relocations for .debug_loc (file.o)
  Load REL relocations for .debug_loc (menus.o)
  Load REL relocations for .debug_loc (pulses.o)
  Load REL relocations for .debug_loc (templates.o)
  Load REL relocations for .debug_loc (AFHDS.o)
  Load REL relocations for .debug_loc (elrsV2.o)
  Load REL relocations for .debug_loc (crc_crsf.o)
  Load REL relocations for .debug_loc (crossfire.o)
  Load REL relocations for .debug_loc (pers.o)
  Load REL relocations for .debug_loc (SX127x.o)
  Load REL relocations for .debug_loc (SX127xHal.o)
  Load REL relocations for .debug_loc (ELRS.o)
  Load REL relocations for .debug_loc (stubborn_receiver.o)
  Load REL relocations for .debug_loc (stubborn_sender.o)
  Load REL relocations for .debug_loc (crc.o)
  Load REL relocations for .debug_pubnames (system_MKL16Z4.o)
  Load REL relocations for .debug_pubnames (lcd.o)
  Load REL relocations for .debug_pubnames (BoardI6.o)
  Load REL relocations for .debug_pubnames (er9x.o)
  Load REL relocations for .debug_pubnames (A7105_SPI.o)
  Load REL relocations for .debug_pubnames (AFHDS2A_a7105.o)
  Load REL relocations for .debug_pubnames (audio.o)
  Load REL relocations for .debug_pubnames (drivers.o)
  Load REL relocations for .debug_pubnames (file.o)
  Load REL relocations for .debug_pubnames (menus.o)
  Load REL relocations for .debug_pubnames (pulses.o)
  Load REL relocations for .debug_pubnames (stamp.o)
  Load REL relocations for .debug_pubnames (templates.o)
  Load REL relocations for .debug_pubnames (main.o)
  Load REL relocations for .debug_pubnames (AFHDS.o)
  Load REL relocations for .debug_pubnames (elrsV2.o)
  Load REL relocations for .debug_pubnames (crc_crsf.o)
  Load REL relocations for .debug_pubnames (crossfire.o)
  Load REL relocations for .debug_pubnames (pers.o)
  Load REL relocations for .debug_pubnames (SX127x.o)
  Load REL relocations for .debug_pubnames (SX127xHal.o)
  Load REL relocations for .debug_pubnames (ELRS.o)
  Load REL relocations for .debug_pubnames (stubborn_receiver.o)
  Load REL relocations for .debug_pubnames (stubborn_sender.o)
  Load REL relocations for .debug_pubnames (crc.o)
  Load REL relocations for .debug_pubtypes (system_MKL16Z4.o)
  Load REL relocations for .debug_pubtypes (lcd.o)
  Load REL relocations for .debug_pubtypes (BoardI6.o)
  Load REL relocations for .debug_pubtypes (er9x.o)
  Load REL relocations for .debug_pubtypes (A7105_SPI.o)
  Load REL relocations for .debug_pubtypes (AFHDS2A_a7105.o)
  Load REL relocations for .debug_pubtypes (audio.o)
  Load REL relocations for .debug_pubtypes (drivers.o)
  Load REL relocations for .debug_pubtypes (file.o)
  Load REL relocations for .debug_pubtypes (menus.o)
  Load REL relocations for .debug_pubtypes (pulses.o)
  Load REL relocations for .debug_pubtypes (stamp.o)
  Load REL relocations for .debug_pubtypes (templates.o)
  Load REL relocations for .debug_pubtypes (main.o)
  Load REL relocations for .debug_pubtypes (AFHDS.o)
  Load REL relocations for .debug_pubtypes (elrsV2.o)
  Load REL relocations for .debug_pubtypes (crc_crsf.o)
  Load REL relocations for .debug_pubtypes (crossfire.o)
  Load REL relocations for .debug_pubtypes (pers.o)
  Load REL relocations for .debug_pubtypes (SX127x.o)
  Load REL relocations for .debug_pubtypes (SX127xHal.o)
  Load REL relocations for .debug_pubtypes (ELRS.o)
  Load REL relocations for .debug_pubtypes (stubborn_receiver.o)
  Load REL relocations for .debug_pubtypes (stubborn_sender.o)
  Load REL relocations for .debug_pubtypes (crc.o)
  Load REL relocations for .debug_ranges (system_MKL16Z4.o)
  Load REL relocations for .debug_ranges (lcd.o)
  Load REL relocations for .debug_ranges (BoardI6.o)
  Load REL relocations for .debug_ranges (er9x.o)
  Load REL relocations for .debug_ranges (A7105_SPI.o)
  Load REL relocations for .debug_ranges (AFHDS2A_a7105.o)
  Load REL relocations for .debug_ranges (audio.o)
  Load REL relocations for .debug_ranges (drivers.o)
  Load REL relocations for .debug_ranges (file.o)
  Load REL relocations for .debug_ranges (menus.o)
  Load REL relocations for .debug_ranges (pulses.o)
  Load REL relocations for .debug_ranges (templates.o)
  Load REL relocations for .debug_ranges (AFHDS.o)
  Load REL relocations for .debug_ranges (elrsV2.o)
  Load REL relocations for .debug_ranges (crc_crsf.o)
  Load REL relocations for .debug_ranges (crossfire.o)
  Load REL relocations for .debug_ranges (pers.o)
  Load REL relocations for .debug_ranges (SX127x.o)
  Load REL relocations for .debug_ranges (SX127xHal.o)
  Load REL relocations for .debug_ranges (ELRS.o)
  Load REL relocations for .debug_ranges (stubborn_receiver.o)
  Load REL relocations for .debug_ranges (stubborn_sender.o)
  Load REL relocations for .debug_ranges (crc.o)


***************************************************************************************
***                                                                                 ***
***                                Create attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                    Print map                                    ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Run assertions                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                   Write image                                   ***
***                                                                                 ***
***************************************************************************************

  Create program sections
      Start program header at 0x00000000
        [0x00000000 to 0x000000bf] - _vectors (section .vectors)
        [0x000000c0 to 0x000003fb] - MState2::check_columns(unsigned char, unsigned char) (section .text.MState2::check_columns(unsigned char, unsigned char))
        [0x000003fc to 0x000003ff] - menuProc0(unsigned char)::xt (section .rodata.menuProc0(unsigned char)::xt)
        [0x00000400 to 0x0000040f] - BackDoorKey (section .cfm)
        [0x00000410 to 0x000014c7] - menuProcModelIndex(unsigned char) (section .text.menuProcModelIndex(unsigned char))
        [0x000014c8 to 0x00002157] - menuProcIndex(unsigned char) (section .text.menuProcIndex(unsigned char))
        [0x00002158 to 0x00002d1f] - perOut(short*, unsigned char) (section .text.perOut(short*, unsigned char))
        [0x00002d20 to 0x000034b7] - mainSequence() (section .text.mainSequence())
        [0x000034b8 to 0x00003a43] - menuProc0(unsigned char) (section .text.menuProc0(unsigned char))
        [0x00003a44 to 0x00003f13] - menuProcMixOne(unsigned char) (section .text.menuProcMixOne(unsigned char))
        [0x00003f14 to 0x000043bb] - menuProcMix(unsigned char) (section .text.menuProcMix(unsigned char))
        [0x000043bc to 0x0000482f] - menuProcVoiceOne(unsigned char) (section .text.menuProcVoiceOne(unsigned char))
        [0x00004830 to 0x00004c0b] - ActionAFHDS2A (section .text.ActionAFHDS2A)
        [0x00004c0c to 0x00004fbb] - HW_Init (section .text.HW_Init)
        [0x00004fbc to 0x00005323] - parseParameterInfoMessage(unsigned char*, unsigned char) (section .text.parseParameterInfoMessage(unsigned char*, unsigned char))
        [0x00005324 to 0x0000565f] - audioQueue::event(unsigned char, unsigned char) (section .text.audioQueue::event(unsigned char, unsigned char))
        [0x00005660 to 0x00005987] - timer() (section .text.timer())
        [0x00005988 to 0x00005ca3] - menuProcModelSelect(unsigned char) (section .text.menuProcModelSelect(unsigned char))
        [0x00005ca4 to 0x00005fbf] - menuProcProtocol(unsigned char) (section .text.menuProcProtocol(unsigned char))
        [0x00005fc0 to 0x0000629b] - procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char))
        [0x0000629c to 0x0000653b] - crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.crossfileMenu(MState2&, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000653c to 0x000067cf] - menuScaleOne(unsigned char) (section .text.menuScaleOne(unsigned char))
        [0x000067d0 to 0x00006a2f] - processCrossfireTelemetryFrame() (section .text.processCrossfireTelemetryFrame())
        [0x00006a30 to 0x00006c7b] - runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char) (section .text.runCrossfireTelemetryCallback(unsigned char, unsigned char*, unsigned char))
        [0x00006c7c to 0x00006e9b] - mainER() (section .text.mainER())
        [0x00006e9c to 0x000070bb] - lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char))
        [0x000070bc to 0x000072c7] - eeLoadModel(unsigned char) (section .text.eeLoadModel(unsigned char))
        [0x000072c8 to 0x000074af] - getSwitch(signed char, bool, unsigned char) (section .text.getSwitch(signed char, bool, unsigned char))
        [0x000074b0 to 0x00007697] - menuProcTelemetry(unsigned char) (section .text.menuProcTelemetry(unsigned char))
        [0x00007698 to 0x0000787f] - menuProcGlobals(unsigned char) (section .text.menuProcGlobals(unsigned char))
        [0x00007880 to 0x00007a5b] - menuPhaseOne(unsigned char) (section .text.menuPhaseOne(unsigned char))
        [0x00007a5c to 0x00007c23] - putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char))
        [0x00007c24 to 0x00007deb] - menuSetFailsafe(unsigned char) (section .text.menuSetFailsafe(unsigned char))
        [0x00007dec to 0x00007f73] - checkIncDec16(short, short, short, unsigned char) (section .text.checkIncDec16(short, short, short, unsigned char))
        [0x00007f74 to 0x000080f7] - perOutPhase(short*, unsigned char) (section .text.perOutPhase(short*, unsigned char))
        [0x000080f8 to 0x00008257] - i2c_master (section .text.i2c_master)
        [0x00008258 to 0x000083b7] - eeCheck(bool) (section .text.eeCheck(bool))
        [0x000083b8 to 0x0000850f] - eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int))
        [0x00008510 to 0x00008667] - AFHDS2A_build_packet(unsigned char) (section .text.AFHDS2A_build_packet(unsigned char))
        [0x00008668 to 0x000087bb] - menuProcCurveOne(unsigned char) (section .text.menuProcCurveOne(unsigned char))
        [0x000087bc to 0x00008907] - processFlySkySensor(unsigned char const*, unsigned char) (section .text.processFlySkySensor(unsigned char const*, unsigned char))
        [0x00008908 to 0x00008a4b] - doPopup(char const*, unsigned char, unsigned char) (section .text.doPopup(char const*, unsigned char, unsigned char))
        [0x00008a4c to 0x00008b6f] - lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char))
        [0x00008b70 to 0x00008c87] - menuProcVoiceAlarm(unsigned char) (section .text.menuProcVoiceAlarm(unsigned char))
        [0x00008c88 to 0x00008d93] - setup_crsf_serial_port (section .text.setup_crsf_serial_port)
        [0x00008d94 to 0x00008e7f] - menuModelPhases(unsigned char) (section .text.menuModelPhases(unsigned char))
        [0x00008e80 to 0x00008f6b] - setupPulsesPPM(unsigned char) (section .text.setupPulsesPPM(unsigned char))
        [0x00008f6c to 0x0000904f] - checkSwitches() (section .text.checkSwitches())
        [0x00009050 to 0x00009127] - per10ms() (section .text.per10ms())
        [0x00009128 to 0x000091ff] - setStickCenter() (section .text.setStickCenter())
        [0x00009200 to 0x000092cb] - voice_telem_item(unsigned char) (section .text.voice_telem_item(unsigned char))
        [0x000092cc to 0x00009397] - calc_scaler(unsigned char, unsigned char*, unsigned char*) (section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*))
        [0x00009398 to 0x00009463] - A7105_Init() (section .text.A7105_Init())
        [0x00009464 to 0x00009527] - EFile::write(unsigned char*, unsigned char) (section .text.EFile::write(unsigned char*, unsigned char))
        [0x00009528 to 0x000095eb] - Key::input(bool, EnumKeys) (section .text.Key::input(bool, EnumKeys))
        [0x000095ec to 0x000096af] - setupPulses() (section .text.setupPulses())
        [0x000096b0 to 0x0000976f] - audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009770 to 0x0000982f] - menuProcStatistic(unsigned char) (section .text.menuProcStatistic(unsigned char))
        [0x00009830 to 0x000098ef] - menuRXSetup(unsigned char) (section .text.menuRXSetup(unsigned char))
        [0x000098f0 to 0x000099ab] - calcExpo(unsigned char, short) (section .text.calcExpo(unsigned char, short))
        [0x000099ac to 0x00009a63] - menuProcCurve(unsigned char) (section .text.menuProcCurve(unsigned char))
        [0x00009a64 to 0x00009b17] - initAFHDS2A (section .text.initAFHDS2A)
        [0x00009b18 to 0x00009bcb] - indexProcess(unsigned char, MState2*, unsigned char) (section .text.indexProcess(unsigned char, MState2*, unsigned char))
        [0x00009bcc to 0x00009c7b] - editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char))
        [0x00009c7c to 0x00009d2b] - editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009d2c to 0x00009dcf] - EeFsck() (section .text.EeFsck())
        [0x00009dd0 to 0x00009e73] - menuDeleteDupModel(unsigned char) (section .text.menuDeleteDupModel(unsigned char))
        [0x00009e74 to 0x00009f17] - menuRangeBind(unsigned char) (section .text.menuRangeBind(unsigned char))
        [0x00009f18 to 0x00009fbb] - putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009fbc to 0x0000a05f] - executeMenu(unsigned char) (section .text.executeMenu(unsigned char))
        [0x0000a060 to 0x0000a0ff] - drawFunction(unsigned char, unsigned char) (section .text.drawFunction(unsigned char, unsigned char))
        [0x0000a100 to 0x0000a197] - shutdown_crsf_serial_port (section .text.shutdown_crsf_serial_port)
        [0x0000a198 to 0x0000a22b] - SystemInit (section .init.SystemInit)
        [0x0000a22c to 0x0000a2bb] - initAFHDS (section .text.initAFHDS)
        [0x0000a2bc to 0x0000a34b] - checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char))
        [0x0000a34c to 0x0000a3d7] - doMainScreenGrphics() (section .text.doMainScreenGrphics())
        [0x0000a3d8 to 0x0000a463] - refreshDiplay() (section .text.refreshDiplay())
        [0x0000a464 to 0x0000a4ef] - gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char))
        [0x0000a4f0 to 0x0000a577] - drawCurve(unsigned char) (section .text.drawCurve(unsigned char))
        [0x0000a578 to 0x0000a5ff] - keyState(EnumKeys) (section .text.keyState(EnumKeys))
        [0x0000a600 to 0x0000a687] - eeGeneralDefault() (section .text.eeGeneralDefault())
        [0x0000a688 to 0x0000a70f] - putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000a710 to 0x0000a793] - t_voice::voice_process() (section .text.t_voice::voice_process())
        [0x0000a794 to 0x0000a813] - audioQueue::heartbeat() (section .text.audioQueue::heartbeat())
        [0x0000a814 to 0x0000a893] - createCrossfireChannelsFrame(unsigned char*, short*) (section .text.createCrossfireChannelsFrame(unsigned char*, short*))
        [0x0000a894 to 0x0000a913] - set_lpsci_direction(bool) (section .text.set_lpsci_direction(bool))
        [0x0000a914 to 0x0000a98f] - scaleAnalog(short, unsigned char) (section .text.scaleAnalog(short, unsigned char))
        [0x0000a990 to 0x0000aa07] - EFile::read(unsigned char*, unsigned short) (section .text.EFile::read(unsigned char*, unsigned short))
        [0x0000aa08 to 0x0000aa7f] - lcd_vline(unsigned char, unsigned char, signed char) (section .text.lcd_vline(unsigned char, unsigned char, signed char))
        [0x0000aa80 to 0x0000aaf7] - putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char))
        [0x0000aaf8 to 0x0000ab6f] - putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000ab70 to 0x0000abe7] - eeReadGeneral() (section .text.eeReadGeneral())
        [0x0000abe8 to 0x0000ac5b] - submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool) (section .text.submit_and_start_dma_transfer(DMA_Type*, int, unsigned int, unsigned int, unsigned int, bool, bool))
        [0x0000ac5c to 0x0000accf] - get_telemetry_value(unsigned char) (section .text.get_telemetry_value(unsigned char))
        [0x0000acd0 to 0x0000ad43] - getGvarSourceValue(unsigned char) (section .text.getGvarSourceValue(unsigned char))
        [0x0000ad44 to 0x0000adb3] - insertMix(unsigned char, unsigned char) (section .text.insertMix(unsigned char, unsigned char))
        [0x0000adb4 to 0x0000ae23] - getValue(unsigned char) (section .text.getValue(unsigned char))
        [0x0000ae24 to 0x0000ae93] - alertx(char const*, bool) (section .text.alertx(char const*, bool))
        [0x0000ae94 to 0x0000af03] - modelDefaultWrite(unsigned char) (section .text.modelDefaultWrite(unsigned char))
        [0x0000af04 to 0x0000af73] - menuDeleteMix(unsigned char) (section .text.menuDeleteMix(unsigned char))
        [0x0000af74 to 0x0000afe3] - UART2_IRQHandler (section .text.UART2_IRQHandler)
        [0x0000afe4 to 0x0000b04f] - processCrossfireTelemetryData(unsigned char) (section .text.processCrossfireTelemetryData(unsigned char))
        [0x0000b050 to 0x0000b0bb] - SPI0_IRQHandler (section .text.SPI0_IRQHandler)
        [0x0000b0bc to 0x0000b123] - eeDuplicateModel(unsigned char) (section .text.eeDuplicateModel(unsigned char))
        [0x0000b124 to 0x0000b187] - crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char) (section .text.crossfireTelemetryPush(unsigned char, unsigned char*, unsigned char))
        [0x0000b188 to 0x0000b1eb] - A7105_AdjustLOBaseFreq() (section .text.A7105_AdjustLOBaseFreq())
        [0x0000b1ec to 0x0000b24f] - lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000b250 to 0x0000b2b3] - PIND (section .text.PIND)
        [0x0000b2b4 to 0x0000b313] - getADC_osmp (section .text.getADC_osmp)
        [0x0000b314 to 0x0000b373] - eeLoadModelName(unsigned char, char*, unsigned char) (section .text.eeLoadModelName(unsigned char, char*, unsigned char))
        [0x0000b374 to 0x0000b3d3] - setTrimValue(unsigned char, unsigned char, short) (section .text.setTrimValue(unsigned char, unsigned char, short))
        [0x0000b3d4 to 0x0000b433] - TPM0_IRQHandler (section .text.TPM0_IRQHandler)
        [0x0000b434 to 0x0000b493] - PINB (section .text.PINB)
        [0x0000b494 to 0x0000b4ef] - almess(char const*, unsigned char) (section .text.almess(char const*, unsigned char))
        [0x0000b4f0 to 0x0000b54b] - doBackLightVoice(unsigned char) (section .text.doBackLightVoice(unsigned char))
        [0x0000b54c to 0x0000b5a7] - calcStickScroll(unsigned char) (section .text.calcStickScroll(unsigned char))
        [0x0000b5a8 to 0x0000b603] - applyTemplate() (section .text.applyTemplate())
        [0x0000b604 to 0x0000b65f] - DMA0_IRQHandler (section .text.DMA0_IRQHandler)
        [0x0000b660 to 0x0000b6b7] - EFile::closeTrunc() (section .text.EFile::closeTrunc())
        [0x0000b6b8 to 0x0000b70f] - lcd_init() (section .text.lcd_init())
        [0x0000b710 to 0x0000b767] - setMix(unsigned char, unsigned char) (section .text.setMix(unsigned char, unsigned char))
        [0x0000b768 to 0x0000b7bf] - parseDeviceInfoMessage(unsigned char*) (section .text.parseDeviceInfoMessage(unsigned char*))
        [0x0000b7c0 to 0x0000b817] - serialVoiceInit(void (*)(unsigned char*, unsigned char)) (section .text.serialVoiceInit(void (*)(unsigned char*, unsigned char)))
        [0x0000b818 to 0x0000b86b] - dispSignalQality(unsigned char) (section .text.dispSignalQality(unsigned char))
        [0x0000b86c to 0x0000b8bf] - eeWriteGeneral() (section .text.eeWriteGeneral())
        [0x0000b8c0 to 0x0000b913] - putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char))
        [0x0000b914 to 0x0000b967] - PINE (section .text.PINE)
        [0x0000b968 to 0x0000b9b7] - A7105_WriteData(unsigned char, unsigned char) (section .text.A7105_WriteData(unsigned char, unsigned char))
        [0x0000b9b8 to 0x0000ba07] - putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000ba08 to 0x0000ba57] - ISR_TIMER0_COMP_vect (section .text.ISR_TIMER0_COMP_vect)
        [0x0000ba58 to 0x0000baa3] - crsf_send_data (section .text.crsf_send_data)
        [0x0000baa4 to 0x0000baef] - checkTHR() (section .text.checkTHR())
        [0x0000baf0 to 0x0000bb3b] - lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char))
        [0x0000bb3c to 0x0000bb87] - check_backlight_voice() (section .text.check_backlight_voice())
        [0x0000bb88 to 0x0000bbd3] - checkThrottlePosition() (section .text.checkThrottlePosition())
        [0x0000bbd4 to 0x0000bc1f] - setupPulsesCrossfire() (section .text.setupPulsesCrossfire())
        [0x0000bc20 to 0x0000bc6b] - SPI_RADIO_ReceiveBlock (section .text.SPI_RADIO_ReceiveBlock)
        [0x0000bc6c to 0x0000bcb3] - popMenu(bool) (section .text.popMenu(bool))
        [0x0000bcb4 to 0x0000bcfb] - resetElrsMenuVariables() (section .text.resetElrsMenuVariables())
        [0x0000bcfc to 0x0000bd43] - SetStartPulsePol() (section .text.SetStartPulsePol())
        [0x0000bd44 to 0x0000bd8b] - yesNoMenuExit(unsigned char, char const*) (section .text.yesNoMenuExit(unsigned char, char const*))
        [0x0000bd8c to 0x0000bdd3] - _GLOBAL__sub_I_ELRS.cpp (section .text._GLOBAL__sub_I_ELRS.cpp)
        [0x0000bdd4 to 0x0000be1b] - PIT_IRQHandler (section .text.PIT_IRQHandler)
        [0x0000be1c to 0x0000be5f] - start_lpsci_DMA_receive() (section .text.start_lpsci_DMA_receive())
        [0x0000be60 to 0x0000bea3] - eeprom_read_block(void*, void const*, unsigned int) (section .text.eeprom_read_block(void*, void const*, unsigned int))
        [0x0000bea4 to 0x0000bee7] - eeWriteBlockCmp(void const*, unsigned short, unsigned int) (section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int))
        [0x0000bee8 to 0x0000bf2b] - ISR_TIMER1_COMPA_vect (section .text.ISR_TIMER1_COMPA_vect)
        [0x0000bf2c to 0x0000bf6f] - NMI_Handler (section .init)
        [0x0000bf70 to 0x0000bfaf] - EFile::swap(unsigned char, unsigned char) (section .text.EFile::swap(unsigned char, unsigned char))
        [0x0000bfb0 to 0x0000bfef] - audioQueue::getToneLength(unsigned char) (section .text.audioQueue::getToneLength(unsigned char))
        [0x0000bff0 to 0x0000c02f] - processCrossfireTelemetryValue(unsigned char, int) (section .text.processCrossfireTelemetryValue(unsigned char, int))
        [0x0000c030 to 0x0000c06b] - editSlowDelay(unsigned char, unsigned char, unsigned char) (section .text.editSlowDelay(unsigned char, unsigned char, unsigned char))
        [0x0000c06c to 0x0000c0a7] - anaIn(unsigned char) (section .text.anaIn(unsigned char))
        [0x0000c0a8 to 0x0000c0e3] - process_read_dma_data() (section .text.process_read_dma_data())
        [0x0000c0e4 to 0x0000c11f] - stop_dma_receive() (section .text.stop_dma_receive())
        [0x0000c120 to 0x0000c15b] - displayOneSwitch(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char))
        [0x0000c15c to 0x0000c197] - rangeBindAction(unsigned char, unsigned char) (section .text.rangeBindAction(unsigned char, unsigned char))
        [0x0000c198 to 0x0000c1d3] - getRawTrimValue(unsigned char, unsigned char) (section .text.getRawTrimValue(unsigned char, unsigned char))
        [0x0000c1d4 to 0x0000c20f] - EeFsFormat() (section .text.EeFsFormat())
        [0x0000c210 to 0x0000c247] - audioQueue::driver() (section .text.audioQueue::driver())
        [0x0000c248 to 0x0000c27f] - REG(signed char, signed char, signed char) (section .text.REG(signed char, signed char, signed char))
        [0x0000c280 to 0x0000c2b7] - convert_failsafe_ppm(unsigned char) (section .text.convert_failsafe_ppm(unsigned char))
        [0x0000c2b8 to 0x0000c2ef] - lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c2f0 to 0x0000c327] - get_dr_state(unsigned char) (section .text.get_dr_state(unsigned char))
        [0x0000c328 to 0x0000c35f] - resetTimern(unsigned char) (section .text.resetTimern(unsigned char))
        [0x0000c360 to 0x0000c397] - PORTC_PORTD_IRQHandler (section .text.PORTC_PORTD_IRQHandler)
        [0x0000c398 to 0x0000c3cf] - menuProcModelIndex(unsigned char)::n_Strings (section .rodata.menuProcModelIndex(unsigned char)::n_Strings)
        [0x0000c3d0 to 0x0000c407] - [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)] (section .rodata..Lswitch.table.menuProcModelIndex(unsigned char))
        [0x0000c408 to 0x0000c43b] - put_curve(unsigned char, unsigned char, signed char, unsigned char) (section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000c43c to 0x0000c46f] - pushMenu(void (*)(unsigned char)) (section .text.pushMenu(void (*)(unsigned char)))
        [0x0000c470 to 0x0000c4a3] - crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char) (section .text.crossfireTelemetryPush4(unsigned char, unsigned char, unsigned char))
        [0x0000c4a4 to 0x0000c4d7] - crossfireTelemetryPing() (section .text.crossfireTelemetryPing())
        [0x0000c4d8 to 0x0000c50b] - eeLoadModelForBackup(unsigned char) (section .text.eeLoadModelForBackup(unsigned char))
        [0x0000c50c to 0x0000c53f] - lcd_write_bits(unsigned char*, unsigned char) (section .text.lcd_write_bits(unsigned char*, unsigned char))
        [0x0000c540 to 0x0000c573] - getFlightPhase() (section .text.getFlightPhase())
        [0x0000c574 to 0x0000c5a7] - A7105_SetPower() (section .text.A7105_SetPower())
        [0x0000c5a8 to 0x0000c5db] - SPI_RADIO_SendBlock (section .text.SPI_RADIO_SendBlock)
        [0x0000c5dc to 0x0000c60d] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000c60e size 0] - [.rodata.block.tdata.copy] (section .rodata.block.tdata.copy)
        [0x0000c610 to 0x0000c63f] - EFile::create(unsigned char, unsigned char, unsigned short) (section .text.EFile::create(unsigned char, unsigned char, unsigned short))
        [0x0000c640 to 0x0000c66f] - EeFsFree(unsigned char) (section .text.EeFsFree(unsigned char))
        [0x0000c670 to 0x0000c69f] - modelSave(unsigned char) (section .text.modelSave(unsigned char))
        [0x0000c6a0 to 0x0000c6cf] - char2idx(char) (section .text.char2idx(char))
        [0x0000c6d0 to 0x0000c6ff] - EeFsOpen() (section .text.EeFsOpen())
        [0x0000c700 to 0x0000c72f] - eeDirty(unsigned char) (section .text.eeDirty(unsigned char))
        [0x0000c730 to 0x0000c75f] - displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c760 to 0x0000c78f] - A7105_ReadData(unsigned char) (section .text.A7105_ReadData(unsigned char))
        [0x0000c790 to 0x0000c7bb] - SX127xDriver::SX127xDriver() (section .text.SX127xDriver::SX127xDriver())
        [0x0000c7bc to 0x0000c7e7] - dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c7e8 to 0x0000c813] - sendSerialVoiceData(unsigned char*, unsigned int) (section .text.sendSerialVoiceData(unsigned char*, unsigned int))
        [0x0000c814 to 0x0000c83f] - putVoiceQueueLong(unsigned short) (section .text.putVoiceQueueLong(unsigned short))
        [0x0000c840 to 0x0000c86b] - menuMixersLimit(unsigned char) (section .text.menuMixersLimit(unsigned char))
        [0x0000c86c to 0x0000c897] - PING (section .text.PING)
        [0x0000c898 to 0x0000c8c3] - menuProcIndex(unsigned char)::n_Strings (section .rodata.menuProcIndex(unsigned char)::n_Strings)
        [0x0000c8c4 to 0x0000c8ed] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000c8f0 to 0x0000c917] - mDelay (section .text.mDelay)
        [0x0000c918 to 0x0000c93f] - EFile::rm(unsigned char) (section .text.EFile::rm(unsigned char))
        [0x0000c940 to 0x0000c967] - EeFsAlloc() (section .text.EeFsAlloc())
        [0x0000c968 to 0x0000c98f] - putsVolts(unsigned char, unsigned char, short, unsigned char) (section .text.putsVolts(unsigned char, unsigned char, short, unsigned char))
        [0x0000c990 to 0x0000c9b7] - putsVBat(unsigned char, unsigned char, unsigned char) (section .text.putsVBat(unsigned char, unsigned char, unsigned char))
        [0x0000c9b8 to 0x0000c9df] - lcd_plot(unsigned char, unsigned char) (section .text.lcd_plot(unsigned char, unsigned char))
        [0x0000c9e0 to 0x0000ca07] - A7105_AntSwitch() (section .text.A7105_AntSwitch())
        [0x0000ca08 to 0x0000ca2f] - eeWaitComplete() (section .text.eeWaitComplete())
        [0x0000ca30 to 0x0000ca57] - switchDisplay(unsigned char, unsigned char) (section .text.switchDisplay(unsigned char, unsigned char))
        [0x0000ca58 to 0x0000ca7f] - Uart_SendCMD(unsigned char, unsigned char, unsigned short) (section .text.Uart_SendCMD(unsigned char, unsigned char, unsigned short))
        [0x0000ca80 to 0x0000caa7] - startPulses() (section .text.startPulses())
        [0x0000caa8 to 0x0000cacf] - evalOffset(signed char) (section .text.evalOffset(signed char))
        [0x0000cad0 to 0x0000caf7] - Reset_Handler (section .init)
        [0x0000caf8 to 0x0000cb1e] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000cb20 to 0x0000cb43] - EFile::openRd(unsigned char) (section .text.EFile::openRd(unsigned char))
        [0x0000cb44 to 0x0000cb67] - curveAddress(unsigned char) (section .text.curveAddress(unsigned char))
        [0x0000cb68 to 0x0000cb8b] - crsf_init() (section .text.crsf_init())
        [0x0000cb8c to 0x0000cbaf] - ee_waite() (section .text.ee_waite())
        [0x0000cbb0 to 0x0000cbd3] - reachMixerCountLimit() (section .text.reachMixerCountLimit())
        [0x0000cbd4 to 0x0000cbf7] - dispFlightModename(unsigned char, unsigned char, unsigned char) (section .text.dispFlightModename(unsigned char, unsigned char, unsigned char))
        [0x0000cbf8 to 0x0000cc1b] - crsf_action() (section .text.crsf_action())
        [0x0000cc1c to 0x0000cc3f] - evalChkSum() (section .text.evalChkSum())
        [0x0000cc40 to 0x0000cc63] - LCD_DATA (section .text.LCD_DATA)
        [0x0000cc64 to 0x0000cc87] - processCrossfireTelemetryFrame()::power_values (section .rodata.processCrossfireTelemetryFrame()::power_values)
        [0x0000cc88 to 0x0000cca7] - EFile::size() (section .text.EFile::size())
        [0x0000cca8 to 0x0000ccc7] - setVolume(unsigned char) (section .text.setVolume(unsigned char))
        [0x0000ccc8 to 0x0000cce7] - chainMenu(void (*)(unsigned char)) (section .text.chainMenu(void (*)(unsigned char)))
        [0x0000cce8 to 0x0000cd07] - trace() (section .text.trace())
        [0x0000cd08 to 0x0000cd27] - crc8(unsigned char const*, unsigned int) (section .text.crc8(unsigned char const*, unsigned int))
        [0x0000cd28 to 0x0000cd47] - checkCrossfireTelemetryFrameCRC() (section .text.checkCrossfireTelemetryFrameCRC())
        [0x0000cd48 to 0x0000cd67] - processVoiceAlarms() (section .text.processVoiceAlarms())
        [0x0000cd68 to 0x0000cd87] - putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char))
        [0x0000cd88 to 0x0000cda7] - lcdSetRefVolt(unsigned char) (section .text.lcdSetRefVolt(unsigned char))
        [0x0000cda8 to 0x0000cdc7] - backlightKey() (section .text.backlightKey())
        [0x0000cdc8 to 0x0000cde7] - pauseEvents(unsigned char) (section .text.pauseEvents(unsigned char))
        [0x0000cde8 to 0x0000ce07] - menuPressed() (section .text.menuPressed())
        [0x0000ce08 to 0x0000ce27] - EeFsGetFree() (section .text.EeFsGetFree())
        [0x0000ce28 to 0x0000ce47] - SetPRTTimPeriod (section .text.SetPRTTimPeriod)
        [0x0000ce48 to 0x0000ce63] - audioVoiceDefevent(unsigned char, unsigned char) (section .text.audioVoiceDefevent(unsigned char, unsigned char))
        [0x0000ce64 to 0x0000ce7f] - throttleReversed() (section .text.throttleReversed())
        [0x0000ce80 to 0x0000ce9b] - putWarnSwitch(unsigned char, unsigned char) (section .text.putWarnSwitch(unsigned char, unsigned char))
        [0x0000ce9c to 0x0000ceb7] - modeFixValue(unsigned char) (section .text.modeFixValue(unsigned char))
        [0x0000ceb8 to 0x0000ced3] - displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000ced4 to 0x0000ceef] - on_voice_cb(unsigned char*, unsigned char) (section .text.on_voice_cb(unsigned char*, unsigned char))
        [0x0000cef0 to 0x0000cf0b] - killEvents(unsigned char) (section .text.killEvents(unsigned char))
        [0x0000cf0c to 0x0000cf27] - TPM2_IRQHandler (section .text.TPM2_IRQHandler)
        [0x0000cf28 to 0x0000cf43] - TPM1_IRQHandler (section .text.TPM1_IRQHandler)
        [0x0000cf44 to 0x0000cf5f] - EnableGIO (section .text.EnableGIO)
        [0x0000cf60 to 0x0000cf77] - clearKeyEvents() (section .text.clearKeyEvents())
        [0x0000cf78 to 0x0000cf8f] - lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000cf90 to 0x0000cfa7] - putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000cfa8 to 0x0000cfbf] - hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char))
        [0x0000cfc0 to 0x0000cfd7] - ISR_TIMER2_OVF_vect (section .text.ISR_TIMER2_OVF_vect)
        [0x0000cfd8 to 0x0000cfef] - GetChipID (section .text.GetChipID)
        [0x0000cff0 to 0x0000d005] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000d008 to 0x0000d01d] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000d020 to 0x0000d033] - EFile::exists(unsigned char) (section .text.EFile::exists(unsigned char))
        [0x0000d034 to 0x0000d047] - EeFsFlush() (section .text.EeFsFlush())
        [0x0000d048 to 0x0000d05b] - EeFsFlushFreelist() (section .text.EeFsFlushFreelist())
        [0x0000d05c to 0x0000d06f] - lcd_clear() (section .text.lcd_clear())
        [0x0000d070 to 0x0000d083] - idx2char(unsigned char) (section .text.idx2char(unsigned char))
        [0x0000d084 to 0x0000d097] - IS_EXPO_THROTTLE(unsigned char) (section .text.IS_EXPO_THROTTLE(unsigned char))
        [0x0000d098 to 0x0000d0ab] - checkIncDec_u0(short, unsigned char) (section .text.checkIncDec_u0(short, unsigned char))
        [0x0000d0ac to 0x0000d0bf] - checkIncDec_0(signed char, signed char) (section .text.checkIncDec_0(signed char, signed char))
        [0x0000d0c0 to 0x0000d0d3] - audioDefevent(unsigned char) (section .text.audioDefevent(unsigned char))
        [0x0000d0d4 to 0x0000d0e7] - resetTimer1() (section .text.resetTimer1())
        [0x0000d0e8 to 0x0000d0fb] - displayNext() (section .text.displayNext())
        [0x0000d0fc to 0x0000d10f] - clearMixes() (section .text.clearMixes())
        [0x0000d110 to 0x0000d123] - audioEvent(unsigned char, unsigned short) (section .text.audioEvent(unsigned char, unsigned short))
        [0x0000d124 to 0x0000d137] - DisableGIO (section .text.DisableGIO)
        [0x0000d138 to 0x0000d14b] - _start (section .init._start)
        [0x0000d14c to 0x0000d15b] - rw_0 (section .text.rw_0)
        [0x0000d15c to 0x0000d16b] - rs_1 (section .text.rs_1)
        [0x0000d16c to 0x0000d17b] - rs_0 (section .text.rs_0)
        [0x0000d17c to 0x0000d18b] - rd_1 (section .text.rd_1)
        [0x0000d18c to 0x0000d19b] - rd_0 (section .text.rd_0)
        [0x0000d19c to 0x0000d1ab] - crsf_is_sending (section .text.crsf_is_sending)
        [0x0000d1ac to 0x0000d1bb] - CS_STATE(unsigned char) (section .text.CS_STATE(unsigned char))
        [0x0000d1bc to 0x0000d1cb] - lcdSetContrast() (section .text.lcdSetContrast())
        [0x0000d1cc to 0x0000d1db] - checkIncDec_i8(signed char, signed char, signed char) (section .text.checkIncDec_i8(signed char, signed char, signed char))
        [0x0000d1dc to 0x0000d1eb] - mixaddress(unsigned char) (section .text.mixaddress(unsigned char))
        [0x0000d1ec to 0x0000d1fb] - _GLOBAL__sub_I_er9x.cpp (section .text._GLOBAL__sub_I_er9x.cpp)
        [0x0000d1fc to 0x0000d20b] - _GLOBAL__sub_I_SX127x.cpp (section .text._GLOBAL__sub_I_SX127x.cpp)
        [0x0000d20c to 0x0000d21b] - TX_RX_PutVal (section .text.TX_RX_PutVal)
        [0x0000d21c to 0x0000d22b] - GetPPMTimCompareInterruptFlag (section .text.GetPPMTimCompareInterruptFlag)
        [0x0000d22c to 0x0000d23b] - GetPPMOutState (section .text.GetPPMOutState)
        [0x0000d23c to 0x0000d24b] - ClearPPMTimCompareInterruptFlag (section .text.ClearPPMTimCompareInterruptFlag)
        [0x0000d24c to 0x0000d25b] - Buzzer_SetVal (section .text.Buzzer_SetVal)
        [0x0000d25c to 0x0000d26b] - Buzzer_ClrVal (section .text.Buzzer_ClrVal)
        [0x0000d26c to 0x0000d27b] - [.rodata..Lswitch.table.SetPRTTimPeriod] (section .rodata..Lswitch.table.SetPRTTimPeriod)
        [0x0000d27c to 0x0000d287] - rst_1 (section .text.rst_1)
        [0x0000d288 to 0x0000d293] - rst_0 (section .text.rst_0)
        [0x0000d294 to 0x0000d29f] - cs_0 (section .text.cs_0)
        [0x0000d2a0 to 0x0000d2ab] - backlight_on (section .text.backlight_on)
        [0x0000d2ac to 0x0000d2b7] - backlight_off (section .text.backlight_off)
        [0x0000d2b8 to 0x0000d2c3] - a7105_csn_on (section .text.a7105_csn_on)
        [0x0000d2c4 to 0x0000d2cf] - a7105_csn_off (section .text.a7105_csn_off)
        [0x0000d2d0 to 0x0000d2db] - SX127xHal::SX127xHal() (section .text.SX127xHal::SX127xHal())
        [0x0000d2dc to 0x0000d2e7] - get_tmr10ms() (section .text.get_tmr10ms())
        [0x0000d2e8 to 0x0000d2f3] - SetPPMTimCompare (section .text.SetPPMTimCompare)
        [0x0000d2f4 to 0x0000d2ff] - RF1_SetVal (section .text.RF1_SetVal)
        [0x0000d300 to 0x0000d30b] - RF1_ClrVal (section .text.RF1_ClrVal)
        [0x0000d30c to 0x0000d317] - RF0_SetVal (section .text.RF0_SetVal)
        [0x0000d318 to 0x0000d323] - RF0_ClrVal (section .text.RF0_ClrVal)
        [0x0000d324 to 0x0000d32f] - GetPPMTimCompare (section .text.GetPPMTimCompare)
        [0x0000d330 to 0x0000d33b] - EnablePRTTim (section .text.EnablePRTTim)
        [0x0000d33c to 0x0000d347] - EnablePPMTim (section .text.EnablePPMTim)
        [0x0000d348 to 0x0000d353] - EnablePPMOut (section .text.EnablePPMOut)
        [0x0000d354 to 0x0000d35f] - DisablePRTTim (section .text.DisablePRTTim)
        [0x0000d360 to 0x0000d36b] - DisablePPMOut (section .text.DisablePPMOut)
        [0x0000d36c to 0x0000d461] - voice_numeric(short, unsigned char, unsigned char) (section .text.voice_numeric(short, unsigned char, unsigned char))
        [0x0000d462 to 0x0000d541] - EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char))
        [0x0000d542 to 0x0000d5c5] - putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char))
        [0x0000d5c6 to 0x0000d639] - intpol(short, unsigned char) (section .text.intpol(short, unsigned char))
        [0x0000d63a to 0x0000d6ab] - EFile::readRlc(unsigned char*, unsigned short) (section .text.EFile::readRlc(unsigned char*, unsigned short))
        [0x0000d6ac to 0x0000d717] - displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char))
        [0x0000d718 to 0x0000d771] - telltale(unsigned char, signed char, signed char) (section .text.telltale(unsigned char, signed char, signed char))
        [0x0000d772 to 0x0000d7bb] - lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d7bc to 0x0000d801] - lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d802 to 0x0000d843] - getTrimFlightPhase(unsigned char, unsigned char) (section .text.getTrimFlightPhase(unsigned char, unsigned char))
        [0x0000d844 to 0x0000d885] - lcd_outhex4(unsigned char, unsigned char, unsigned short) (section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short))
        [0x0000d886 to 0x0000d8c5] - __aeabi_idiv (section .text.libc.__aeabi_idiv)
        [0x0000d8c6 to 0x0000d903] - displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char))
        [0x0000d904 to 0x0000d93f] - expo(short, short) (section .text.expo(short, short))
        [0x0000d940 to 0x0000d977] - __aeabi_uidiv (section .text.libc.__aeabi_uidiv)
        [0x0000d978 to 0x0000d9af] - edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char))
        [0x0000d9b0 to 0x0000d9e1] - lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000d9e2 to 0x0000da0f] - memcmp (section .text.libc.memcmp)
        [0x0000da10 to 0x0000da3d] - GENERIC_CRC14::GENERIC_CRC14(unsigned short) (section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short))
        [0x0000da3e to 0x0000da6b] - putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000da6c to 0x0000da97] - A7105_WriteID(unsigned int) (section .text.A7105_WriteID(unsigned int))
        [0x0000da98 to 0x0000dac3] - A7105_ReadReg(unsigned char) (section .text.A7105_ReadReg(unsigned char))
        [0x0000dac4 to 0x0000daed] - div (section .text.libc.div)
        [0x0000daee to 0x0000db17] - lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000db18 to 0x0000db3f] - doVoiceAlarmSource(t_voiceAlarm*) (section .text.doVoiceAlarmSource(t_voiceAlarm*))
        [0x0000db40 to 0x0000db67] - A7105_Reset() (section .text.A7105_Reset())
        [0x0000db68 to 0x0000db8d] - lcd_puts_Pskip(unsigned char, char const*, unsigned char) (section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char))
        [0x0000db8e to 0x0000dbb1] - DoSum(unsigned char*, unsigned char) (section .text.DoSum(unsigned char*, unsigned char))
        [0x0000dbb2 to 0x0000dbd5] - scalerDecimal(unsigned char, unsigned char, unsigned char) (section .text.scalerDecimal(unsigned char, unsigned char, unsigned char))
        [0x0000dbd6 to 0x0000dbf7] - __aeabi_memmove (section .text.libc.__aeabi_memmove)
        [0x0000dbf8 to 0x0000dc19] - expou(unsigned short, unsigned short) (section .text.expou(unsigned short, unsigned short))
        [0x0000dc1a to 0x0000dc3b] - getCurrentSwitchStates() (section .text.getCurrentSwitchStates())
        [0x0000dc3c to 0x0000dc5b] - lcdSendCtl(unsigned char) (section .text.lcdSendCtl(unsigned char))
        [0x0000dc5c to 0x0000dc7b] - stickMoveValue() (section .text.stickMoveValue())
        [0x0000dc7c to 0x0000dc99] - __aeabi_llsr (section .text.libc.__aeabi_llsr)
        [0x0000dc9a to 0x0000dcb7] - __aeabi_llsl (section .text.libc.__aeabi_llsl)
        [0x0000dcb8 to 0x0000dcd5] - A7105_WriteReg(unsigned char, unsigned char) (section .text.A7105_WriteReg(unsigned char, unsigned char))
        [0x0000dcd6 to 0x0000dcf1] - onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000dcf2 to 0x0000dd0d] - validateName(char*, unsigned char) (section .text.validateName(char*, unsigned char))
        [0x0000dd0e to 0x0000dd29] - voiceMinutes(short) (section .text.voiceMinutes(short))
        [0x0000dd2a to 0x0000dd45] - A7105_Strobe(unsigned char) (section .text.A7105_Strobe(unsigned char))
        [0x0000dd46 to 0x0000dd5f] - lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000dd60 to 0x0000dd77] - StubbornSender::ResetState() (section .text.StubbornSender::ResetState())
        [0x0000dd78 to 0x0000dd8f] - EeFsRead(unsigned char, unsigned char) (section .text.EeFsRead(unsigned char, unsigned char))
        [0x0000dd90 to 0x0000dda5] - EeFsSetLink(unsigned char, unsigned char) (section .text.EeFsSetLink(unsigned char, unsigned char))
        [0x0000dda6 to 0x0000ddbb] - gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000ddbc to 0x0000ddd1] - calc100toRESX(signed char) (section .text.calc100toRESX(signed char))
        [0x0000ddd2 to 0x0000dde5] - __aeabi_memclr (section .text.libc.__aeabi_memclr)
        [0x0000dde6 to 0x0000ddf9] - StubbornReceiver::StubbornReceiver(unsigned char) (section .text.StubbornReceiver::StubbornReceiver(unsigned char))
        [0x0000ddfa to 0x0000de0d] - setNameP(char*, char const*) (section .text.setNameP(char*, char const*))
        [0x0000de0e to 0x0000de21] - lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*))
        [0x0000de22 to 0x0000de35] - lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000de36 to 0x0000de47] - onoffItem(unsigned char, unsigned char, unsigned char) (section .text.onoffItem(unsigned char, unsigned char, unsigned char))
        [0x0000de48 to 0x0000de59] - offonItem(unsigned char, unsigned char, unsigned char) (section .text.offonItem(unsigned char, unsigned char, unsigned char))
        [0x0000de5a to 0x0000de6b] - offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000de6c to 0x0000de7d] - putc_0_1(unsigned char, unsigned char, unsigned char) (section .text.putc_0_1(unsigned char, unsigned char, unsigned char))
        [0x0000de7e to 0x0000de8d] - __aeabi_uidivmod (section .text.libc.__aeabi_uidivmod)
        [0x0000de8e to 0x0000de9d] - putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000de9e to 0x0000dead] - TITLEP(char const*) (section .text.TITLEP(char const*))
        [0x0000deae to 0x0000debd] - lcd_puts_Pleft(unsigned char, char const*) (section .text.lcd_puts_Pleft(unsigned char, char const*))
        [0x0000debe to 0x0000decd] - calc1000toRESX(short) (section .text.calc1000toRESX(short))
        [0x0000dece to 0x0000dedd] - putsTimeNoAtt(unsigned char, unsigned char, short) (section .text.putsTimeNoAtt(unsigned char, unsigned char, short))
        [0x0000dede to 0x0000deed] - lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char))
        [0x0000deee to 0x0000defd] - getTrimValue(unsigned char, unsigned char) (section .text.getTrimValue(unsigned char, unsigned char))
        [0x0000defe to 0x0000df0d] - lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000df0e to 0x0000df1d] - A7105_Sleep() (section .text.A7105_Sleep())
        [0x0000df1e to 0x0000df2b] - main (section .text.main)
        [0x0000df2c to 0x0000df39] - strlen (section .text.libc.strlen)
        [0x0000df3a to 0x0000df47] - memcpy (section .text.libc.memcpy)
        [0x0000df48 to 0x0000df55] - __aeabi_idivmod (section .text.libc.__aeabi_idivmod)
        [0x0000df56 to 0x0000df63] - StubbornSender::StubbornSender(unsigned char) (section .text.StubbornSender::StubbornSender(unsigned char))
        [0x0000df64 to 0x0000df71] - message(char const*) (section .text.message(char const*))
        [0x0000df72 to 0x0000df7f] - keyDown() (section .text.keyDown())
        [0x0000df80 to 0x0000df8d] - putVoiceQueueUpper(unsigned char) (section .text.putVoiceQueueUpper(unsigned char))
        [0x0000df8e to 0x0000df9b] - REG100_100(signed char) (section .text.REG100_100(signed char))
        [0x0000df9c to 0x0000dfa7] - switchPosition(unsigned char) (section .text.switchPosition(unsigned char))
        [0x0000dfa8 to 0x0000dfb3] - eeModelExists(unsigned char) (section .text.eeModelExists(unsigned char))
        [0x0000dfb4 to 0x0000dfbf] - getSwitch00(signed char) (section .text.getSwitch00(signed char))
        [0x0000dfc0 to 0x0000dfc9] - EeFsGetLink(unsigned char) (section .text.EeFsGetLink(unsigned char))
        [0x0000dfca to 0x0000dfd3] - lcd_hline(unsigned char, unsigned char, signed char) (section .text.lcd_hline(unsigned char, unsigned char, signed char))
        [0x0000dfd4 to 0x0000dfdd] - lcd_putc(unsigned char, unsigned char, char) (section .text.lcd_putc(unsigned char, unsigned char, char))
        [0x0000dfde to 0x0000dfe7] - alert(char const*) (section .text.alert(char const*))
        [0x0000dfe8 to 0x0000dff1] - resetTimer2() (section .text.resetTimer2())
        [0x0000dff2 to 0x0000dffb] - checkIncDec(signed char, signed char, signed char, unsigned char) (section .text.checkIncDec(signed char, signed char, signed char, unsigned char))
        [0x0000dffc to 0x0000e005] - lcd_puts_P(unsigned char, unsigned char, char const*) (section .text.lcd_puts_P(unsigned char, unsigned char, char const*))
        [0x0000e006 to 0x0000e00f] - lcd_outdez(unsigned char, unsigned char, short) (section .text.lcd_outdez(unsigned char, unsigned char, short))
        [0x0000e010 to 0x0000e017] - audioQueue::busy() (section .text.audioQueue::busy())
        [0x0000e018 to 0x0000e01f] - A7105_SetTxRxMode(unsigned char) (section .text.A7105_SetTxRxMode(unsigned char))
        [0x0000e020 to 0x0000e027] - putVoiceQueue(unsigned char) (section .text.putVoiceQueue(unsigned char))
        [0x0000e028 to 0x0000e02f] - crsf_shutdown() (section .text.crsf_shutdown())
        [0x0000e030 to 0x0000e593] - font_dblsize (section .rodata.font_dblsize)
        [0x0000e594 to 0x0000e782] - font (section .rodata.font)
        [0x0000e783 to 0x0000e882] - crc8tab (section .rodata.crc8tab)
        [0x0000e883 to 0x0000e970] - Str_telemItems (section .rodata.Str_telemItems)
        [0x0000e971 to 0x0000ea16] - Str_Chans_Gv (section .rodata.Str_Chans_Gv)
        [0x0000ea17 to 0x0000ea93] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000ea94 to 0x0000eb05] - Str_Cswitch (section .rodata.Str_Cswitch)
        [0x0000eb06 to 0x0000eb67] - Str_Sounds (section .rodata.Str_Sounds)
        [0x0000eb68 to 0x0000ebbf] - AFHDS2A_tel (section .rodata.AFHDS2A_tel)
        [0x0000ebc0 to 0x0000ec11] - [.rodata..L.str.51] (section .rodata..L.str.51)
        [0x0000ec12 to 0x0000ec5d] - [.rodata..L.str.45] (section .rodata..L.str.45)
        [0x0000ec5e to 0x0000eca8] - sticks (section .rodata.sticks)
        [0x0000eca9 to 0x0000ecf3] - [.rodata..L.str.110] (section .rodata..L.str.110)
        [0x0000ecf4 to 0x0000ed3d] - Curve_Str (section .rodata.Curve_Str)
        [0x0000ed3e to 0x0000ed84] - [.rodata..L.str.105] (section .rodata..L.str.105)
        [0x0000ed85 to 0x0000edc7] - s_charTab (section .rodata.s_charTab)
        [0x0000edc8 to 0x0000ee08] - Str_Switches (section .rodata.Str_Switches)
        [0x0000ee09 to 0x0000ee49] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000ee4a to 0x0000ee88] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000ee89 to 0x0000eec2] - Str_Main_Popup (section .rodata.Str_Main_Popup)
        [0x0000eec3 to 0x0000eefc] - TelemIndex (section .rodata.TelemIndex)
        [0x0000eefd to 0x0000ef32] - [.rodata..L.str.48] (section .rodata..L.str.48)
        [0x0000ef33 to 0x0000ef67] - [.rodata..L.str.103] (section .rodata..L.str.103)
        [0x0000ef68 to 0x0000ef9b] - [.rodata..L.str.107] (section .rodata..L.str.107)
        [0x0000ef9c to 0x0000efcd] - AFHDS_A7105_regs (section .rodata.AFHDS_A7105_regs)
        [0x0000efce to 0x0000efff] - AFHDS2A_A7105_regs (section .rodata.AFHDS2A_A7105_regs)
        [0x0000f000 to 0x0000f031] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000f032 to 0x0000f062] - Stamps (section .rodata.Stamps)
        [0x0000f063 to 0x0000f090] - [.rodata..L.str.50] (section .rodata..L.str.50)
        [0x0000f091 to 0x0000f0be] - [.rodata..L.str.47] (section .rodata..L.str.47)
        [0x0000f0bf to 0x0000f0ec] - [.rodata..L.str.16] (section .rodata..L.str.16)
        [0x0000f0ed to 0x0000f117] - [.rodata..L.str.92] (section .rodata..L.str.92)
        [0x0000f118 to 0x0000f142] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000f143 to 0x0000f16d] - [.rodata..L.str.115] (section .rodata..L.str.115)
        [0x0000f16e to 0x0000f197] - UnitsString (section .rodata.UnitsString)
        [0x0000f198 to 0x0000f1c0] - Str_Gv_Source (section .rodata.Str_Gv_Source)
        [0x0000f1c1 to 0x0000f1e9] - [.rodata..L.str.70] (section .rodata..L.str.70)
        [0x0000f1ea to 0x0000f211] - [.rodata..L.str.46] (section .rodata..L.str.46)
        [0x0000f212 to 0x0000f238] - MixPopList (section .rodata.MixPopList)
        [0x0000f239 to 0x0000f25e] - ModelPopList (section .rodata.ModelPopList)
        [0x0000f25f to 0x0000f284] - [.rodata..L.str.98] (section .rodata..L.str.98)
        [0x0000f285 to 0x0000f2a9] - [.rodata..L.str.71] (section .rodata..L.str.71)
        [0x0000f2aa to 0x0000f2ce] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f2cf to 0x0000f2f3] - [.rodata..L.str.101] (section .rodata..L.str.101)
        [0x0000f2f4 to 0x0000f315] - [.rodata..L.str.108] (section .rodata..L.str.108)
        [0x0000f316 to 0x0000f336] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f337 to 0x0000f356] - AFHDS_tx_channels (section .rodata.AFHDS_tx_channels)
        [0x0000f357 to 0x0000f376] - [.rodata..L.str.74] (section .rodata..L.str.74)
        [0x0000f377 to 0x0000f396] - [.rodata..L.str.57] (section .rodata..L.str.57)
        [0x0000f397 to 0x0000f3b6] - [.rodata..L.str.113] (section .rodata..L.str.113)
        [0x0000f3b7 to 0x0000f3d4] - SW_3_IDX (section .rodata.SW_3_IDX)
        [0x0000f3d5 to 0x0000f3f2] - idx_to_afhds2a (section .rodata.idx_to_afhds2a)
        [0x0000f3f3 to 0x0000f410] - [.rodata..L.str.93] (section .rodata..L.str.93)
        [0x0000f411 to 0x0000f42e] - [.rodata..L.str.27] (section .rodata..L.str.27)
        [0x0000f42f to 0x0000f44a] - [.rodata..L.str.15] (section .rodata..L.str.15)
        [0x0000f44b to 0x0000f466] - [.rodata..L.str.104] (section .rodata..L.str.104)
        [0x0000f467 to 0x0000f481] - [.rodata..L.str.85] (section .rodata..L.str.85)
        [0x0000f482 to 0x0000f49b] - [.rodata..L.str.53] (section .rodata..L.str.53)
        [0x0000f49c to 0x0000f4b4] - [.rodata..L.str.17] (section .rodata..L.str.17)
        [0x0000f4b5 to 0x0000f4cc] - bchout_ar (section .rodata.bchout_ar)
        [0x0000f4cd to 0x0000f4e4] - [.rodata..L.str.116] (section .rodata..L.str.116)
        [0x0000f4e5 to 0x0000f4fc] - [.rodata..L.str.111] (section .rodata..L.str.111)
        [0x0000f4fd to 0x0000f513] - [.rodata..L.str.35] (section .rodata..L.str.35)
        [0x0000f514 to 0x0000f529] - Str_On_Off_Both (section .rodata.Str_On_Off_Both)
        [0x0000f52a to 0x0000f53f] - [.rodata..L.str.77] (section .rodata..L.str.77)
        [0x0000f540 to 0x0000f555] - [.rodata..L.str.75] (section .rodata..L.str.75)
        [0x0000f556 to 0x0000f56b] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f56c to 0x0000f580] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f581 to 0x0000f594] - [.rodata..L.str.43] (section .rodata..L.str.43)
        [0x0000f595 to 0x0000f5a8] - [.rodata..L.str.100] (section .rodata..L.str.100)
        [0x0000f5a9 to 0x0000f5bb] - [.rodata..L.str.34] (section .rodata..L.str.34)
        [0x0000f5bc to 0x0000f5ce] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f5cf to 0x0000f5e0] - modi12x3 (section .rodata.modi12x3)
        [0x0000f5e1 to 0x0000f5f2] - [.rodata..L.str.68] (section .rodata..L.str.68)
        [0x0000f5f3 to 0x0000f604] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f605 to 0x0000f616] - [.rodata..L.str.25] (section .rodata..L.str.25)
        [0x0000f617 to 0x0000f628] - [.rodata..L.str.23] (section .rodata..L.str.23)
        [0x0000f629 to 0x0000f639] - menuWhenDone (section .rodata.menuWhenDone)
        [0x0000f63a to 0x0000f64a] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f64b to 0x0000f65b] - [.rodata..L.str.66] (section .rodata..L.str.66)
        [0x0000f65c to 0x0000f66c] - [.rodata..L.str.49] (section .rodata..L.str.49)
        [0x0000f66d to 0x0000f67d] - [.rodata..L.str.40] (section .rodata..L.str.40)
        [0x0000f67e to 0x0000f68e] - [.rodata..L.str.18] (section .rodata..L.str.18)
        [0x0000f68f to 0x0000f69f] - [.rodata..L.str.119] (section .rodata..L.str.119)
        [0x0000f6a0 to 0x0000f6b0] - [.rodata..L.str.117] (section .rodata..L.str.117)
        [0x0000f6b1 to 0x0000f6c1] - [.rodata..L.str.102] (section .rodata..L.str.102)
        [0x0000f6c2 to 0x0000f6d1] - stickScramble (section .rodata.stickScramble)
        [0x0000f6d2 to 0x0000f6e1] - Str_EEPROM_Overflow (section .rodata.Str_EEPROM_Overflow)
        [0x0000f6e2 to 0x0000f6f1] - [.rodata..L.str.73] (section .rodata..L.str.73)
        [0x0000f6f2 to 0x0000f701] - [.rodata..L.str.61] (section .rodata..L.str.61)
        [0x0000f702 to 0x0000f711] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000f712 to 0x0000f721] - [.rodata..L.str.21] (section .rodata..L.str.21)
        [0x0000f722 to 0x0000f731] - [.rodata..L.str.121] (section .rodata..L.str.121)
        [0x0000f732 to 0x0000f741] - [.rodata..L.str.120] (section .rodata..L.str.120)
        [0x0000f742 to 0x0000f751] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f752 to 0x0000f761] - [.rodata..L.str.106] (section .rodata..L.str.106)
        [0x0000f762 to 0x0000f770] - Str_Beep_Countdown (section .rodata.Str_Beep_Countdown)
        [0x0000f771 to 0x0000f77f] - csTypeTable (section .rodata.csTypeTable)
        [0x0000f780 to 0x0000f78e] - [.rodata..L.str.95] (section .rodata..L.str.95)
        [0x0000f78f to 0x0000f79d] - [.rodata..L.str.89] (section .rodata..L.str.89)
        [0x0000f79e to 0x0000f7ac] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f7ad to 0x0000f7bb] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f7bc to 0x0000f7ca] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f7cb to 0x0000f7d9] - [.rodata..L.str.114] (section .rodata..L.str.114)
        [0x0000f7da to 0x0000f7e8] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000f7e9 to 0x0000f7f6] - [.rodata..L.str.99] (section .rodata..L.str.99)
        [0x0000f7f7 to 0x0000f804] - [.rodata..L.str.86] (section .rodata..L.str.86)
        [0x0000f805 to 0x0000f812] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f813 to 0x0000f820] - [.rodata..L.str.67] (section .rodata..L.str.67)
        [0x0000f821 to 0x0000f82e] - [.rodata..L.str.52] (section .rodata..L.str.52)
        [0x0000f82f to 0x0000f83c] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f83d to 0x0000f849] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f84a to 0x0000f856] - [.rodata..L.str.62] (section .rodata..L.str.62)
        [0x0000f857 to 0x0000f863] - [.rodata..L.str.22] (section .rodata..L.str.22)
        [0x0000f864 to 0x0000f870] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f871 to 0x0000f87c] - Lcdinit (section .rodata.Lcdinit)
        [0x0000f87d to 0x0000f888] - Str_minute_Beep (section .rodata.Str_minute_Beep)
        [0x0000f889 to 0x0000f894] - Str_Calibration (section .rodata.Str_Calibration)
        [0x0000f895 to 0x0000f8a0] - Str_AudioHaptic (section .rodata.Str_AudioHaptic)
        [0x0000f8a1 to 0x0000f8ac] - [.rodata..L.str.76] (section .rodata..L.str.76)
        [0x0000f8ad to 0x0000f8b8] - [.rodata..L.str.69] (section .rodata..L.str.69)
        [0x0000f8b9 to 0x0000f8c4] - [.rodata..L.str.55] (section .rodata..L.str.55)
        [0x0000f8c5 to 0x0000f8d0] - [.rodata..L.str.19] (section .rodata..L.str.19)
        [0x0000f8d1 to 0x0000f8dc] - [.rodata..L.str.112] (section .rodata..L.str.112)
        [0x0000f8dd to 0x0000f8e7] - Str_heli_setup (section .rodata.Str_heli_setup)
        [0x0000f8e8 to 0x0000f8f2] - Str_Cswitches (section .rodata.Str_Cswitches)
        [0x0000f8f3 to 0x0000f8fd] - Str_Globals (section .rodata.Str_Globals)
        [0x0000f8fe to 0x0000f908] - Str_Safety (section .rodata.Str_Safety)
        [0x0000f909 to 0x0000f913] - [.rodata..L.str.90] (section .rodata..L.str.90)
        [0x0000f914 to 0x0000f91e] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000f91f to 0x0000f929] - [.rodata..L.str.78] (section .rodata..L.str.78)
        [0x0000f92a to 0x0000f934] - [.rodata..L.str.63] (section .rodata..L.str.63)
        [0x0000f935 to 0x0000f93f] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000f940 to 0x0000f94a] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f94b to 0x0000f954] - Str_Telemetry (section .rodata.Str_Telemetry)
        [0x0000f955 to 0x0000f95e] - Str_DiagSwtch (section .rodata.Str_DiagSwtch)
        [0x0000f95f to 0x0000f968] - Str_TRE012AG (section .rodata.Str_TRE012AG)
        [0x0000f969 to 0x0000f972] - [.rodata..L.str.96] (section .rodata..L.str.96)
        [0x0000f973 to 0x0000f97c] - [.rodata..L.str.80] (section .rodata..L.str.80)
        [0x0000f97d to 0x0000f986] - [.rodata..L.str.54] (section .rodata..L.str.54)
        [0x0000f987 to 0x0000f990] - [.rodata..L.str.29] (section .rodata..L.str.29)
        [0x0000f991 to 0x0000f99a] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000f99b to 0x0000f9a4] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f9a5 to 0x0000f9ad] - Str_Protocol (section .rodata.Str_Protocol)
        [0x0000f9ae to 0x0000f9b6] - Str_Hardware (section .rodata.Str_Hardware)
        [0x0000f9b7 to 0x0000f9bf] - Str_Controls (section .rodata.Str_Controls)
        [0x0000f9c0 to 0x0000f9c8] - [.rodata..L.str.97] (section .rodata..L.str.97)
        [0x0000f9c9 to 0x0000f9d1] - [.rodata..L.str.88] (section .rodata..L.str.88)
        [0x0000f9d2 to 0x0000f9da] - [.rodata..L.str.87] (section .rodata..L.str.87)
        [0x0000f9db to 0x0000f9e3] - [.rodata..L.str.83] (section .rodata..L.str.83)
        [0x0000f9e4 to 0x0000f9ec] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f9ed to 0x0000f9f5] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f9f6 to 0x0000f9fe] - [.rodata..L.str.44] (section .rodata..L.str.44)
        [0x0000f9ff to 0x0000fa07] - [.rodata..L.str.33] (section .rodata..L.str.33)
        [0x0000fa08 to 0x0000fa10] - [.rodata..L.str.30] (section .rodata..L.str.30)
        [0x0000fa11 to 0x0000fa19] - [.rodata..L.str.24] (section .rodata..L.str.24)
        [0x0000fa1a to 0x0000fa21] - per10ms()::crossTrim (section .rodata.per10ms()::crossTrim)
        [0x0000fa22 to 0x0000fa29] - UnitsText (section .rodata.UnitsText)
        [0x0000fa2a to 0x0000fa31] - _bitmask (section .rodata._bitmask)
        [0x0000fa32 to 0x0000fa39] - Str_Expo (section .rodata.Str_Expo)
        [0x0000fa3a to 0x0000fa41] - rate (section .rodata.rate)
        [0x0000fa42 to 0x0000fa49] - Str_Version (section .rodata.Str_Version)
        [0x0000fa4a to 0x0000fa51] - Str_Trainer (section .rodata.Str_Trainer)
        [0x0000fa52 to 0x0000fa59] - Str_General (section .rodata.Str_General)
        [0x0000fa5a to 0x0000fa61] - Str_Display (section .rodata.Str_Display)
        [0x0000fa62 to 0x0000fa69] - Str_DiagAna (section .rodata.Str_DiagAna)
        [0x0000fa6a to 0x0000fa71] - UnitsVoice (section .rodata.UnitsVoice)
        [0x0000fa72 to 0x0000fa79] - [.rodata..L.str.84] (section .rodata..L.str.84)
        [0x0000fa7a to 0x0000fa81] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000fa82 to 0x0000fa89] - [.rodata..L.str.65] (section .rodata..L.str.65)
        [0x0000fa8a to 0x0000fa91] - [.rodata..L.str.58] (section .rodata..L.str.58)
        [0x0000fa92 to 0x0000fa99] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000fa9a to 0x0000faa1] - [.rodata..L.str.26] (section .rodata..L.str.26)
        [0x0000faa2 to 0x0000faa9] - [.rodata..L.str.109] (section .rodata..L.str.109)
        [0x0000faaa to 0x0000fab0] - Str_Alert (section .rodata.Str_Alert)
        [0x0000fab1 to 0x0000fab7] - ChannelToPin (section .rodata.ChannelToPin)
        [0x0000fab8 to 0x0000fabe] - Str_limits (section .rodata.Str_limits)
        [0x0000fabf to 0x0000fac5] - Str_Curves (section .rodata.Str_Curves)
        [0x0000fac6 to 0x0000facc] - Str_Alarms (section .rodata.Str_Alarms)
        [0x0000facd to 0x0000fad3] - [.rodata..L.str.79] (section .rodata..L.str.79)
        [0x0000fad4 to 0x0000fada] - [.rodata..L.str.60] (section .rodata..L.str.60)
        [0x0000fadb to 0x0000fae1] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000fae2 to 0x0000fae8] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000fae9 to 0x0000faee] - Str_Timer (section .rodata.Str_Timer)
        [0x0000faef to 0x0000faf4] - Str_Modes (section .rodata.Str_Modes)
        [0x0000faf5 to 0x0000fafa] - Str_Mixer (section .rodata.Str_Mixer)
        [0x0000fafb to 0x0000fb00] - Str_Curve (section .rodata.Str_Curve)
        [0x0000fb01 to 0x0000fb06] - Str_1_RETA (section .rodata.Str_1_RETA)
        [0x0000fb07 to 0x0000fb0c] - [.rodata..L.str.91] (section .rodata..L.str.91)
        [0x0000fb0d to 0x0000fb12] - [.rodata..L.str.81] (section .rodata..L.str.81)
        [0x0000fb13 to 0x0000fb18] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000fb19 to 0x0000fb1e] - [.rodata..L.str.31] (section .rodata..L.str.31)
        [0x0000fb1f to 0x0000fb24] - [.rodata..L.str.14] (section .rodata..L.str.14)
        [0x0000fb25 to 0x0000fb2a] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000fb2b to 0x0000fb2f] - Str_Name (section .rodata.Str_Name)
        [0x0000fb30 to 0x0000fb34] - Str_Hyphens (section .rodata.Str_Hyphens)
        [0x0000fb35 to 0x0000fb39] - [.rodata..L.str.72] (section .rodata..L.str.72)
        [0x0000fb3a to 0x0000fb3e] - [.rodata..L.str.56] (section .rodata..L.str.56)
        [0x0000fb3f to 0x0000fb43] - [.rodata..L.str.32] (section .rodata..L.str.32)
        [0x0000fb44 to 0x0000fb48] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000fb49 to 0x0000fb4d] - [.rodata..L.str.20] (section .rodata..L.str.20)
        [0x0000fb4e to 0x0000fb51] - Str_ON (section .rodata.Str_ON)
        [0x0000fb52 to 0x0000fb55] - Str_OFF (section .rodata.Str_OFF)
        [0x0000fb56 to 0x0000fb59] - [.rodata..L.str.94] (section .rodata..L.str.94)
        [0x0000fb5a to 0x0000fb5d] - [.rodata..L.str.64] (section .rodata..L.str.64)
        [0x0000fb5e to 0x0000fb61] - [.rodata..L.str.59] (section .rodata..L.str.59)
        [0x0000fb62 to 0x0000fb65] - [.rodata..L.str.39] (section .rodata..L.str.39)
        [0x0000fb66 to 0x0000fb69] - [.rodata..L.str.38] (section .rodata..L.str.38)
        [0x0000fb6a to 0x0000fb6d] - [.rodata..L.str.28] (section .rodata..L.str.28)
        [0x0000fb6e to 0x0000fb71] - [.rodata..L.str.118] (section .rodata..L.str.118)
        [0x0000fb72 to 0x0000fb75] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000fb76 to 0x0000fb78] - Str_SC (section .rodata.Str_SC)
        [0x0000fb79 to 0x0000fb7b] - Str_GV (section .rodata.Str_GV)
        [0x0000fb7c to 0x0000fb7e] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000fb7f to 0x0000fb81] - [.rodata..L.str.82] (section .rodata..L.str.82)
        [0x0000fb82 to 0x0000fb84] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000fb85 to 0x0000fb87] - [.rodata..L.str.42] (section .rodata..L.str.42)
        [0x0000fb88 to 0x0000fb8a] - [.rodata..L.str.41] (section .rodata..L.str.41)
        [0x0000fb8b to 0x0000fb8d] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000fb90 to 0x0000fb93] - [.init_array] (section .init_array)
        [0x0000fb94 to 0x0000fb97] - [.init_array] (section .init_array)
        [0x0000fb98 to 0x0000fb9b] - [.init_array] (section .init_array)
        [0x0000fb9c to 0x0000fbbf] - __SEGGER_init_table__ (section .segger.init.table)
        [0x0000fbc0 to 0x0000fbe1] - __SEGGER_init_data__ (section .segger.init.data)
        [0x0000fbe4 to 0x0000fc03] - __SEGGER_init_ctors (section .segger.init.__SEGGER_init_ctors)
        [0x0000fc04 to 0x0000fc17] - __SEGGER_init_copy (section .segger.init.__SEGGER_init_copy)
        [0x0000fc18 to 0x0000fc29] - __SEGGER_init_zero (section .segger.init.__SEGGER_init_zero)
      Start program header at 0x1ffff800
        [0x1ffff800 to 0x1ffff807] - AFHDS2A_tel_status (section .bss.AFHDS2A_tel_status)
        [0x1ffff808 to 0x1ffffc07] - DisplayBuf (section .bss.DisplayBuf)
        [0x1ffffc08 to 0x1ffffd07] - Output (section .bss.Output)
        [0x1ffffd08 to 0x1ffffdb3] - AFHDS2A_tel_data (section .bss.AFHDS2A_tel_data)
        [0x1ffffdb4 to 0x1ffffe03] - Fade (section .bss.Fade)
        [0x1ffffe04 to 0x1ffffe44] - g_crossfire (section .bss.g_crossfire)
        [0x1ffffe45 to 0x1ffffe45] - voice_tx_idx (section .bss.voice_tx_idx)
        [0x1ffffe46 to 0x1ffffe47] - tmrEEPROM (section .bss.tmrEEPROM)
        [0x1ffffe48 to 0x1ffffe87] - eeFs (section .bss.eeFs)
        [0x1ffffe88 to 0x1ffffeb7] - Radio (section .bss.Radio)
        [0x1ffffeb8 to 0x1ffffedf] - packet (section .bss.packet)
        [0x1ffffee0 to 0x1ffffef3] - g_menuStack (section .bss.g_menuStack)
        [0x1ffffef4 to 0x1fffff03] - outputTelemetryBuffer (section .bss.outputTelemetryBuffer)
        [0x1fffff04 to 0x1fffff13] - MspSender (section .bss.MspSender)
        [0x1fffff14 to 0x1fffff1f] - i2c_buffer (section .bss.i2c_buffer)
        [0x1fffff20 to 0x1fffff2b] - TelemetryReceiver (section .bss.TelemetryReceiver)
        [0x1fffff2c to 0x1fffff37] - LQCalc (section .bss.LQCalc)
        [0x1fffff38 to 0x1fffff41] - voice_uart_send_buf (section .bss.voice_uart_send_buf)
        [0x1fffff42 to 0x1fffff43] - g_tmr16KHz (section .bss.g_tmr16KHz)
        [0x1fffff44 to 0x1fffff47] - telemetryErrors (section .bss.telemetryErrors)
        [0x1fffff48 to 0x1fffff4b] - hal (section .bss.hal)
        [0x1fffff4c to 0x1fffff4f] - goodPkt (section .bss.goodPkt)
        [0x1fffff50 to 0x1fffff53] - g_voice_cb (section .bss.g_voice_cb)
        [0x1fffff54 to 0x1fffff57] - g_tmr10ms (section .bss.g_tmr10ms)
        [0x1fffff58 to 0x1fffff5b] - g_elrs_update_rate (section .bss.g_elrs_update_rate)
        [0x1fffff5c to 0x1fffff5f] - g_elrs_lag (section .bss.g_elrs_lag)
        [0x1fffff60 to 0x1fffff63] - perMain()::lastTMR (section .bss.perMain()::lastTMR)
        [0x1fffff64 to 0x1fffff67] - SX127xHal::instance (section .bss.SX127xHal::instance)
        [0x1fffff68 to 0x1fffff6b] - SX127xDriver::instance (section .bss.SX127xDriver::instance)
        [0x1fffff6c to 0x1fffff6f] - g_crsf_read_callback (section .bss.g_crsf_read_callback)
        [0x1fffff70 to 0x1fffff73] - linkstatTimeout (section .bss.linkstatTimeout)
        [0x1fffff74 to 0x1fffff77] - fieldTimeout (section .bss.fieldTimeout)
        [0x1fffff78 to 0x1fffff7b] - SPI_BufferPtr (section .bss.SPI_BufferPtr)
        [0x1fffff7c to 0x1fffff7f] - ID (section .bss.ID)
        [0x1fffff80 to 0x1fffff83] - AlertMessage (section .bss.AlertMessage)
        [0x1fffff84 to 0x20000185] - ota_crc (section .bss.ota_crc)
        [0x20000186 to 0x200002b1] - fields (section .bss.fields)
        [0x200002b2 to 0x20000341] - pulses2MHz (section .bss.pulses2MHz)
        [0x20000342 to 0x200003ab] - Xmem (section .bss.Xmem)
        [0x200003ac to 0x200003cf] - Voice (section .bss.Voice)
        [0x200003d0 to 0x200003ef] - s_timer (section .bss.s_timer)
        [0x200003f0 to 0x2000040f] - g_chans512 (section .bss.g_chans512)
        [0x20000410 to 0x2000042f] - Ex_chans (section .bss.Ex_chans)
        [0x20000430 to 0x20000447] - CsTimer (section .bss.CsTimer)
        [0x20000448 to 0x20000457] - s_anaFilt (section .bss.s_anaFilt)
        [0x20000458 to 0x20000467] - g_ppmIns (section .bss.g_ppmIns)
        [0x20000468 to 0x20000477] - Nvs_timer (section .bss.Nvs_timer)
        [0x20000478 to 0x20000485] - calibratedStick (section .bss.calibratedStick)
        [0x20000486 to 0x2000048f] - theWriteFile (section .bss.theWriteFile)
        [0x20000490 to 0x20000499] - theFile (section .bss.theFile)
        [0x2000049a to 0x200004a3] - P1values (section .bss.P1values)
        [0x200004a4 to 0x200004ab] - TimeGlobals (section .bss.TimeGlobals)
        [0x200004ac to 0x200004b1] - Inactivity (section .bss.Inactivity)
        [0x200004b2 to 0x200004b3] - g_latency (section .bss.g_latency)
        [0x200004b4 to 0x200004b5] - g_LightOffCounter (section .bss.g_LightOffCounter)
        [0x200004b6 to 0x200004b7] - trace()::s_time (section .bss.trace()::s_time)
        [0x200004b8 to 0x200004b9] - ActionAFHDS2A::packet_counter (section .bss.ActionAFHDS2A::packet_counter)
        [0x200004ba to 0x200004bb] - mainSequence()::timer (section .bss.mainSequence()::timer)
        [0x200004bc to 0x200004bd] - reusableBufferOffset (section .bss.reusableBufferOffset)
        [0x200004be to 0x200004bf] - s_eeDirtyTime10ms (section .bss.s_eeDirtyTime10ms)
        [0x200004c0 to 0x200004c1] - SPI_Size (section .bss.SPI_Size)
        [0x200004c2 to 0x200004c3] - GAltOffset (section .bss.GAltOffset)
        [0x200004c4 to 0x200004c5] - B3_comp_value (section .bss.B3_comp_value)
        [0x200004c6 to 0x200004c7] - AltOffset (section .bss.AltOffset)
        [0x200004c8 to 0x200008b1] - g_model (section .bss.g_model)
        [0x200008b2 to 0x20000bd1] - reusableBuffer (section .bss.reusableBuffer)
        [0x20000bd2 to 0x20000c51] - telemetryRxBuffer (section .bss.telemetryRxBuffer)
        [0x20000c52 to 0x20000cc7] - g_eeGeneral (section .bss.g_eeGeneral)
        [0x20000cc8 to 0x20000d0f] - fieldData (section .bss.fieldData)
        [0x20000d10 to 0x20000d4f] - g_crsf_rx_buf (section .bss.g_crsf_rx_buf)
        [0x20000d50 to 0x20000d87] - audio (section .bss.audio)
        [0x20000d88 to 0x20000db4] - keys (section .bss.keys)
        [0x20000db5 to 0x20000ddf] - AFHDS2A_tel_res_cnt (section .bss.AFHDS2A_tel_res_cnt)
        [0x20000de0 to 0x20000def] - hopping_frequency (section .bss.hopping_frequency)
        [0x20000df0 to 0x20000dfb] - Last_switch (section .bss.Last_switch)
        [0x20000dfc to 0x20000e05] - voice_uart_recv_buf (section .bss.voice_uart_recv_buf)
        [0x20000e06 to 0x20000e0f] - TimerConfig (section .bss.TimerConfig)
        [0x20000e10 to 0x20000e18] - Rotary (section .bss.Rotary)
        [0x20000e19 to 0x20000e20] - Nvs_state (section .bss.Nvs_state)
        [0x20000e21 to 0x20000e24] - phyStick (section .bss.phyStick)
        [0x20000e25 to 0x20000e28] - PopupData (section .bss.PopupData)
        [0x20000e29 to 0x20000e2b] - MenuControl (section .bss.MenuControl)
        [0x20000e2c to 0x20000e2c] - voice_rx_idx (section .bss.voice_rx_idx)
        [0x20000e2d to 0x20000e2d] - tick10ms (section .bss.tick10ms)
        [0x20000e2e to 0x20000e2e] - telemetryRxBufferCount (section .bss.telemetryRxBufferCount)
        [0x20000e2f to 0x20000e2f] - sysFlags (section .bss.sysFlags)
        [0x20000e30 to 0x20000e30] - stickMoved (section .bss.stickMoved)
        [0x20000e31 to 0x20000e31] - statusComplete (section .bss.statusComplete)
        [0x20000e32 to 0x20000e32] - serialDat0 (section .bss.serialDat0)
        [0x20000e33 to 0x20000e33] - scroll_disabled (section .bss.scroll_disabled)
        [0x20000e34 to 0x20000e34] - scrollUD (section .bss.scrollUD)
        [0x20000e35 to 0x20000e35] - scrollLR (section .bss.scrollLR)
        [0x20000e36 to 0x20000e36] - s_pgOfs (section .bss.s_pgOfs)
        [0x20000e37 to 0x20000e37] - s_noHi (section .bss.s_noHi)
        [0x20000e38 to 0x20000e38] - s_moveMode (section .bss.s_moveMode)
        [0x20000e39 to 0x20000e39] - s_mixMaxSel (section .bss.s_mixMaxSel)
        [0x20000e3a to 0x20000e3a] - s_evt (section .bss.s_evt)
        [0x20000e3b to 0x20000e3b] - s_editing (section .bss.s_editing)
        [0x20000e3c to 0x20000e3c] - s_editMode (section .bss.s_editMode)
        [0x20000e3d to 0x20000e3d] - pxxFlag (section .bss.pxxFlag)
        [0x20000e3e to 0x20000e3e] - protocol_flags (section .bss.protocol_flags)
        [0x20000e3f to 0x20000e3f] - ppmInAvailable (section .bss.ppmInAvailable)
        [0x20000e40 to 0x20000e40] - plotType (section .bss.plotType)
        [0x20000e41 to 0x20000e41] - packet_count (section .bss.packet_count)
        [0x20000e42 to 0x20000e42] - outputTelemetryBufferTrigger (section .bss.outputTelemetryBufferTrigger)
        [0x20000e43 to 0x20000e43] - outputTelemetryBufferSize (section .bss.outputTelemetryBufferSize)
        [0x20000e44 to 0x20000e44] - mixToDelete (section .bss.mixToDelete)
        [0x20000e45 to 0x20000e45] - itemmodified (section .bss.itemmodified)
        [0x20000e46 to 0x20000e46] - hopping_frequency_no (section .bss.hopping_frequency_no)
        [0x20000e47 to 0x20000e47] - heartbeat (section .bss.heartbeat)
        [0x20000e48 to 0x20000e48] - g_vbat100mV (section .bss.g_vbat100mV)
        [0x20000e49 to 0x20000e49] - g_posHorz (section .bss.g_posHorz)
        [0x20000e4a to 0x20000e4a] - g_menuStackPtr (section .bss.g_menuStackPtr)
        [0x20000e4b to 0x20000e4b] - g_blinkTmr10ms (section .bss.g_blinkTmr10ms)
        [0x20000e4c to 0x20000e4c] - fields_count (section .bss.fields_count)
        [0x20000e4d to 0x20000e4d] - fieldDataLen (section .bss.fieldDataLen)
        [0x20000e4e to 0x20000e4e] - curselectIdx (section .bss.curselectIdx)
        [0x20000e4f to 0x20000e4f] - curNumSelection (section .bss.curNumSelection)
        [0x20000e50 to 0x20000e50] - curFieldChunk (section .bss.curFieldChunk)
        [0x20000e51 to 0x20000e51] - bpanaCenter (section .bss.bpanaCenter)
        [0x20000e52 to 0x20000e52] - bind_phase (section .bss.bind_phase)
        [0x20000e53 to 0x20000e53] - badPkt (section .bss.badPkt)
        [0x20000e54 to 0x20000e54] - bMenuShown (section .bss.bMenuShown)
        [0x20000e55 to 0x20000e55] - allParamsLoaded (section .bss.allParamsLoaded)
        [0x20000e56 to 0x20000e56] - MState2::check_columns(unsigned char, unsigned char)::lateUp (section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp)
        [0x20000e57 to 0x20000e57] - audioQueue::driver()::toneCounter (section .bss.audioQueue::driver()::toneCounter)
        [0x20000e58 to 0x20000e58] - perMain()::repeater (section .bss.perMain()::repeater)
        [0x20000e59 to 0x20000e59] - perMain()::alertKey (section .bss.perMain()::alertKey)
        [0x20000e5a to 0x20000e5a] - perMain()::s_batCheck (section .bss.perMain()::s_batCheck)
        [0x20000e5b to 0x20000e5b] - menuProc0(unsigned char)::trimSwLock (section .bss.menuProc0(unsigned char)::trimSwLock)
        [0x20000e5c to 0x20000e5c] - per10ms()::current (section .bss.per10ms()::current)
        [0x20000e5d to 0x20000e5d] - perOut(short*, unsigned char)::sticky (section .bss.perOut(short*, unsigned char)::sticky)
        [0x20000e5e to 0x20000e5e] - check_backlight_voice()::tmr10ms (section .bss.check_backlight_voice()::tmr10ms)
        [0x20000e5f to 0x20000e5f] - menuProcModelSelect(unsigned char)::mstate2 (section .bss.menuProcModelSelect(unsigned char)::mstate2)
        [0x20000e60 to 0x20000e60] - menuProcModelSelect(unsigned char)::sel_editMode (section .bss.menuProcModelSelect(unsigned char)::sel_editMode)
        [0x20000e61 to 0x20000e61] - menuProcVoiceAlarm(unsigned char)::mstate2 (section .bss.menuProcVoiceAlarm(unsigned char)::mstate2)
        [0x20000e62 to 0x20000e62] - menuProcModelIndex(unsigned char)::mstate (section .bss.menuProcModelIndex(unsigned char)::mstate)
        [0x20000e63 to 0x20000e63] - menuProcTelemetry(unsigned char)::mstate2 (section .bss.menuProcTelemetry(unsigned char)::mstate2)
        [0x20000e64 to 0x20000e64] - menuProcVoiceOne(unsigned char)::mstate2 (section .bss.menuProcVoiceOne(unsigned char)::mstate2)
        [0x20000e65 to 0x20000e65] - menuProcProtocol(unsigned char)::mstate2 (section .bss.menuProcProtocol(unsigned char)::mstate2)
        [0x20000e66 to 0x20000e66] - menuProcCurveOne(unsigned char)::mstate2 (section .bss.menuProcCurveOne(unsigned char)::mstate2)
        [0x20000e67 to 0x20000e67] - menuProcCurveOne(unsigned char)::dfltCrv (section .bss.menuProcCurveOne(unsigned char)::dfltCrv)
        [0x20000e68 to 0x20000e68] - menuSetFailsafe(unsigned char)::mstate2 (section .bss.menuSetFailsafe(unsigned char)::mstate2)
        [0x20000e69 to 0x20000e69] - menuProcGlobals(unsigned char)::mstate2 (section .bss.menuProcGlobals(unsigned char)::mstate2)
        [0x20000e6a to 0x20000e6a] - menuModelPhases(unsigned char)::mstate2 (section .bss.menuModelPhases(unsigned char)::mstate2)
        [0x20000e6b to 0x20000e6b] - A7105_AntSwitch()::sw (section .bss.A7105_AntSwitch()::sw)
        [0x20000e6c to 0x20000e6c] - menuProcMixOne(unsigned char)::mstate2 (section .bss.menuProcMixOne(unsigned char)::mstate2)
        [0x20000e6d to 0x20000e6d] - menuRangeBind(unsigned char)::timer (section .bss.menuRangeBind(unsigned char)::timer)
        [0x20000e6e to 0x20000e6e] - menuProcIndex(unsigned char)::mstate (section .bss.menuProcIndex(unsigned char)::mstate)
        [0x20000e6f to 0x20000e6f] - menuProcCurve(unsigned char)::mstate2 (section .bss.menuProcCurve(unsigned char)::mstate2)
        [0x20000e70 to 0x20000e70] - ActionAFHDS2A::packet_type (section .bss.ActionAFHDS2A::packet_type)
        [0x20000e71 to 0x20000e71] - menuScaleOne(unsigned char)::mstate2 (section .bss.menuScaleOne(unsigned char)::mstate2)
        [0x20000e72 to 0x20000e72] - menuPhaseOne(unsigned char)::mstate2 (section .bss.menuPhaseOne(unsigned char)::mstate2)
        [0x20000e73 to 0x20000e73] - perOutPhase(short*, unsigned char)::lastPhase (section .bss.perOutPhase(short*, unsigned char)::lastPhase)
        [0x20000e74 to 0x20000e74] - menuRXSetup(unsigned char)::mstate2 (section .bss.menuRXSetup(unsigned char)::mstate2)
        [0x20000e75 to 0x20000e75] - menuProcMix(unsigned char)::mstate2 (section .bss.menuProcMix(unsigned char)::mstate2)
        [0x20000e76 to 0x20000e76] - s_currIdx (section .bss.s_currIdx)
        [0x20000e77 to 0x20000e77] - Columns (section .bss.Columns)
        [0x20000e78 to 0x20000e78] - wait_fin_count (section .bss.wait_fin_count)
        [0x20000e79 to 0x20000e79] - inputs_subview (section .bss.inputs_subview)
        [0x20000e7a to 0x20000e7a] - s_eeLongTimer (section .bss.s_eeLongTimer)
        [0x20000e7b to 0x20000e7b] - LongMenuTimer (section .bss.LongMenuTimer)
        [0x20000e7c to 0x20000e7c] - s_moveMixIdx (section .bss.s_moveMixIdx)
        [0x20000e7d to 0x20000e7d] - s_eeDirtyMsk (section .bss.s_eeDirtyMsk)
        [0x20000e7e to 0x20000e7e] - s_currMixIdx (section .bss.s_currMixIdx)
        [0x20000e7f to 0x20000e7f] - s_currDestCh (section .bss.s_currDestCh)
        [0x20000e80 to 0x20000e80] - s_curveChan (section .bss.s_curveChan)
        [0x20000e81 to 0x20000e81] - IlinesCount (section .bss.IlinesCount)
        [0x20000e82 to 0x20000e82] - s_expoChan (section .bss.s_expoChan)
        [0x20000e83 to 0x20000e83] - ThrottleStickyOn (section .bss.ThrottleStickyOn)
        [0x20000e84 to 0x20000e84] - Tevent (section .bss.Tevent)
        [0x20000e85 to 0x20000e85] - SystemOptions (section .bss.SystemOptions)
        [0x20000e86 to 0x20000e86] - StickScrollTimer (section .bss.StickScrollTimer)
        [0x20000e87 to 0x20000e87] - StickScrollAllowed (section .bss.StickScrollAllowed)
        [0x20000e88 to 0x20000e88] - StepSize (section .bss.StepSize)
        [0x20000e89 to 0x20000e89] - RotaryState (section .bss.RotaryState)
        [0x20000e8a to 0x20000e8a] - RadioState (section .bss.RadioState)
        [0x20000e8b to 0x20000e8b] - RadioActive (section .bss.RadioActive)
        [0x20000e8c to 0x20000e8c] - PausePulses (section .bss.PausePulses)
        [0x20000e8d to 0x20000e8d] - Main_running (section .bss.Main_running)
        [0x20000e8e to 0x20000e8e] - M_longMenuTimer (section .bss.M_longMenuTimer)
        [0x20000e8f to 0x20000e8f] - Lcd_lastPos (section .bss.Lcd_lastPos)
        [0x20000e90 to 0x20000e90] - LcdLock (section .bss.LcdLock)
        [0x20000e91 to 0x20000e91] - InverseBlink (section .bss.InverseBlink)
        [0x20000e92 to 0x20000e92] - EnterMenu (section .bss.EnterMenu)
        [0x20000e93 to 0x20000e93] - EepromActive (section .bss.EepromActive)
        [0x20000e94 to 0x20000e94] - Ee_lock (section .bss.Ee_lock)
        [0x20000e95 to 0x20000e95] - EditType (section .bss.EditType)
        [0x20000e96 to 0x20000e96] - EditColumns (section .bss.EditColumns)
        [0x20000e97 to 0x20000e97] - DupSub (section .bss.DupSub)
        [0x20000e98 to 0x20000e98] - DupIfNonzero (section .bss.DupIfNonzero)
        [0x20000e99 to 0x20000e99] - Current_protocol (section .bss.Current_protocol)
        [0x20000e9a to 0x20000e9a] - CurrentVolume (section .bss.CurrentVolume)
        [0x20000e9b to 0x20000e9b] - CurrentPhase (section .bss.CurrentPhase)
        [0x20000e9c to 0x20000e9c] - CalcScaleNest (section .bss.CalcScaleNest)
        [0x20000e9d to 0x20000e9d] - prev_power (section .data.prev_power)
        [0x20000e9e to 0x20000e9f] - A7105_AdjustLOBaseFreq()::old_offset (section .data.A7105_AdjustLOBaseFreq()::old_offset)
        [0x20000ea0 to 0x20000ea3] - AFHDS2A_update_telemetry()::Dacc (section .data.AFHDS2A_update_telemetry()::Dacc)
        [0x20000ea4 to 0x20000ea7] - ISR_TIMER1_COMPA_vect::pulsePtr (section .data.ISR_TIMER1_COMPA_vect::pulsePtr)
        [0x20000ea8 to 0x20000eb1] - play_cmd_buf (section .data.play_cmd_buf)
        [0x20000eb2 to 0x20000eb8] - shacommit (section .data.shacommit)
        [0x20000eb9 to 0x20000ebc] - AlarmControl (section .data.AlarmControl)
        [0x20000ebd to 0x20000ebd] - expectedChunks (section .data.expectedChunks)
        [0x20000ebe to 0x20000ebe] - curfieldId (section .data.curfieldId)
        [0x20000ec0 size 0] - [.bss.block.heap] (section .bss.block.heap)
      Start program header at 0x20001700
        [0x20001700 to 0x200017ff] - [.bss.block.stack] (section .bss.block.stack)
  Make symbol table
  Finalize copy blocks
  Finalize integrity check sections
  Patch section headers
  Patch program headers
  Patch file header


***************************************************************************************
***                                                                                 ***
***                                  Empty selects                                  ***
***                                                                                 ***
***************************************************************************************

