

***************************************************************************************
***                                                                                 ***
***                                  Parse script                                   ***
***                                                                                 ***
***************************************************************************************

  Define symbols added by command line:
      Define symbol __STACKSIZE__ as 256
      Define global symbol __STACKSIZE__ = 0x00000100
      Define symbol __STACKSIZE_PROCESS__ as 0
      Define global symbol __STACKSIZE_PROCESS__ = 0x00000000
      Define symbol __HEAPSIZE__ as 256
      Define global symbol __HEAPSIZE__ = 0x00000100
      Define symbol __do_debug_operation as __do_debug_operation_mempoll
      Define symbol __vfprintf as __vfprintf_int_nwp
      Define symbol __vfscanf as __vfscanf_int
      Define symbol __dso_handle as 0
      Define global symbol __dso_handle = 0x00000000


***************************************************************************************
***                                                                                 ***
***                            Check option consistency                             ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                     Ingest                                      ***
***                                                                                 ***
***************************************************************************************

  Loading 29 sections from 'system_MKL16Z4.o'
  Loading 21 symbols from 'system_MKL16Z4.o'
  Loading 82 sections from 'lcd.o'
  Loading 114 symbols from 'lcd.o'
  Loading 101 sections from 'BoardI6.o'
  Loading 231 symbols from 'BoardI6.o'
  Loading 211 sections from 'er9x.o'
      Removing SHF_WRITE from section .init_array (er9x.o)
  Loading 355 symbols from 'er9x.o'
  Loading 49 sections from 'A7105_SPI.o'
  Loading 68 symbols from 'A7105_SPI.o'
  Loading 24 sections from 'AFHDS2A_a7105.o'
  Loading 58 symbols from 'AFHDS2A_a7105.o'
  Loading 29 sections from 'audio.o'
  Loading 47 symbols from 'audio.o'
  Loading 44 sections from 'drivers.o'
  Loading 74 symbols from 'drivers.o'
  Loading 52 sections from 'file.o'
  Loading 71 symbols from 'file.o'
  Loading 478 sections from 'menus.o'
  Loading 844 symbols from 'menus.o'
  Loading 52 sections from 'pers.o'
  Loading 102 symbols from 'pers.o'
  Loading 51 sections from 'pulses.o'
  Loading 86 symbols from 'pulses.o'
  Loading 8 sections from 'stamp.o'
  Loading 3 symbols from 'stamp.o'
  Loading 13 sections from 'templates.o'
  Loading 16 symbols from 'templates.o'
  Loading 9 sections from 'main.o'
  Loading 6 symbols from 'main.o'
  Loading 16 sections from 'Vario.o'
  Loading 19 symbols from 'Vario.o'
  Loading 12 sections from 'AFHDS.o'
  Loading 25 symbols from 'AFHDS.o'
  Loading 28 sections from 'common.o'
  Loading 33 symbols from 'common.o'
  Loading 17 sections from 'OTA.o'
  Loading 20 symbols from 'OTA.o'
  Loading 92 sections from 'SX127x.o'
      Removing SHF_WRITE from section .init_array (SX127x.o)
  Loading 134 symbols from 'SX127x.o'
  Loading 38 sections from 'SX127xHal.o'
  Loading 50 symbols from 'SX127xHal.o'
  Loading 7 sections from 'CRSF.o'
  Loading 2 symbols from 'CRSF.o'
  Loading 64 sections from 'ELRS.o'
      Removing SHF_WRITE from section .init_array (ELRS.o)
  Loading 119 symbols from 'ELRS.o'
  Loading 7 sections from 'config.o'
  Loading 2 symbols from 'config.o'
  Loading 16 sections from 'FHSS.o'
  Loading 16 symbols from 'FHSS.o'
  Loading 18 sections from 'random.o'
  Loading 20 symbols from 'random.o'
  Loading 9 sections from 'POWERMGNT.o'
  Loading 4 symbols from 'POWERMGNT.o'
  Loading 14 sections from 'stubborn_receiver.o'
  Loading 17 symbols from 'stubborn_receiver.o'
  Loading 17 sections from 'stubborn_sender.o'
  Loading 18 symbols from 'stubborn_sender.o'
  Loading 13 sections from 'crc.o'
  Loading 18 symbols from 'crc.o'
  Loading 13 sections from 'crossfire_output.o'
  Loading 20 symbols from 'crossfire_output.o'
  Loading 100 sections from 'crossfire.o'
  Loading 132 symbols from 'crossfire.o'
  Loading 7 sections from 'elrsV2.o'
  Loading 2 symbols from 'elrsV2.o'
  Loading 19 sections from 'crc_crsf.o'
  Loading 21 symbols from 'crc_crsf.o'
  Loading 18 sections from 'Kinetis_KL_Startup.o'
  Loading 19 symbols from 'Kinetis_KL_Startup.o'
  Loading 20 sections from 'MKL16Z4_Vectors.o'
  Loading 60 symbols from 'MKL16Z4_Vectors.o'
      Strong symbol SPI0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM0_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM1_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol TPM2_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PIT_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
      Strong symbol PORTC_PORTD_IRQHandler [BoardI6.o] kept after finding weak definition [MKL16Z4_Vectors.o]
  Loading 18 sections from 'SEGGER_THUMB_Startup.o'
  Loading 18 symbols from 'SEGGER_THUMB_Startup.o'
  Loading archive: libm_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 40 sections from 'libm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 103 symbols from 'libm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 89 sections from 'libm_asm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 233 symbols from 'libm_asm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 147 sections from 'libm2.o (libm_v6m_t_le_eabi_small.a)'
      Loading 430 symbols from 'libm2.o (libm_v6m_t_le_eabi_small.a)'
      Loading 14 sections from 'libm2_asm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 31 symbols from 'libm2_asm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 240 sections from 'fdlibm.o (libm_v6m_t_le_eabi_small.a)'
      Loading 601 symbols from 'fdlibm.o (libm_v6m_t_le_eabi_small.a)'
  Loading archive: libc_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 240 sections from 'libc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 391 symbols from 'libc.o (libc_v6m_t_le_eabi_small.a)'
      Loading 38 sections from 'libc_asm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 103 symbols from 'libc_asm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 1157 sections from 'libc2.o (libc_v6m_t_le_eabi_small.a)'
      Loading 2286 symbols from 'libc2.o (libc_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'libc2_asm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 43 symbols from 'libc2_asm.o (libc_v6m_t_le_eabi_small.a)'
      Loading 36 sections from 'libc2_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 114 symbols from 'libc2_wchar.o (libc_v6m_t_le_eabi_small.a)'
      Loading 57 sections from 'libvfprintf.o (libc_v6m_t_le_eabi_small.a)'
      Loading 355 symbols from 'libvfprintf.o (libc_v6m_t_le_eabi_small.a)'
      Loading 41 sections from 'libvfscanf.o (libc_v6m_t_le_eabi_small.a)'
      Loading 108 symbols from 'libvfscanf.o (libc_v6m_t_le_eabi_small.a)'
  Loading archive: libdebugio_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 139 sections from 'libdebugio.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 217 symbols from 'libdebugio.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'libdebugio_asm.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 22 symbols from 'libdebugio_asm.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'bkpt_debug_operations.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 10 symbols from 'bkpt_debug_operations.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 12 sections from 'do_nv_debug_operation.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 12 symbols from 'do_nv_debug_operation.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 14 sections from 'mempoll_debug_operations.o (libdebugio_v6m_t_le_eabi_small.a)'
      Loading 20 symbols from 'mempoll_debug_operations.o (libdebugio_v6m_t_le_eabi_small.a)'
  Loading 39 sections from 'SEGGER_crtinit_v6m_little.o'
  Loading 85 symbols from 'SEGGER_crtinit_v6m_little.o'
  Loading archive: libcxxabi_noexcept_v6m_t_le_eabi_small.a
      Detected symbol lookup table
      Loading 12 sections from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 12 symbols from 'abort_message.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 29 symbols from 'cxa_atexit.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 18 symbols from 'cxa_aux_runtime.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 20 sections from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
          Removing SHF_WRITE from section .init_array (cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a))
      Loading 30 symbols from 'cxa_default_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 15 sections from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_exception_storage.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 13 sections from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 17 symbols from 'cxa_guard.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 29 sections from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 48 symbols from 'cxa_handlers.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 sections from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 symbols from 'cxa_noexception.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 10 sections from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 8 symbols from 'cxa_unexpected.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 27 sections from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 43 symbols from 'cxa_vector.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 16 sections from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 19 symbols from 'cxa_virtual.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 22 sections from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 35 symbols from 'fallback_malloc.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 545 sections from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 831 symbols from 'private_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 31 sections from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 44 symbols from 'stdlib_new_delete.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 46 sections from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'
      Loading 80 symbols from 'stdlib_typeinfo.o (libcxxabi_noexcept_v6m_t_le_eabi_small.a)'


***************************************************************************************
***                                                                                 ***
***                                  Wrap symbols                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
  
  Selecting Kinetis_KL_Startup.o to define Reset_Handler
      Definition:     Reset_Handler
      Pushing section .init to worklist [originates from symbol Reset_Handler]
  
  Processing section: .init from Kinetis_KL_Startup.o
      Load REL relocations for .init (Kinetis_KL_Startup.o)
      Reference:      _start
      Reference:      __RAM_segment_end__
      Reference:      SystemInit
  
  Selecting system_MKL16Z4.o to define SystemInit
      Definition:     SystemInit
      Pushing section .init.SystemInit to worklist [originates from symbol SystemInit]
  
  Processing section: .init.SystemInit from system_MKL16Z4.o
  
  Selecting SEGGER_THUMB_Startup.o to define _start
      Definition:     _start
      Pushing section .init._start to worklist [originates from symbol _start]
  
  Processing section: .init._start from SEGGER_THUMB_Startup.o
      Load REL relocations for .init._start (SEGGER_THUMB_Startup.o)
      Reference:      main
      Reference:      __SEGGER_init_table__
  
  Selecting MKL16Z4_Vectors.o to define _vectors
      Definition:     _vectors
      Pushing section .vectors to worklist [originates from symbol _vectors]
  
  Processing section: .vectors from MKL16Z4_Vectors.o
      Load REL relocations for .vectors (MKL16Z4_Vectors.o)
      Reference:      __stack_end__
      Weak reference: NMI_Handler
      Weak reference: HardFault_Handler
      Weak reference: SVC_Handler
      Weak reference: PendSV_Handler
      Weak reference: SysTick_Handler
      Weak reference: DMA0_IRQHandler
      Weak reference: DMA1_IRQHandler
      Weak reference: DMA2_IRQHandler
      Weak reference: DMA3_IRQHandler
      Local section:  .init from MKL16Z4_Vectors.o using relocation R_ARM_ABS32
      Weak reference: FTFA_IRQHandler
      Weak reference: LVD_LVW_IRQHandler
      Weak reference: LLW_IRQHandler
      Weak reference: I2C0_IRQHandler
      Weak reference: I2C1_IRQHandler
      Weak reference: SPI0_IRQHandler
      Weak reference: SPI1_IRQHandler
      Weak reference: UART0_IRQHandler
      Weak reference: UART1_IRQHandler
      Weak reference: UART2_IRQHandler
      Weak reference: ADC0_IRQHandler
      Weak reference: CMP0_IRQHandler
      Weak reference: TPM0_IRQHandler
      Weak reference: TPM1_IRQHandler
      Weak reference: TPM2_IRQHandler
      Weak reference: RTC_IRQHandler
      Weak reference: RTC_Seconds_IRQHandler
      Weak reference: PIT_IRQHandler
      Weak reference: I2S0_IRQHandler
      Weak reference: DAC0_IRQHandler
      Weak reference: TSI0_IRQHandler
      Weak reference: LPTimer_IRQHandler
      Weak reference: PORTA_IRQHandler
      Weak reference: PORTC_PORTD_IRQHandler
  
  Processing section: .init from MKL16Z4_Vectors.o
  
  Selecting MKL16Z4_Vectors.o to define ADC0_IRQHandler
      Definition:     ADC0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define CMP0_IRQHandler
      Definition:     CMP0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DAC0_IRQHandler
      Definition:     DAC0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA0_IRQHandler
      Definition:     DMA0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA1_IRQHandler
      Definition:     DMA1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA2_IRQHandler
      Definition:     DMA2_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define DMA3_IRQHandler
      Definition:     DMA3_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define FTFA_IRQHandler
      Definition:     FTFA_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define HardFault_Handler
      Definition:     HardFault_Handler
  
  Selecting MKL16Z4_Vectors.o to define I2C0_IRQHandler
      Definition:     I2C0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2C1_IRQHandler
      Definition:     I2C1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define I2S0_IRQHandler
      Definition:     I2S0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LLW_IRQHandler
      Definition:     LLW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LPTimer_IRQHandler
      Definition:     LPTimer_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define LVD_LVW_IRQHandler
      Definition:     LVD_LVW_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define NMI_Handler
      Definition:     NMI_Handler
  
  Selecting BoardI6.o to define PIT_IRQHandler
      Definition:     PIT_IRQHandler
      Pushing section .text.PIT_IRQHandler to worklist [originates from symbol PIT_IRQHandler]
  
  Processing section: .text.PIT_IRQHandler from BoardI6.o
      Load REL relocations for .text.PIT_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER0_COMP_vect
      Reference:      g_tmr16KHz
      Reference:      tmrEEPROM
  
  Selecting er9x.o to define ISR_TIMER0_COMP_vect
      Definition:     ISR_TIMER0_COMP_vect
      Pushing section .text.ISR_TIMER0_COMP_vect to worklist [originates from symbol ISR_TIMER0_COMP_vect]
  
  Processing section: .text.ISR_TIMER0_COMP_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER0_COMP_vect (er9x.o)
      Reference:      audioQueue::heartbeat()
      Reference:      per10ms()
      Reference:      audio
      Reference:      heartbeat
      Reference:      AlarmControl
  
  Processing section: .init_array from er9x.o
      Load REL relocations for .init_array (er9x.o)
      Local section:  .text._GLOBAL__sub_I_er9x.cpp from er9x.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Load REL relocations for .text._GLOBAL__sub_I_er9x.cpp (er9x.o)
      Reference:      audioQueue::audioQueue()
  
  Selecting er9x.o to define AlarmControl
      Definition:     AlarmControl
      Pushing section .data.AlarmControl to worklist [originates from symbol AlarmControl]
  
  Processing section: .data.AlarmControl from er9x.o
  
  Selecting MKL16Z4_Vectors.o to define PORTA_IRQHandler
      Definition:     PORTA_IRQHandler
  
  Selecting BoardI6.o to define PORTC_PORTD_IRQHandler
      Definition:     PORTC_PORTD_IRQHandler
      Pushing section .text.PORTC_PORTD_IRQHandler to worklist [originates from symbol PORTC_PORTD_IRQHandler]
  
  Processing section: .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Load REL relocations for .text.PORTC_PORTD_IRQHandler (BoardI6.o)
      Reference:      ActionAFHDS2A
      Reference:      RadioState
  
  Selecting AFHDS2A_a7105.o to define ActionAFHDS2A
      Definition:     ActionAFHDS2A
      Pushing section .text.ActionAFHDS2A to worklist [originates from symbol ActionAFHDS2A]
  
  Processing section: .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.ActionAFHDS2A (AFHDS2A_a7105.o)
      Reference:      A7105_AdjustLOBaseFreq()
      Reference:      A7105_SetPower()
      Reference:      A7105_SetTxRxMode(unsigned char)
      Reference:      A7105_Strobe(unsigned char)
      Reference:      EnableGIO
      Reference:      A7105_ReadData(unsigned char)
      Reference:      A7105_ReadReg(unsigned char)
      Reference:      AFHDS2A_build_packet(unsigned char)
      Reference:      __aeabi_memset
      Reference:      A7105_AntSwitch()
      Reference:      A7105_WriteData(unsigned char, unsigned char)
      Reference:      __aeabi_uidivmod
      Reference:      __aeabi_llsl
      Reference:      memcmp
      Reference:      __aeabi_uidiv
      Local section:  .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o using relocation R_ARM_THM_CALL
      Reference:      RadioActive
      Reference:      protocol_flags
      Reference:      packet
      Reference:      ID
      Reference:      g_model
      Reference:      AFHDS2A_tel_res_cnt
      Reference:      AFHDS2A_tel_status
      Reference:      AFHDS2A_tel_data
      Local section:  .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Local section:  .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o using relocation R_ARM_ABS32
      Reference:      hopping_frequency_no
      Reference:      hopping_frequency
      Reference:      bind_phase
      Reference:      packet_count
  
  Processing section: .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.processFlySkySensor(unsigned char const*, unsigned char) (AFHDS2A_a7105.o)
      Reference:      __aeabi_idiv
      Reference:      AFHDS2A_tel
      Reference:      GAltOffset
      Reference:      AltOffset
  
  Processing section: .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
  
  Processing section: .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel
      Definition:     AFHDS2A_tel
      Pushing section .rodata.AFHDS2A_tel to worklist [originates from symbol AFHDS2A_tel]
  
  Processing section: .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_data
      Definition:     AFHDS2A_tel_data
      Pushing section .bss.AFHDS2A_tel_data to worklist [originates from symbol AFHDS2A_tel_data]
  
  Processing section: .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_res_cnt
      Definition:     AFHDS2A_tel_res_cnt
      Pushing section .bss.AFHDS2A_tel_res_cnt to worklist [originates from symbol AFHDS2A_tel_res_cnt]
  
  Processing section: .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_tel_status
      Definition:     AFHDS2A_tel_status
      Pushing section .bss.AFHDS2A_tel_status to worklist [originates from symbol AFHDS2A_tel_status]
  
  Processing section: .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
  
  Selecting AFHDS2A_a7105.o to define AltOffset
      Definition:     AltOffset
      Pushing section .bss.AltOffset to worklist [originates from symbol AltOffset]
  
  Processing section: .bss.AltOffset from AFHDS2A_a7105.o
  
  Selecting BoardI6.o to define EnableGIO
      Definition:     EnableGIO
      Pushing section .text.EnableGIO to worklist [originates from symbol EnableGIO]
  
  Processing section: .text.EnableGIO from BoardI6.o
  
  Selecting AFHDS2A_a7105.o to define GAltOffset
      Definition:     GAltOffset
      Pushing section .bss.GAltOffset to worklist [originates from symbol GAltOffset]
  
  Processing section: .bss.GAltOffset from AFHDS2A_a7105.o
  
  Selecting A7105_SPI.o to define ID
      Definition:     ID
      Pushing section .bss.ID to worklist [originates from symbol ID]
  
  Processing section: .bss.ID from A7105_SPI.o
  
  Selecting MKL16Z4_Vectors.o to define PendSV_Handler
      Definition:     PendSV_Handler
  
  Selecting MKL16Z4_Vectors.o to define RTC_IRQHandler
      Definition:     RTC_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define RTC_Seconds_IRQHandler
      Definition:     RTC_Seconds_IRQHandler
  
  Selecting pulses.o to define RadioActive
      Definition:     RadioActive
      Pushing section .bss.RadioActive to worklist [originates from symbol RadioActive]
  
  Processing section: .bss.RadioActive from pulses.o
  
  Selecting A7105_SPI.o to define RadioState
      Definition:     RadioState
      Pushing section .bss.RadioState to worklist [originates from symbol RadioState]
  
  Processing section: .bss.RadioState from A7105_SPI.o
  
  Selecting BoardI6.o to define SPI0_IRQHandler
      Definition:     SPI0_IRQHandler
      Pushing section .text.SPI0_IRQHandler to worklist [originates from symbol SPI0_IRQHandler]
  
  Processing section: .text.SPI0_IRQHandler from BoardI6.o
      Load REL relocations for .text.SPI0_IRQHandler (BoardI6.o)
      Reference:      SPI_BufferPtr
      Reference:      SPI_Size
  
  Selecting MKL16Z4_Vectors.o to define SPI1_IRQHandler
      Definition:     SPI1_IRQHandler
  
  Selecting BoardI6.o to define SPI_BufferPtr
      Definition:     SPI_BufferPtr
      Pushing section .bss.SPI_BufferPtr to worklist [originates from symbol SPI_BufferPtr]
  
  Processing section: .bss.SPI_BufferPtr from BoardI6.o
  
  Selecting BoardI6.o to define SPI_Size
      Definition:     SPI_Size
      Pushing section .bss.SPI_Size to worklist [originates from symbol SPI_Size]
  
  Processing section: .bss.SPI_Size from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define SVC_Handler
      Definition:     SVC_Handler
  
  Selecting MKL16Z4_Vectors.o to define SysTick_Handler
      Definition:     SysTick_Handler
  
  Selecting BoardI6.o to define TPM0_IRQHandler
      Definition:     TPM0_IRQHandler
      Pushing section .text.TPM0_IRQHandler to worklist [originates from symbol TPM0_IRQHandler]
  
  Processing section: .text.TPM0_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM0_IRQHandler (BoardI6.o)
      Reference:      crsf_action()
      Reference:      ActionAFHDS
  
  Selecting AFHDS.o to define ActionAFHDS
      Definition:     ActionAFHDS
      Pushing section .text.ActionAFHDS to worklist [originates from symbol ActionAFHDS]
  
  Processing section: .text.ActionAFHDS from AFHDS.o
      Load REL relocations for .text.ActionAFHDS (AFHDS.o)
      Reference:      g_chans512
  
  Selecting BoardI6.o to define TPM1_IRQHandler
      Definition:     TPM1_IRQHandler
      Pushing section .text.TPM1_IRQHandler to worklist [originates from symbol TPM1_IRQHandler]
  
  Processing section: .text.TPM1_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM1_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER2_OVF_vect
  
  Selecting er9x.o to define ISR_TIMER2_OVF_vect
      Definition:     ISR_TIMER2_OVF_vect
      Pushing section .text.ISR_TIMER2_OVF_vect to worklist [originates from symbol ISR_TIMER2_OVF_vect]
  
  Processing section: .text.ISR_TIMER2_OVF_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER2_OVF_vect (er9x.o)
      Reference:      audioQueue::busy()
      Weak reference: audioQueue::driver()
      Reference:      Vario_driver()
  
  Selecting BoardI6.o to define TPM2_IRQHandler
      Definition:     TPM2_IRQHandler
      Pushing section .text.TPM2_IRQHandler to worklist [originates from symbol TPM2_IRQHandler]
  
  Processing section: .text.TPM2_IRQHandler from BoardI6.o
      Load REL relocations for .text.TPM2_IRQHandler (BoardI6.o)
      Reference:      ISR_TIMER1_COMPA_vect
      Reference:      ISR_TIMER3_CAPT_vect
  
  Selecting pulses.o to define ISR_TIMER1_COMPA_vect
      Definition:     ISR_TIMER1_COMPA_vect
      Pushing section .text.ISR_TIMER1_COMPA_vect to worklist [originates from symbol ISR_TIMER1_COMPA_vect]
  
  Processing section: .text.ISR_TIMER1_COMPA_vect from pulses.o
      Load REL relocations for .text.ISR_TIMER1_COMPA_vect (pulses.o)
      Reference:      GetPPMTimCompare
      Reference:      SetPPMTimCompare
      Reference:      SetStartPulsePol()
      Reference:      setupPulses()
      Local section:  .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o using relocation R_ARM_ABS32
      Reference:      pulses2MHz
  
  Processing section: .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Load REL relocations for .data.ISR_TIMER1_COMPA_vect::pulsePtr (pulses.o)
  
  Selecting BoardI6.o to define GetPPMTimCompare
      Definition:     GetPPMTimCompare
      Pushing section .text.GetPPMTimCompare to worklist [originates from symbol GetPPMTimCompare]
  
  Processing section: .text.GetPPMTimCompare from BoardI6.o
  
  Selecting er9x.o to define ISR_TIMER3_CAPT_vect
      Definition:     ISR_TIMER3_CAPT_vect
      Pushing section .text.ISR_TIMER3_CAPT_vect to worklist [originates from symbol ISR_TIMER3_CAPT_vect]
  
  Processing section: .text.ISR_TIMER3_CAPT_vect from er9x.o
      Load REL relocations for .text.ISR_TIMER3_CAPT_vect (er9x.o)
      Reference:      GetPPMTimCapture
      Local section:  .bss.ISR_TIMER3_CAPT_vect::lastCapt from er9x.o using relocation R_ARM_ABS32
      Reference:      ppmInState
      Reference:      ppmInAvailable
      Reference:      g_ppmIns
      Reference:      g_eeGeneral
  
  Processing section: .bss.ISR_TIMER3_CAPT_vect::lastCapt from er9x.o
  
  Selecting BoardI6.o to define GetPPMTimCapture
      Definition:     GetPPMTimCapture
      Pushing section .text.GetPPMTimCapture to worklist [originates from symbol GetPPMTimCapture]
  
  Processing section: .text.GetPPMTimCapture from BoardI6.o
  
  Selecting BoardI6.o to define SetPPMTimCompare
      Definition:     SetPPMTimCompare
      Pushing section .text.SetPPMTimCompare to worklist [originates from symbol SetPPMTimCompare]
  
  Processing section: .text.SetPPMTimCompare from BoardI6.o
  
  Selecting MKL16Z4_Vectors.o to define TSI0_IRQHandler
      Definition:     TSI0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define UART0_IRQHandler
      Definition:     UART0_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define UART1_IRQHandler
      Definition:     UART1_IRQHandler
  
  Selecting MKL16Z4_Vectors.o to define UART2_IRQHandler
      Definition:     UART2_IRQHandler
  
  Selecting crossfire.o to define crsf_action()
      Definition:     crsf_action()
      Pushing section .text.crsf_action() to worklist [originates from symbol crsf_action()]
  
  Processing section: .text.crsf_action() from crossfire.o
      Load REL relocations for .text.crsf_action() (crossfire.o)
      Reference:      setupPulsesCrossfire()
      Reference:      crsf_send_data
      Reference:      g_crossfire
  
  Selecting pulses.o to define setupPulses()
      Definition:     setupPulses()
      Pushing section .text.setupPulses() to worklist [originates from symbol setupPulses()]
  
  Processing section: .text.setupPulses() from pulses.o
      Load REL relocations for .text.setupPulses() (pulses.o)
      Reference:      setupPulsesPPM(unsigned char)
      Reference:      EnablePPMTim
      Reference:      DisableGIO
      Reference:      DisablePRTTim
      Reference:      A7105_Sleep()
      Reference:      EnablePPMOut
      Reference:      DisablePPMOut
      Reference:      initAFHDS2A
      Reference:      EnablePRTTim
      Reference:      initAFHDS
      Reference:      crsf_init()
      Reference:      PausePulses
      Reference:      Current_protocol
  
  Selecting pulses.o to define Current_protocol
      Definition:     Current_protocol
      Pushing section .bss.Current_protocol to worklist [originates from symbol Current_protocol]
  
  Processing section: .bss.Current_protocol from pulses.o
  
  Selecting BoardI6.o to define DisableGIO
      Definition:     DisableGIO
      Pushing section .text.DisableGIO to worklist [originates from symbol DisableGIO]
  
  Processing section: .text.DisableGIO from BoardI6.o
  
  Selecting BoardI6.o to define DisablePPMOut
      Definition:     DisablePPMOut
      Pushing section .text.DisablePPMOut to worklist [originates from symbol DisablePPMOut]
  
  Processing section: .text.DisablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define DisablePRTTim
      Definition:     DisablePRTTim
      Pushing section .text.DisablePRTTim to worklist [originates from symbol DisablePRTTim]
  
  Processing section: .text.DisablePRTTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMOut
      Definition:     EnablePPMOut
      Pushing section .text.EnablePPMOut to worklist [originates from symbol EnablePPMOut]
  
  Processing section: .text.EnablePPMOut from BoardI6.o
  
  Selecting BoardI6.o to define EnablePPMTim
      Definition:     EnablePPMTim
      Pushing section .text.EnablePPMTim to worklist [originates from symbol EnablePPMTim]
  
  Processing section: .text.EnablePPMTim from BoardI6.o
  
  Selecting BoardI6.o to define EnablePRTTim
      Definition:     EnablePRTTim
      Pushing section .text.EnablePRTTim to worklist [originates from symbol EnablePRTTim]
  
  Processing section: .text.EnablePRTTim from BoardI6.o
  
  Selecting pulses.o to define PausePulses
      Definition:     PausePulses
      Pushing section .bss.PausePulses to worklist [originates from symbol PausePulses]
  
  Processing section: .bss.PausePulses from pulses.o
  
  Selecting A7105_SPI.o to define A7105_Sleep()
      Definition:     A7105_Sleep()
      Pushing section .text.A7105_Sleep() to worklist [originates from symbol A7105_Sleep()]
  
  Processing section: .text.A7105_Sleep() from A7105_SPI.o
      Load REL relocations for .text.A7105_Sleep() (A7105_SPI.o)
      Reference:      TX_RX_PutVal
  
  Selecting BoardI6.o to define TX_RX_PutVal
      Definition:     TX_RX_PutVal
      Pushing section .text.TX_RX_PutVal to worklist [originates from symbol TX_RX_PutVal]
  
  Processing section: .text.TX_RX_PutVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Strobe(unsigned char)
      Definition:     A7105_Strobe(unsigned char)
      Pushing section .text.A7105_Strobe(unsigned char) to worklist [originates from symbol A7105_Strobe(unsigned char)]
  
  Processing section: .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_Strobe(unsigned char) (A7105_SPI.o)
      Reference:      a7105_csn_off
      Reference:      SPI_RADIO_SendBlock
      Reference:      a7105_csn_on
  
  Selecting BoardI6.o to define SPI_RADIO_SendBlock
      Definition:     SPI_RADIO_SendBlock
      Pushing section .text.SPI_RADIO_SendBlock to worklist [originates from symbol SPI_RADIO_SendBlock]
  
  Processing section: .text.SPI_RADIO_SendBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_SendBlock (BoardI6.o)
  
  Selecting Vario.o to define Vario_driver()
      Definition:     Vario_driver()
      Pushing section .text.Vario_driver() to worklist [originates from symbol Vario_driver()]
  
  Processing section: .text.Vario_driver() from Vario.o
      Load REL relocations for .text.Vario_driver() (Vario.o)
      Reference:      Buzzer_ClrVal
      Reference:      Buzzer_SetVal
      Reference:      WorkBuff
      Reference:      VarioPlay
      Reference:      LoadBuff
      Local section:  .bss.Vario_driver()::toneCounter from Vario.o using relocation R_ARM_ABS32
  
  Processing section: .bss.Vario_driver()::toneCounter from Vario.o
  
  Selecting BoardI6.o to define Buzzer_ClrVal
      Definition:     Buzzer_ClrVal
      Pushing section .text.Buzzer_ClrVal to worklist [originates from symbol Buzzer_ClrVal]
  
  Processing section: .text.Buzzer_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define Buzzer_SetVal
      Definition:     Buzzer_SetVal
      Pushing section .text.Buzzer_SetVal to worklist [originates from symbol Buzzer_SetVal]
  
  Processing section: .text.Buzzer_SetVal from BoardI6.o
  
  Selecting Vario.o to define LoadBuff
      Definition:     LoadBuff
      Pushing section .bss.LoadBuff to worklist [originates from symbol LoadBuff]
  
  Processing section: .bss.LoadBuff from Vario.o
  
  Selecting Vario.o to define VarioPlay
      Definition:     VarioPlay
      Pushing section .bss.VarioPlay to worklist [originates from symbol VarioPlay]
  
  Processing section: .bss.VarioPlay from Vario.o
  
  Selecting Vario.o to define WorkBuff
      Definition:     WorkBuff
      Pushing section .bss.WorkBuff to worklist [originates from symbol WorkBuff]
  
  Processing section: .bss.WorkBuff from Vario.o
  
  Selecting A7105_SPI.o to define A7105_ReadReg(unsigned char)
      Definition:     A7105_ReadReg(unsigned char)
      Pushing section .text.A7105_ReadReg(unsigned char) to worklist [originates from symbol A7105_ReadReg(unsigned char)]
  
  Processing section: .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadReg(unsigned char) (A7105_SPI.o)
      Reference:      SPI_RADIO_ReceiveBlock
  
  Selecting BoardI6.o to define SPI_RADIO_ReceiveBlock
      Definition:     SPI_RADIO_ReceiveBlock
      Pushing section .text.SPI_RADIO_ReceiveBlock to worklist [originates from symbol SPI_RADIO_ReceiveBlock]
  
  Processing section: .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Load REL relocations for .text.SPI_RADIO_ReceiveBlock (BoardI6.o)
  
  Selecting A7105_SPI.o to define A7105_ReadData(unsigned char)
      Definition:     A7105_ReadData(unsigned char)
      Pushing section .text.A7105_ReadData(unsigned char) to worklist [originates from symbol A7105_ReadData(unsigned char)]
  
  Processing section: .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_ReadData(unsigned char) (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_SetPower()
      Definition:     A7105_SetPower()
      Pushing section .text.A7105_SetPower() to worklist [originates from symbol A7105_SetPower()]
  
  Processing section: .text.A7105_SetPower() from A7105_SPI.o
      Load REL relocations for .text.A7105_SetPower() (A7105_SPI.o)
      Reference:      A7105_WriteReg(unsigned char, unsigned char)
      Reference:      prev_power
  
  Selecting A7105_SPI.o to define A7105_WriteReg(unsigned char, unsigned char)
      Definition:     A7105_WriteReg(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteReg(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteReg(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_SPI.o)
  
  Selecting pulses.o to define setupPulsesPPM(unsigned char)
      Definition:     setupPulsesPPM(unsigned char)
      Pushing section .text.setupPulsesPPM(unsigned char) to worklist [originates from symbol setupPulsesPPM(unsigned char)]
  
  Processing section: .text.setupPulsesPPM(unsigned char) from pulses.o
      Load REL relocations for .text.setupPulsesPPM(unsigned char) (pulses.o)
      Reference:      B3_comp_value
  
  Selecting pulses.o to define B3_comp_value
      Definition:     B3_comp_value
      Pushing section .bss.B3_comp_value to worklist [originates from symbol B3_comp_value]
  
  Processing section: .bss.B3_comp_value from pulses.o
  
  Selecting A7105_SPI.o to define A7105_AntSwitch()
      Definition:     A7105_AntSwitch()
      Pushing section .text.A7105_AntSwitch() to worklist [originates from symbol A7105_AntSwitch()]
  
  Processing section: .text.A7105_AntSwitch() from A7105_SPI.o
      Load REL relocations for .text.A7105_AntSwitch() (A7105_SPI.o)
      Reference:      RF0_ClrVal
      Reference:      RF1_SetVal
      Reference:      RF1_ClrVal
      Reference:      RF0_SetVal
      Local section:  .bss.A7105_AntSwitch()::sw from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .bss.A7105_AntSwitch()::sw from A7105_SPI.o
  
  Selecting BoardI6.o to define RF0_ClrVal
      Definition:     RF0_ClrVal
      Pushing section .text.RF0_ClrVal to worklist [originates from symbol RF0_ClrVal]
  
  Processing section: .text.RF0_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF0_SetVal
      Definition:     RF0_SetVal
      Pushing section .text.RF0_SetVal to worklist [originates from symbol RF0_SetVal]
  
  Processing section: .text.RF0_SetVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_ClrVal
      Definition:     RF1_ClrVal
      Pushing section .text.RF1_ClrVal to worklist [originates from symbol RF1_ClrVal]
  
  Processing section: .text.RF1_ClrVal from BoardI6.o
  
  Selecting BoardI6.o to define RF1_SetVal
      Definition:     RF1_SetVal
      Pushing section .text.RF1_SetVal to worklist [originates from symbol RF1_SetVal]
  
  Processing section: .text.RF1_SetVal from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_WriteData(unsigned char, unsigned char)
      Definition:     A7105_WriteData(unsigned char, unsigned char)
      Pushing section .text.A7105_WriteData(unsigned char, unsigned char) to worklist [originates from symbol A7105_WriteData(unsigned char, unsigned char)]
  
  Processing section: .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteData(unsigned char, unsigned char) (A7105_SPI.o)
      Reference:      __aeabi_memcpy
  
  Selecting pulses.o to define SetStartPulsePol()
      Definition:     SetStartPulsePol()
      Pushing section .text.SetStartPulsePol() to worklist [originates from symbol SetStartPulsePol()]
  
  Processing section: .text.SetStartPulsePol() from pulses.o
      Load REL relocations for .text.SetStartPulsePol() (pulses.o)
      Reference:      GetPPMOutState
      Reference:      cli
      Reference:      GetPPMTimCompareInterruptFlag
      Reference:      ClearPPMTimCompareInterruptFlag
      Reference:      sei
  
  Selecting BoardI6.o to define ClearPPMTimCompareInterruptFlag
      Definition:     ClearPPMTimCompareInterruptFlag
      Pushing section .text.ClearPPMTimCompareInterruptFlag to worklist [originates from symbol ClearPPMTimCompareInterruptFlag]
  
  Processing section: .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMOutState
      Definition:     GetPPMOutState
      Pushing section .text.GetPPMOutState to worklist [originates from symbol GetPPMOutState]
  
  Processing section: .text.GetPPMOutState from BoardI6.o
  
  Selecting BoardI6.o to define GetPPMTimCompareInterruptFlag
      Definition:     GetPPMTimCompareInterruptFlag
      Pushing section .text.GetPPMTimCompareInterruptFlag to worklist [originates from symbol GetPPMTimCompareInterruptFlag]
  
  Processing section: .text.GetPPMTimCompareInterruptFlag from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_SetTxRxMode(unsigned char)
      Definition:     A7105_SetTxRxMode(unsigned char)
      Pushing section .text.A7105_SetTxRxMode(unsigned char) to worklist [originates from symbol A7105_SetTxRxMode(unsigned char)]
  
  Processing section: .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.A7105_SetTxRxMode(unsigned char) (A7105_SPI.o)
  
  Selecting AFHDS2A_a7105.o to define AFHDS2A_build_packet(unsigned char)
      Definition:     AFHDS2A_build_packet(unsigned char)
      Pushing section .text.AFHDS2A_build_packet(unsigned char) to worklist [originates from symbol AFHDS2A_build_packet(unsigned char)]
  
  Processing section: .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Load REL relocations for .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_a7105.o)
      Reference:      convert_failsafe_ppm(unsigned char)
  
  Selecting A7105_SPI.o to define convert_failsafe_ppm(unsigned char)
      Definition:     convert_failsafe_ppm(unsigned char)
      Pushing section .text.convert_failsafe_ppm(unsigned char) to worklist [originates from symbol convert_failsafe_ppm(unsigned char)]
  
  Processing section: .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Load REL relocations for .text.convert_failsafe_ppm(unsigned char) (A7105_SPI.o)
  
  Selecting crossfire_output.o to define setupPulsesCrossfire()
      Definition:     setupPulsesCrossfire()
      Pushing section .text.setupPulsesCrossfire() to worklist [originates from symbol setupPulsesCrossfire()]
  
  Processing section: .text.setupPulsesCrossfire() from crossfire_output.o
      Load REL relocations for .text.setupPulsesCrossfire() (crossfire_output.o)
      Reference:      createCrossfireChannelsFrame(unsigned char*, short*)
      Reference:      outputTelemetryBufferSize
      Reference:      outputTelemetryBuffer
      Reference:      outputTelemetryBufferTrigger
  
  Selecting A7105_SPI.o to define A7105_AdjustLOBaseFreq()
      Definition:     A7105_AdjustLOBaseFreq()
      Pushing section .text.A7105_AdjustLOBaseFreq() to worklist [originates from symbol A7105_AdjustLOBaseFreq()]
  
  Processing section: .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Load REL relocations for .text.A7105_AdjustLOBaseFreq() (A7105_SPI.o)
      Local section:  .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o using relocation R_ARM_ABS32
  
  Processing section: .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
  
  Selecting crossfire_output.o to define createCrossfireChannelsFrame(unsigned char*, short*)
      Definition:     createCrossfireChannelsFrame(unsigned char*, short*)
      Pushing section .text.createCrossfireChannelsFrame(unsigned char*, short*) to worklist [originates from symbol createCrossfireChannelsFrame(unsigned char*, short*)]
  
  Processing section: .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire_output.o
      Load REL relocations for .text.createCrossfireChannelsFrame(unsigned char*, short*) (crossfire_output.o)
      Reference:      crc8(unsigned char const*, unsigned int)
  
  Selecting crc_crsf.o to define crc8(unsigned char const*, unsigned int)
      Definition:     crc8(unsigned char const*, unsigned int)
      Pushing section .text.crc8(unsigned char const*, unsigned int) to worklist [originates from symbol crc8(unsigned char const*, unsigned int)]
  
  Processing section: .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Load REL relocations for .text.crc8(unsigned char const*, unsigned int) (crc_crsf.o)
      Local section:  .rodata.crc8tab from crc_crsf.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.crc8tab from crc_crsf.o
  
  Selecting drivers.o to define per10ms()
      Definition:     per10ms()
      Pushing section .text.per10ms() to worklist [originates from symbol per10ms()]
  
  Processing section: .text.per10ms() from drivers.o
      Load REL relocations for .text.per10ms() (drivers.o)
      Reference:      PINB
      Reference:      Key::input(bool, EnumKeys)
      Reference:      PIND
      Reference:      g_tmr10ms
      Reference:      g_blinkTmr10ms
      Local section:  .bss.per10ms()::current from drivers.o using relocation R_ARM_ABS32
      Reference:      keys
      Reference:      Backup_RestoreRunning
      Local section:  .rodata.per10ms()::crossTrim from drivers.o using relocation R_ARM_ABS32
      Reference:      Rotary
      Reference:      StickScrollTimer
  
  Processing section: .bss.per10ms()::current from drivers.o
  
  Processing section: .rodata.per10ms()::crossTrim from drivers.o
  
  Selecting er9x.o to define Backup_RestoreRunning
      Definition:     Backup_RestoreRunning
      Pushing section .bss.Backup_RestoreRunning to worklist [originates from symbol Backup_RestoreRunning]
  
  Processing section: .bss.Backup_RestoreRunning from er9x.o
  
  Selecting BoardI6.o to define PINB
      Definition:     PINB
      Pushing section .text.PINB to worklist [originates from symbol PINB]
  
  Processing section: .text.PINB from BoardI6.o
  
  Selecting BoardI6.o to define PIND
      Definition:     PIND
      Pushing section .text.PIND to worklist [originates from symbol PIND]
  
  Processing section: .text.PIND from BoardI6.o
  
  Selecting er9x.o to define Rotary
      Definition:     Rotary
      Pushing section .bss.Rotary to worklist [originates from symbol Rotary]
  
  Processing section: .bss.Rotary from er9x.o
  
  Selecting er9x.o to define StickScrollTimer
      Definition:     StickScrollTimer
      Pushing section .bss.StickScrollTimer to worklist [originates from symbol StickScrollTimer]
  
  Processing section: .bss.StickScrollTimer from er9x.o
  
  Selecting crossfire.o to define crsf_init()
      Definition:     crsf_init()
      Pushing section .text.crsf_init() to worklist [originates from symbol crsf_init()]
  
  Processing section: .text.crsf_init() from crossfire.o
      Load REL relocations for .text.crsf_init() (crossfire.o)
      Reference:      setup_crsf_serial_port
      Reference:      g_crossfile_baudrate_index
      Local section:  .rodata.CROSSFIRE_BAUDRATES from crossfire.o using relocation R_ARM_ABS32
      Reference:      processCrossfireTelemetryData(unsigned char)
  
  Processing section: .rodata.CROSSFIRE_BAUDRATES from crossfire.o
  
  Selecting crossfire.o to define processCrossfireTelemetryData(unsigned char)
      Definition:     processCrossfireTelemetryData(unsigned char)
      Pushing section .text.processCrossfireTelemetryData(unsigned char) to worklist [originates from symbol processCrossfireTelemetryData(unsigned char)]
  
  Processing section: .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryData(unsigned char) (crossfire.o)
      Reference:      processCrossfireTelemetryFrame()
      Reference:      telemetryRxBufferCount
      Reference:      telemetryErrors
      Reference:      telemetryRxBuffer
  
  Selecting crossfire.o to define processCrossfireTelemetryFrame()
      Definition:     processCrossfireTelemetryFrame()
      Pushing section .text.processCrossfireTelemetryFrame() to worklist [originates from symbol processCrossfireTelemetryFrame()]
  
  Processing section: .text.processCrossfireTelemetryFrame() from crossfire.o
      Load REL relocations for .text.processCrossfireTelemetryFrame() (crossfire.o)
      Reference:      checkCrossfireTelemetryFrameCRC()
      Weak reference: bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Reference:      ModuleSyncStatus::update(unsigned short, short)
      Weak reference: bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<3>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Local section:  .bss.moduleSyncStatus from crossfire.o using relocation R_ARM_ABS32
      Weak reference: bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Weak reference: bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Local section:  .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o using relocation R_ARM_ABS32
      Reference:      crossfireTelemetryCallback
  
  Processing section: .bss.moduleSyncStatus from crossfire.o
  
  Processing section: .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
  
  Selecting crossfire.o to define bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Definition:     bool getCrossfireTelemetryValue<1>(unsigned char, int&)
      Pushing section .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) to worklist [originates from symbol bool getCrossfireTelemetryValue<1>(unsigned char, int&)]
  
  Processing section: .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) from crossfire.o
      Load REL relocations for .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) (crossfire.o)
  
  Selecting crossfire.o to define bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Definition:     bool getCrossfireTelemetryValue<2>(unsigned char, int&)
      Pushing section .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) to worklist [originates from symbol bool getCrossfireTelemetryValue<2>(unsigned char, int&)]
  
  Processing section: .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) from crossfire.o
      Load REL relocations for .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) (crossfire.o)
  
  Selecting crossfire.o to define bool getCrossfireTelemetryValue<3>(unsigned char, int&)
      Definition:     bool getCrossfireTelemetryValue<3>(unsigned char, int&)
      Pushing section .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) to worklist [originates from symbol bool getCrossfireTelemetryValue<3>(unsigned char, int&)]
  
  Processing section: .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) from crossfire.o
      Load REL relocations for .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) (crossfire.o)
  
  Selecting crossfire.o to define bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Definition:     bool getCrossfireTelemetryValue<4>(unsigned char, int&)
      Pushing section .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) to worklist [originates from symbol bool getCrossfireTelemetryValue<4>(unsigned char, int&)]
  
  Processing section: .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) from crossfire.o
      Load REL relocations for .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) (crossfire.o)
  
  Selecting crossfire.o to define checkCrossfireTelemetryFrameCRC()
      Definition:     checkCrossfireTelemetryFrameCRC()
      Pushing section .text.checkCrossfireTelemetryFrameCRC() to worklist [originates from symbol checkCrossfireTelemetryFrameCRC()]
  
  Processing section: .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Load REL relocations for .text.checkCrossfireTelemetryFrameCRC() (crossfire.o)
  
  Selecting audio.o to define audioQueue::busy()
      Definition:     audioQueue::busy()
      Pushing section .text.audioQueue::busy() to worklist [originates from symbol audioQueue::busy()]
  
  Processing section: .text.audioQueue::busy() from audio.o
  
  Selecting er9x.o to define audioQueue::driver()
      Definition:     audioQueue::driver()
      Pushing section .text.audioQueue::driver() to worklist [originates from symbol audioQueue::driver()]
  
  Processing section: .text.audioQueue::driver() from er9x.o
      Load REL relocations for .text.audioQueue::driver() (er9x.o)
      Weak reference: audioQueue::driver()::toneCounter
  
  Selecting audio.o to define audioQueue::heartbeat()
      Definition:     audioQueue::heartbeat()
      Pushing section .text.audioQueue::heartbeat() to worklist [originates from symbol audioQueue::heartbeat()]
  
  Processing section: .text.audioQueue::heartbeat() from audio.o
      Load REL relocations for .text.audioQueue::heartbeat() (audio.o)
  
  Selecting audio.o to define audioQueue::audioQueue()
      Definition:     audioQueue::audioQueue()
      Pushing section .text.audioQueue::audioQueue() to worklist [originates from symbol audioQueue::audioQueue()]
  
  Processing section: .text.audioQueue::audioQueue() from audio.o
  
  Selecting crossfire.o to define ModuleSyncStatus::update(unsigned short, short)
      Definition:     ModuleSyncStatus::update(unsigned short, short)
      Pushing section .text.ModuleSyncStatus::update(unsigned short, short) to worklist [originates from symbol ModuleSyncStatus::update(unsigned short, short)]
  
  Processing section: .text.ModuleSyncStatus::update(unsigned short, short) from crossfire.o
      Load REL relocations for .text.ModuleSyncStatus::update(unsigned short, short) (crossfire.o)
  
  Selecting drivers.o to define Key::input(bool, EnumKeys)
      Definition:     Key::input(bool, EnumKeys)
      Pushing section .text.Key::input(bool, EnumKeys) to worklist [originates from symbol Key::input(bool, EnumKeys)]
  
  Processing section: .text.Key::input(bool, EnumKeys) from drivers.o
      Load REL relocations for .text.Key::input(bool, EnumKeys) (drivers.o)
      Reference:      s_evt
      Reference:      Inactivity
  
  Selecting er9x.o to define Inactivity
      Definition:     Inactivity
      Pushing section .bss.Inactivity to worklist [originates from symbol Inactivity]
  
  Processing section: .bss.Inactivity from er9x.o
  
  Selecting er9x.o to define audioQueue::driver()::toneCounter
      Definition:     audioQueue::driver()::toneCounter
      Pushing section .bss.audioQueue::driver()::toneCounter to worklist [originates from symbol audioQueue::driver()::toneCounter]
  
  Processing section: .bss.audioQueue::driver()::toneCounter from er9x.o
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idiv
      Definition:     __aeabi_idiv
      Pushing section .text.libc.__int32_div to worklist [originates from symbol __aeabi_idiv]
  
  Processing section: .text.libc.__int32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsl
      Definition:     __aeabi_llsl
      Pushing section .text.libc.__int64_lsl to worklist [originates from symbol __aeabi_llsl]
  
  Processing section: .text.libc.__int64_lsl from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc2_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memcpy
      Definition:     __aeabi_memcpy
      Pushing section .text.libc.memcpy to worklist [originates from symbol __aeabi_memcpy]
  
  Processing section: .text.libc.memcpy from libc2_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc2_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memset
      Definition:     __aeabi_memset
      Pushing section .text.libc.__aeabi_memset to worklist [originates from symbol __aeabi_memset]
  
  Processing section: .text.libc.__aeabi_memset from libc2_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidiv
      Definition:     __aeabi_uidiv
      Pushing section .text.libc.__uint32_div to worklist [originates from symbol __aeabi_uidiv]
  
  Processing section: .text.libc.__uint32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_uidivmod
      Definition:     __aeabi_uidivmod
      Pushing section .text.libc.__aeabi_uidivmod to worklist [originates from symbol __aeabi_uidivmod]
  
  Processing section: .text.libc.__aeabi_uidivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting BoardI6.o to define a7105_csn_off
      Definition:     a7105_csn_off
      Pushing section .text.a7105_csn_off to worklist [originates from symbol a7105_csn_off]
  
  Processing section: .text.a7105_csn_off from BoardI6.o
  
  Selecting BoardI6.o to define a7105_csn_on
      Definition:     a7105_csn_on
      Pushing section .text.a7105_csn_on to worklist [originates from symbol a7105_csn_on]
  
  Processing section: .text.a7105_csn_on from BoardI6.o
  
  Selecting er9x.o to define audio
      Definition:     audio
      Pushing section .bss.audio to worklist [originates from symbol audio]
  
  Processing section: .bss.audio from er9x.o
  
  Selecting A7105_SPI.o to define bind_phase
      Definition:     bind_phase
      Pushing section .bss.bind_phase to worklist [originates from symbol bind_phase]
  
  Processing section: .bss.bind_phase from A7105_SPI.o
  
  Selecting BoardI6.o to define cli
      Definition:     cli
      Pushing section .text.cli to worklist [originates from symbol cli]
  
  Processing section: .text.cli from BoardI6.o
  
  Selecting crossfire.o to define crossfireTelemetryCallback
      Definition:     crossfireTelemetryCallback
      Pushing section .bss.crossfireTelemetryCallback to worklist [originates from symbol crossfireTelemetryCallback]
  
  Processing section: .bss.crossfireTelemetryCallback from crossfire.o
  
  Selecting BoardI6.o to define crsf_send_data
      Definition:     crsf_send_data
      Pushing section .text.crsf_send_data to worklist [originates from symbol crsf_send_data]
  
  Processing section: .text.crsf_send_data from BoardI6.o
  
  Selecting drivers.o to define g_blinkTmr10ms
      Definition:     g_blinkTmr10ms
      Pushing section .bss.g_blinkTmr10ms to worklist [originates from symbol g_blinkTmr10ms]
  
  Processing section: .bss.g_blinkTmr10ms from drivers.o
  
  Selecting menus.o to define g_chans512
      Definition:     g_chans512
      Pushing section .bss.g_chans512 to worklist [originates from symbol g_chans512]
  
  Processing section: .bss.g_chans512 from menus.o
  
  Selecting crossfire.o to define g_crossfile_baudrate_index
      Definition:     g_crossfile_baudrate_index
      Pushing section .data.g_crossfile_baudrate_index to worklist [originates from symbol g_crossfile_baudrate_index]
  
  Processing section: .data.g_crossfile_baudrate_index from crossfire.o
  
  Selecting crossfire.o to define g_crossfire
      Definition:     g_crossfire
      Pushing section .bss.g_crossfire to worklist [originates from symbol g_crossfire]
  
  Processing section: .bss.g_crossfire from crossfire.o
  
  Selecting er9x.o to define g_eeGeneral
      Definition:     g_eeGeneral
      Pushing section .bss.g_eeGeneral to worklist [originates from symbol g_eeGeneral]
  
  Processing section: .bss.g_eeGeneral from er9x.o
  
  Selecting er9x.o to define g_model
      Definition:     g_model
      Pushing section .bss.g_model to worklist [originates from symbol g_model]
  
  Processing section: .bss.g_model from er9x.o
  
  Selecting er9x.o to define g_ppmIns
      Definition:     g_ppmIns
      Pushing section .bss.g_ppmIns to worklist [originates from symbol g_ppmIns]
  
  Processing section: .bss.g_ppmIns from er9x.o
  
  Selecting drivers.o to define g_tmr10ms
      Definition:     g_tmr10ms
      Pushing section .bss.g_tmr10ms to worklist [originates from symbol g_tmr10ms]
  
  Processing section: .bss.g_tmr10ms from drivers.o
  
  Selecting er9x.o to define g_tmr16KHz
      Definition:     g_tmr16KHz
      Pushing section .bss.g_tmr16KHz to worklist [originates from symbol g_tmr16KHz]
  
  Processing section: .bss.g_tmr16KHz from er9x.o
  
  Selecting pulses.o to define heartbeat
      Definition:     heartbeat
      Pushing section .bss.heartbeat to worklist [originates from symbol heartbeat]
  
  Processing section: .bss.heartbeat from pulses.o
  
  Selecting A7105_SPI.o to define hopping_frequency
      Definition:     hopping_frequency
      Pushing section .bss.hopping_frequency to worklist [originates from symbol hopping_frequency]
  
  Processing section: .bss.hopping_frequency from A7105_SPI.o
  
  Selecting A7105_SPI.o to define hopping_frequency_no
      Definition:     hopping_frequency_no
      Pushing section .bss.hopping_frequency_no to worklist [originates from symbol hopping_frequency_no]
  
  Processing section: .bss.hopping_frequency_no from A7105_SPI.o
  
  Selecting AFHDS.o to define initAFHDS
      Definition:     initAFHDS
      Pushing section .text.initAFHDS to worklist [originates from symbol initAFHDS]
  
  Processing section: .text.initAFHDS from AFHDS.o
      Load REL relocations for .text.initAFHDS (AFHDS.o)
      Reference:      A7105_Init()
      Reference:      GetChipID
      Reference:      SetPRTTimPeriod
      Local section:  .rodata.AFHDS_tx_channels from AFHDS.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.AFHDS_tx_channels from AFHDS.o
  
  Selecting BoardI6.o to define GetChipID
      Definition:     GetChipID
      Pushing section .text.GetChipID to worklist [originates from symbol GetChipID]
  
  Processing section: .text.GetChipID from BoardI6.o
  
  Selecting BoardI6.o to define SetPRTTimPeriod
      Definition:     SetPRTTimPeriod
      Pushing section .text.SetPRTTimPeriod to worklist [originates from symbol SetPRTTimPeriod]
  
  Processing section: .text.SetPRTTimPeriod from BoardI6.o
      Load REL relocations for .text.SetPRTTimPeriod (BoardI6.o)
      Reference:      crsf_current_period()
  
  Selecting A7105_SPI.o to define A7105_Init()
      Definition:     A7105_Init()
      Pushing section .text.A7105_Init() to worklist [originates from symbol A7105_Init()]
  
  Processing section: .text.A7105_Init() from A7105_SPI.o
      Load REL relocations for .text.A7105_Init() (A7105_SPI.o)
      Reference:      A7105_Reset()
      Reference:      mDelay
      Reference:      A7105_WriteID(unsigned int)
      Reference:      AFHDS2A_A7105_regs
      Reference:      AFHDS_A7105_regs
  
  Selecting BoardI6.o to define AFHDS2A_A7105_regs
      Definition:     AFHDS2A_A7105_regs
      Pushing section .rodata.AFHDS2A_A7105_regs to worklist [originates from symbol AFHDS2A_A7105_regs]
  
  Processing section: .rodata.AFHDS2A_A7105_regs from BoardI6.o
  
  Selecting BoardI6.o to define AFHDS_A7105_regs
      Definition:     AFHDS_A7105_regs
      Pushing section .rodata.AFHDS_A7105_regs to worklist [originates from symbol AFHDS_A7105_regs]
  
  Processing section: .rodata.AFHDS_A7105_regs from BoardI6.o
  
  Selecting A7105_SPI.o to define A7105_Reset()
      Definition:     A7105_Reset()
      Pushing section .text.A7105_Reset() to worklist [originates from symbol A7105_Reset()]
  
  Processing section: .text.A7105_Reset() from A7105_SPI.o
      Load REL relocations for .text.A7105_Reset() (A7105_SPI.o)
  
  Selecting A7105_SPI.o to define A7105_WriteID(unsigned int)
      Definition:     A7105_WriteID(unsigned int)
      Pushing section .text.A7105_WriteID(unsigned int) to worklist [originates from symbol A7105_WriteID(unsigned int)]
  
  Processing section: .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Load REL relocations for .text.A7105_WriteID(unsigned int) (A7105_SPI.o)
  
  Selecting crossfire.o to define crsf_current_period()
      Definition:     crsf_current_period()
      Pushing section .text.crsf_current_period() to worklist [originates from symbol crsf_current_period()]
  
  Processing section: .text.crsf_current_period() from crossfire.o
      Load REL relocations for .text.crsf_current_period() (crossfire.o)
      Local section:  .rodata.CROSSFIRE_PERIODS from crossfire.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.CROSSFIRE_PERIODS from crossfire.o
  
  Selecting AFHDS2A_a7105.o to define initAFHDS2A
      Definition:     initAFHDS2A
      Pushing section .text.initAFHDS2A to worklist [originates from symbol initAFHDS2A]
  
  Processing section: .text.initAFHDS2A from AFHDS2A_a7105.o
      Load REL relocations for .text.initAFHDS2A (AFHDS2A_a7105.o)
  
  Selecting drivers.o to define keys
      Definition:     keys
      Pushing section .bss.keys to worklist [originates from symbol keys]
  
  Processing section: .bss.keys from drivers.o
  
  Selecting BoardI6.o to define mDelay
      Definition:     mDelay
      Pushing section .text.mDelay to worklist [originates from symbol mDelay]
  
  Processing section: .text.mDelay from BoardI6.o
  
  Selecting main.o to define main
      Definition:     main
      Pushing section .text.main to worklist [originates from symbol main]
  
  Processing section: .text.main from main.o
      Load REL relocations for .text.main (main.o)
      Reference:      HW_Init
      Reference:      mainER()
  
  Selecting BoardI6.o to define HW_Init
      Definition:     HW_Init
      Pushing section .text.HW_Init to worklist [originates from symbol HW_Init]
  
  Processing section: .text.HW_Init from BoardI6.o
  
  Selecting er9x.o to define mainER()
      Definition:     mainER()
      Pushing section .text.mainER() to worklist [originates from symbol mainER()]
  
  Processing section: .text.mainER() from er9x.o
      Load REL relocations for .text.mainER() (er9x.o)
      Reference:      eeReadGeneral()
      Reference:      lcd_init()
      Reference:      eeGeneralDefault()
      Reference:      eeWriteGeneral()
      Reference:      lcd_puts_Pleft(unsigned char, char const*)
      Reference:      refreshDiplay()
      Reference:      eeLoadModel(unsigned char)
      Weak reference: keyDown()
      Reference:      doBackLightVoice(unsigned char)
      Reference:      setVolume(unsigned char)
      Reference:      audioVoiceDefevent(unsigned char, unsigned char)
      Reference:      check_backlight_voice()
      Reference:      lcd_clear()
      Reference:      lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Local section:  .text.clearKeyEvents() from er9x.o using relocation R_ARM_THM_CALL
      Reference:      getADC_osmp
      Reference:      stickMoveValue()
      Weak reference: keyDown()
      Reference:      EeFsGetFree()
      Reference:      alert(char const*)
      Reference:      checkTHR()
      Reference:      checkSwitches()
      Reference:      putVoiceQueueUpper(unsigned char)
      Reference:      perOutPhase(short*, unsigned char)
      Reference:      startPulses()
      Reference:      mainSequence()
      Reference:      serialDat0
      Reference:      g_menuStack
      Reference:      menuProc0(unsigned char)
      Local section:  .rodata..L.str.8 from er9x.o using relocation R_ARM_ABS32
      Reference:      SystemOptions
      Reference:      stickMoved
      Local section:  .rodata..L.str.9 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.10 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.11 from er9x.o using relocation R_ARM_ABS32
      Reference:      s_anaFilt
      Reference:      g_vbat100mV
      Local section:  .rodata..L.str.12 from er9x.o using relocation R_ARM_ABS32
      Reference:      sysFlags
      Local section:  .rodata..L.str.13 from er9x.o using relocation R_ARM_ABS32
      Reference:      CurrentPhase
      Reference:      Main_running
      Reference:      menuProcModelSelect(unsigned char)
  
  Processing section: .text.clearKeyEvents() from er9x.o
      Load REL relocations for .text.clearKeyEvents() (er9x.o)
      Weak reference: keyDown()
  
  Processing section: .rodata..L.str.8 from er9x.o
  
  Processing section: .rodata..L.str.9 from er9x.o
  
  Processing section: .rodata..L.str.10 from er9x.o
  
  Processing section: .rodata..L.str.11 from er9x.o
  
  Processing section: .rodata..L.str.12 from er9x.o
  
  Processing section: .rodata..L.str.13 from er9x.o
  
  Selecting menus.o to define CurrentPhase
      Definition:     CurrentPhase
      Pushing section .bss.CurrentPhase to worklist [originates from symbol CurrentPhase]
  
  Processing section: .bss.CurrentPhase from menus.o
  
  Selecting er9x.o to define Main_running
      Definition:     Main_running
      Pushing section .bss.Main_running to worklist [originates from symbol Main_running]
  
  Processing section: .bss.Main_running from er9x.o
  
  Selecting er9x.o to define SystemOptions
      Definition:     SystemOptions
      Pushing section .bss.SystemOptions to worklist [originates from symbol SystemOptions]
  
  Processing section: .bss.SystemOptions from er9x.o
  
  Selecting file.o to define EeFsGetFree()
      Definition:     EeFsGetFree()
      Pushing section .text.EeFsGetFree() to worklist [originates from symbol EeFsGetFree()]
  
  Processing section: .text.EeFsGetFree() from file.o
      Load REL relocations for .text.EeFsGetFree() (file.o)
      Local section:  .text.EeFsGetLink(unsigned char) from file.o using relocation R_ARM_THM_CALL
      Reference:      eeFs
  
  Processing section: .text.EeFsGetLink(unsigned char) from file.o
      Load REL relocations for .text.EeFsGetLink(unsigned char) (file.o)
      Local section:  .text.EeFsRead(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsRead(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsRead(unsigned char, unsigned char) (file.o)
      Reference:      eeprom_read_block(void*, void const*, unsigned int)
  
  Selecting pers.o to define eeLoadModel(unsigned char)
      Definition:     eeLoadModel(unsigned char)
      Pushing section .text.eeLoadModel(unsigned char) to worklist [originates from symbol eeLoadModel(unsigned char)]
  
  Processing section: .text.eeLoadModel(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModel(unsigned char) (pers.o)
      Reference:      eeLoadModelForBackup(unsigned char)
      Reference:      modelDefaultWrite(unsigned char)
      Local section:  .text.validateName(char*, unsigned char) from pers.o using relocation R_ARM_THM_CALL
      Reference:      mixaddress(unsigned char)
      Reference:      modeFixValue(unsigned char)
      Reference:      CS_STATE(unsigned char)
      Reference:      eeDirty(unsigned char)
      Reference:      eeWaitComplete()
      Reference:      Vario_play(int, bool)
      Reference:      resetTimer1()
      Reference:      resetTimer2()
      Reference:      Xmem
      Local section:  .rodata..L.str.2 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from pers.o using relocation R_ARM_ABS32
      Reference:      TimerConfig
  
  Processing section: .text.validateName(char*, unsigned char) from pers.o
      Load REL relocations for .text.validateName(char*, unsigned char) (pers.o)
      Reference:      char2idx(char)
      Reference:      idx2char(unsigned char)
  
  Processing section: .rodata..L.str.2 from pers.o
  
  Processing section: .rodata..L.str.3 from pers.o
  
  Selecting er9x.o to define TimerConfig
      Definition:     TimerConfig
      Pushing section .bss.TimerConfig to worklist [originates from symbol TimerConfig]
  
  Processing section: .bss.TimerConfig from er9x.o
  
  Selecting menus.o to define Xmem
      Definition:     Xmem
      Pushing section .bss.Xmem to worklist [originates from symbol Xmem]
  
  Processing section: .bss.Xmem from menus.o
  
  Selecting Vario.o to define Vario_play(int, bool)
      Definition:     Vario_play(int, bool)
      Pushing section .text.Vario_play(int, bool) to worklist [originates from symbol Vario_play(int, bool)]
  
  Processing section: .text.Vario_play(int, bool) from Vario.o
      Load REL relocations for .text.Vario_play(int, bool) (Vario.o)
      Local section:  .rodata.VarioTab from Vario.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.VarioTab from Vario.o
  
  Selecting er9x.o to define mixaddress(unsigned char)
      Definition:     mixaddress(unsigned char)
      Pushing section .text.mixaddress(unsigned char) to worklist [originates from symbol mixaddress(unsigned char)]
  
  Processing section: .text.mixaddress(unsigned char) from er9x.o
      Load REL relocations for .text.mixaddress(unsigned char) (er9x.o)
  
  Selecting menus.o to define perOutPhase(short*, unsigned char)
      Definition:     perOutPhase(short*, unsigned char)
      Pushing section .text.perOutPhase(short*, unsigned char) to worklist [originates from symbol perOutPhase(short*, unsigned char)]
  
  Processing section: .text.perOutPhase(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOutPhase(short*, unsigned char) (menus.o)
      Reference:      getFlightPhase()
      Reference:      perOut(short*, unsigned char)
      Local section:  .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o using relocation R_ARM_ABS32
      Reference:      Fade
      Reference:      tick10ms
  
  Processing section: .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
  
  Selecting menus.o to define Fade
      Definition:     Fade
      Pushing section .bss.Fade to worklist [originates from symbol Fade]
  
  Processing section: .bss.Fade from menus.o
  
  Selecting menus.o to define resetTimer1()
      Definition:     resetTimer1()
      Pushing section .text.resetTimer1() to worklist [originates from symbol resetTimer1()]
  
  Processing section: .text.resetTimer1() from menus.o
      Load REL relocations for .text.resetTimer1() (menus.o)
      Reference:      resetTimern(unsigned char)
      Reference:      TimeGlobals
  
  Selecting menus.o to define TimeGlobals
      Definition:     TimeGlobals
      Pushing section .bss.TimeGlobals to worklist [originates from symbol TimeGlobals]
  
  Processing section: .bss.TimeGlobals from menus.o
  
  Selecting menus.o to define resetTimer2()
      Definition:     resetTimer2()
      Pushing section .text.resetTimer2() to worklist [originates from symbol resetTimer2()]
  
  Processing section: .text.resetTimer2() from menus.o
      Load REL relocations for .text.resetTimer2() (menus.o)
  
  Selecting menus.o to define resetTimern(unsigned char)
      Definition:     resetTimern(unsigned char)
      Pushing section .text.resetTimern(unsigned char) to worklist [originates from symbol resetTimern(unsigned char)]
  
  Processing section: .text.resetTimern(unsigned char) from menus.o
      Load REL relocations for .text.resetTimern(unsigned char) (menus.o)
      Reference:      s_timer
  
  Selecting pulses.o to define startPulses()
      Definition:     startPulses()
      Pushing section .text.startPulses() to worklist [originates from symbol startPulses()]
  
  Processing section: .text.startPulses() from pulses.o
      Load REL relocations for .text.startPulses() (pulses.o)
  
  Selecting lcd.o to define lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  
  Selecting lcd.o to define lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Definition:     lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
      Pushing section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) to worklist [originates from symbol lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)]
  
  Processing section: .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd.o)
      Reference:      DisplayBuf
      Local section:  .rodata.font from lcd.o using relocation R_ARM_ABS32
      Local section:  .rodata.font_dblsize from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.font from lcd.o
  
  Processing section: .rodata.font_dblsize from lcd.o
  
  Selecting lcd.o to define DisplayBuf
      Definition:     DisplayBuf
      Pushing section .bss.DisplayBuf to worklist [originates from symbol DisplayBuf]
  
  Processing section: .bss.DisplayBuf from lcd.o
  
  Selecting er9x.o to define mainSequence()
      Definition:     mainSequence()
      Pushing section .text.mainSequence() to worklist [originates from symbol mainSequence()]
  
  Processing section: .text.mainSequence() from er9x.o
      Load REL relocations for .text.mainSequence() (er9x.o)
      Reference:      timer()
      Reference:      trace()
      Reference:      eeCheck(bool)
      Reference:      menuPressed()
      Reference:      getTrimFlightPhase(unsigned char, unsigned char)
      Reference:      getTrimValue(unsigned char, unsigned char)
      Reference:      setTrimValue(unsigned char, unsigned char, short)
      Reference:      killEvents(unsigned char)
      Reference:      audioDefevent(unsigned char)
      Reference:      audioEvent(unsigned char, unsigned short)
      Reference:      calcStickScroll(unsigned char)
      Reference:      CalcScaleNest
      Local section:  .bss.perMain()::lastTMR from er9x.o using relocation R_ARM_ABS32
      Reference:      s_noHi
      Local section:  .bss.LongMenuTimer from er9x.o using relocation R_ARM_ABS32
      Reference:      calibratedStick
      Reference:      P1values
      Reference:      scroll_disabled
      Reference:      g_menuStackPtr
      Reference:      PopupData
      Reference:      stickScramble
      Reference:      CurrentVolume
      Reference:      StickScrollAllowed
      Local section:  .bss.perMain()::repeater from er9x.o using relocation R_ARM_ABS32
      Reference:      getGvarSourceValue(unsigned char)
      Reference:      almess(char const*, unsigned char)
      Weak reference: keyDown()
      Reference:      getSwitch00(signed char)
      Reference:      processVoiceAlarms()
      Reference:      calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Reference:      AlertMessage
      Local section:  .bss.perMain()::alertKey from er9x.o using relocation R_ARM_ABS32
      Reference:      EnterMenu
      Reference:      Tevent
      Reference:      StepSize
      Local section:  .bss.perMain()::s_batCheck from er9x.o using relocation R_ARM_ABS32
      Reference:      g_LightOffCounter
      Reference:      g_latency
      Local section:  .bss.mainSequence()::timer from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.csTypeTable from er9x.o using relocation R_ARM_ABS32
      Reference:      CsTimer
      Reference:      Last_switch
  
  Processing section: .bss.perMain()::lastTMR from er9x.o
  
  Processing section: .bss.LongMenuTimer from er9x.o
  
  Processing section: .bss.perMain()::repeater from er9x.o
  
  Processing section: .bss.perMain()::alertKey from er9x.o
  
  Processing section: .bss.perMain()::s_batCheck from er9x.o
  
  Processing section: .bss.mainSequence()::timer from er9x.o
  
  Processing section: .rodata.csTypeTable from er9x.o
  
  Selecting er9x.o to define AlertMessage
      Definition:     AlertMessage
      Pushing section .bss.AlertMessage to worklist [originates from symbol AlertMessage]
  
  Processing section: .bss.AlertMessage from er9x.o
  
  Selecting menus.o to define CalcScaleNest
      Definition:     CalcScaleNest
      Pushing section .bss.CalcScaleNest to worklist [originates from symbol CalcScaleNest]
  
  Processing section: .bss.CalcScaleNest from menus.o
  
  Selecting er9x.o to define CsTimer
      Definition:     CsTimer
      Pushing section .bss.CsTimer to worklist [originates from symbol CsTimer]
  
  Processing section: .bss.CsTimer from er9x.o
  
  Selecting er9x.o to define CurrentVolume
      Definition:     CurrentVolume
      Pushing section .bss.CurrentVolume to worklist [originates from symbol CurrentVolume]
  
  Processing section: .bss.CurrentVolume from er9x.o
  
  Selecting er9x.o to define EnterMenu
      Definition:     EnterMenu
      Pushing section .bss.EnterMenu to worklist [originates from symbol EnterMenu]
  
  Processing section: .bss.EnterMenu from er9x.o
  
  Selecting er9x.o to define Last_switch
      Definition:     Last_switch
      Pushing section .bss.Last_switch to worklist [originates from symbol Last_switch]
  
  Processing section: .bss.Last_switch from er9x.o
  
  Selecting er9x.o to define P1values
      Definition:     P1values
      Pushing section .bss.P1values to worklist [originates from symbol P1values]
  
  Processing section: .bss.P1values from er9x.o
  
  Selecting menus.o to define PopupData
      Definition:     PopupData
      Pushing section .bss.PopupData to worklist [originates from symbol PopupData]
  
  Processing section: .bss.PopupData from menus.o
  
  Selecting er9x.o to define StepSize
      Definition:     StepSize
      Pushing section .bss.StepSize to worklist [originates from symbol StepSize]
  
  Processing section: .bss.StepSize from er9x.o
  
  Selecting er9x.o to define StickScrollAllowed
      Definition:     StickScrollAllowed
      Pushing section .bss.StickScrollAllowed to worklist [originates from symbol StickScrollAllowed]
  
  Processing section: .bss.StickScrollAllowed from er9x.o
  
  Selecting er9x.o to define Tevent
      Definition:     Tevent
      Pushing section .bss.Tevent to worklist [originates from symbol Tevent]
  
  Processing section: .bss.Tevent from er9x.o
  
  Selecting audio.o to define audioEvent(unsigned char, unsigned short)
      Definition:     audioEvent(unsigned char, unsigned short)
      Pushing section .text.audioEvent(unsigned char, unsigned short) to worklist [originates from symbol audioEvent(unsigned char, unsigned short)]
  
  Processing section: .text.audioEvent(unsigned char, unsigned short) from audio.o
      Load REL relocations for .text.audioEvent(unsigned char, unsigned short) (audio.o)
      Reference:      audioQueue::event(unsigned char, unsigned char)
  
  Selecting drivers.o to define killEvents(unsigned char)
      Definition:     killEvents(unsigned char)
      Pushing section .text.killEvents(unsigned char) to worklist [originates from symbol killEvents(unsigned char)]
  
  Processing section: .text.killEvents(unsigned char) from drivers.o
      Load REL relocations for .text.killEvents(unsigned char) (drivers.o)
  
  Selecting menus.o to define calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Definition:     calc_scaler(unsigned char, unsigned char*, unsigned char*)
      Pushing section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) to worklist [originates from symbol calc_scaler(unsigned char, unsigned char*, unsigned char*)]
  
  Processing section: .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Load REL relocations for .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (menus.o)
      Reference:      getValue(unsigned char)
  
  Selecting er9x.o to define getSwitch00(signed char)
      Definition:     getSwitch00(signed char)
      Pushing section .text.getSwitch00(signed char) to worklist [originates from symbol getSwitch00(signed char)]
  
  Processing section: .text.getSwitch00(signed char) from er9x.o
      Load REL relocations for .text.getSwitch00(signed char) (er9x.o)
      Reference:      getSwitch(signed char, bool, unsigned char)
  
  Selecting drivers.o to define menuPressed()
      Definition:     menuPressed()
      Pushing section .text.menuPressed() to worklist [originates from symbol menuPressed()]
  
  Processing section: .text.menuPressed() from drivers.o
      Load REL relocations for .text.menuPressed() (drivers.o)
  
  Selecting er9x.o to define getTrimValue(unsigned char, unsigned char)
      Definition:     getTrimValue(unsigned char, unsigned char)
      Pushing section .text.getTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimValue(unsigned char, unsigned char) (er9x.o)
      Reference:      getRawTrimValue(unsigned char, unsigned char)
  
  Selecting er9x.o to define modeFixValue(unsigned char)
      Definition:     modeFixValue(unsigned char)
      Pushing section .text.modeFixValue(unsigned char) to worklist [originates from symbol modeFixValue(unsigned char)]
  
  Processing section: .text.modeFixValue(unsigned char) from er9x.o
      Load REL relocations for .text.modeFixValue(unsigned char) (er9x.o)
  
  Selecting er9x.o to define setTrimValue(unsigned char, unsigned char, short)
      Definition:     setTrimValue(unsigned char, unsigned char, short)
      Pushing section .text.setTrimValue(unsigned char, unsigned char, short) to worklist [originates from symbol setTrimValue(unsigned char, unsigned char, short)]
  
  Processing section: .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Load REL relocations for .text.setTrimValue(unsigned char, unsigned char, short) (er9x.o)
  
  Selecting audio.o to define audioDefevent(unsigned char)
      Definition:     audioDefevent(unsigned char)
      Pushing section .text.audioDefevent(unsigned char) to worklist [originates from symbol audioDefevent(unsigned char)]
  
  Processing section: .text.audioDefevent(unsigned char) from audio.o
      Load REL relocations for .text.audioDefevent(unsigned char) (audio.o)
  
  Selecting er9x.o to define checkSwitches()
      Definition:     checkSwitches()
      Pushing section .text.checkSwitches() to worklist [originates from symbol checkSwitches()]
  
  Processing section: .text.checkSwitches() from er9x.o
      Load REL relocations for .text.checkSwitches() (er9x.o)
      Reference:      getCurrentSwitchStates()
      Reference:      putWarnSwitch(unsigned char, unsigned char)
      Weak reference: keyDown()
      Local section:  .rodata..L.str.6 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.6 from er9x.o
  
  Selecting pers.o to define eeReadGeneral()
      Definition:     eeReadGeneral()
      Pushing section .text.eeReadGeneral() to worklist [originates from symbol eeReadGeneral()]
  
  Processing section: .text.eeReadGeneral() from pers.o
      Load REL relocations for .text.eeReadGeneral() (pers.o)
      Reference:      EeFsOpen()
      Reference:      EeFsck()
      Reference:      EFile::openRd(unsigned char)
      Reference:      __aeabi_memclr
      Reference:      EFile::readRlc(unsigned char*, unsigned short)
      Reference:      evalChkSum()
      Reference:      theFile
  
  Selecting pers.o to define evalChkSum()
      Definition:     evalChkSum()
      Pushing section .text.evalChkSum() to worklist [originates from symbol evalChkSum()]
  
  Processing section: .text.evalChkSum() from pers.o
      Load REL relocations for .text.evalChkSum() (pers.o)
  
  Selecting er9x.o to define putWarnSwitch(unsigned char, unsigned char)
      Definition:     putWarnSwitch(unsigned char, unsigned char)
      Pushing section .text.putWarnSwitch(unsigned char, unsigned char) to worklist [originates from symbol putWarnSwitch(unsigned char, unsigned char)]
  
  Processing section: .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putWarnSwitch(unsigned char, unsigned char) (er9x.o)
      Reference:      lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Reference:      Str_Switches
  
  Selecting er9x.o to define Str_Switches
      Definition:     Str_Switches
      Pushing section .rodata.Str_Switches to worklist [originates from symbol Str_Switches]
  
  Processing section: .rodata.Str_Switches from er9x.o
  
  Selecting lcd.o to define refreshDiplay()
      Definition:     refreshDiplay()
      Pushing section .text.refreshDiplay() to worklist [originates from symbol refreshDiplay()]
  
  Processing section: .text.refreshDiplay() from lcd.o
      Load REL relocations for .text.refreshDiplay() (lcd.o)
      Reference:      lcd_hline(unsigned char, unsigned char, signed char)
      Reference:      rs_1
      Reference:      LCD_DATA
      Reference:      rd_1
      Reference:      rd_0
      Reference:      EepromActive
      Reference:      LcdLock
      Local section:  .text.lcdSendCtl(unsigned char) from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .text.lcdSendCtl(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSendCtl(unsigned char) (lcd.o)
      Reference:      rs_0
  
  Selecting lcd.o to define EepromActive
      Definition:     EepromActive
      Pushing section .bss.EepromActive to worklist [originates from symbol EepromActive]
  
  Processing section: .bss.EepromActive from lcd.o
  
  Selecting BoardI6.o to define LCD_DATA
      Definition:     LCD_DATA
      Pushing section .text.LCD_DATA to worklist [originates from symbol LCD_DATA]
  
  Processing section: .text.LCD_DATA from BoardI6.o
  
  Selecting lcd.o to define LcdLock
      Definition:     LcdLock
      Pushing section .bss.LcdLock to worklist [originates from symbol LcdLock]
  
  Processing section: .bss.LcdLock from lcd.o
  
  Selecting pers.o to define eeWaitComplete()
      Definition:     eeWaitComplete()
      Pushing section .text.eeWaitComplete() to worklist [originates from symbol eeWaitComplete()]
  
  Processing section: .text.eeWaitComplete() from pers.o
      Load REL relocations for .text.eeWaitComplete() (pers.o)
      Local section:  .bss.s_eeDirtyMsk from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeDirtyMsk from pers.o
  
  Selecting pers.o to define eeWriteGeneral()
      Definition:     eeWriteGeneral()
      Pushing section .text.eeWriteGeneral() to worklist [originates from symbol eeWriteGeneral()]
  
  Processing section: .text.eeWriteGeneral() from pers.o
      Load REL relocations for .text.eeWriteGeneral() (pers.o)
      Reference:      alertx(char const*, bool)
      Reference:      message(char const*)
      Reference:      EeFsFormat()
      Reference:      EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Local section:  .rodata..L.str.4 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from pers.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from pers.o
  
  Processing section: .rodata..L.str.5 from pers.o
  
  Processing section: .rodata..L.str.6 from pers.o
  
  Selecting file.o to define EeFsFormat()
      Definition:     EeFsFormat()
      Pushing section .text.EeFsFormat() to worklist [originates from symbol EeFsFormat()]
  
  Processing section: .text.EeFsFormat() from file.o
      Load REL relocations for .text.EeFsFormat() (file.o)
      Reference:      __aeabi_memclr4
      Local section:  .text.EeFsSetLink(unsigned char, unsigned char) from file.o using relocation R_ARM_THM_CALL
      Local section:  .text.EeFsFlush() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EeFsSetLink(unsigned char, unsigned char) (file.o)
      Reference:      eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  
  Processing section: .text.EeFsFlush() from file.o
      Load REL relocations for .text.EeFsFlush() (file.o)
  
  Selecting er9x.o to define getFlightPhase()
      Definition:     getFlightPhase()
      Pushing section .text.getFlightPhase() to worklist [originates from symbol getFlightPhase()]
  
  Processing section: .text.getFlightPhase() from er9x.o
      Load REL relocations for .text.getFlightPhase() (er9x.o)
  
  Selecting lcd.o to define lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Definition:     lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_puts_Pleft(unsigned char, char const*)
      Definition:     lcd_puts_Pleft(unsigned char, char const*)
      Pushing section .text.lcd_puts_Pleft(unsigned char, char const*) to worklist [originates from symbol lcd_puts_Pleft(unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_Pleft(unsigned char, char const*) (lcd.o)
      Reference:      lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  
  Selecting lcd.o to define lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting er9x.o to define stickMoveValue()
      Definition:     stickMoveValue()
      Pushing section .text.stickMoveValue() to worklist [originates from symbol stickMoveValue()]
  
  Processing section: .text.stickMoveValue() from er9x.o
      Load REL relocations for .text.stickMoveValue() (er9x.o)
      Reference:      anaIn(unsigned char)
  
  Selecting er9x.o to define calcStickScroll(unsigned char)
      Definition:     calcStickScroll(unsigned char)
      Pushing section .text.calcStickScroll(unsigned char) to worklist [originates from symbol calcStickScroll(unsigned char)]
  
  Processing section: .text.calcStickScroll(unsigned char) from er9x.o
      Load REL relocations for .text.calcStickScroll(unsigned char) (er9x.o)
      Reference:      phyStick
      Local section:  .rodata.rate from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.rate from er9x.o
  
  Selecting drivers.o to define eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Definition:     eeWriteBlockCmp(void const*, unsigned short, unsigned int)
      Pushing section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) to worklist [originates from symbol eeWriteBlockCmp(void const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (drivers.o)
      Reference:      eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Reference:      ee_waite()
      Reference:      i2c_master
      Reference:      i2c_buffer
  
  Selecting er9x.o to define getRawTrimValue(unsigned char, unsigned char)
      Definition:     getRawTrimValue(unsigned char, unsigned char)
      Pushing section .text.getRawTrimValue(unsigned char, unsigned char) to worklist [originates from symbol getRawTrimValue(unsigned char, unsigned char)]
  
  Processing section: .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getRawTrimValue(unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define doBackLightVoice(unsigned char)
      Definition:     doBackLightVoice(unsigned char)
      Pushing section .text.doBackLightVoice(unsigned char) to worklist [originates from symbol doBackLightVoice(unsigned char)]
  
  Processing section: .text.doBackLightVoice(unsigned char) from er9x.o
      Load REL relocations for .text.doBackLightVoice(unsigned char) (er9x.o)
  
  Selecting pers.o to define eeGeneralDefault()
      Definition:     eeGeneralDefault()
      Pushing section .text.eeGeneralDefault() to worklist [originates from symbol eeGeneralDefault()]
  
  Processing section: .text.eeGeneralDefault() from pers.o
      Load REL relocations for .text.eeGeneralDefault() (pers.o)
      Reference:      setNameP(char*, char const*)
      Local section:  .rodata..L.str from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from pers.o
  
  Selecting drivers.o to define eeprom_read_block(void*, void const*, unsigned int)
      Definition:     eeprom_read_block(void*, void const*, unsigned int)
      Pushing section .text.eeprom_read_block(void*, void const*, unsigned int) to worklist [originates from symbol eeprom_read_block(void*, void const*, unsigned int)]
  
  Processing section: .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_read_block(void*, void const*, unsigned int) (drivers.o)
  
  Selecting pers.o to define modelDefaultWrite(unsigned char)
      Definition:     modelDefaultWrite(unsigned char)
      Pushing section .text.modelDefaultWrite(unsigned char) to worklist [originates from symbol modelDefaultWrite(unsigned char)]
  
  Processing section: .text.modelDefaultWrite(unsigned char) from pers.o
      Load REL relocations for .text.modelDefaultWrite(unsigned char) (pers.o)
      Reference:      div
      Reference:      applyTemplate()
      Reference:      modelSave(unsigned char)
      Local section:  .rodata..L.str.1 from pers.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from pers.o
  
  Selecting templates.o to define applyTemplate()
      Definition:     applyTemplate()
      Pushing section .text.applyTemplate() to worklist [originates from symbol applyTemplate()]
  
  Processing section: .text.applyTemplate() from templates.o
      Load REL relocations for .text.applyTemplate() (templates.o)
      Reference:      bchout_ar
      Reference:      setMix(unsigned char, unsigned char)
  
  Selecting audio.o to define audioVoiceDefevent(unsigned char, unsigned char)
      Definition:     audioVoiceDefevent(unsigned char, unsigned char)
      Pushing section .text.audioVoiceDefevent(unsigned char, unsigned char) to worklist [originates from symbol audioVoiceDefevent(unsigned char, unsigned char)]
  
  Processing section: .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioVoiceDefevent(unsigned char, unsigned char) (audio.o)
      Reference:      putVoiceQueue(unsigned char)
  
  Selecting er9x.o to define putVoiceQueue(unsigned char)
      Definition:     putVoiceQueue(unsigned char)
      Pushing section .text.putVoiceQueue(unsigned char) to worklist [originates from symbol putVoiceQueue(unsigned char)]
  
  Processing section: .text.putVoiceQueue(unsigned char) from er9x.o
      Load REL relocations for .text.putVoiceQueue(unsigned char) (er9x.o)
      Reference:      putVoiceQueueLong(unsigned short)
  
  Selecting er9x.o to define putVoiceQueueLong(unsigned short)
      Definition:     putVoiceQueueLong(unsigned short)
      Pushing section .text.putVoiceQueueLong(unsigned short) to worklist [originates from symbol putVoiceQueueLong(unsigned short)]
  
  Processing section: .text.putVoiceQueueLong(unsigned short) from er9x.o
      Load REL relocations for .text.putVoiceQueueLong(unsigned short) (er9x.o)
      Reference:      Voice
  
  Selecting audio.o to define Voice
      Definition:     Voice
      Pushing section .bss.Voice to worklist [originates from symbol Voice]
  
  Processing section: .bss.Voice from audio.o
  
  Selecting er9x.o to define getGvarSourceValue(unsigned char)
      Definition:     getGvarSourceValue(unsigned char)
      Pushing section .text.getGvarSourceValue(unsigned char) to worklist [originates from symbol getGvarSourceValue(unsigned char)]
  
  Processing section: .text.getGvarSourceValue(unsigned char) from er9x.o
      Load REL relocations for .text.getGvarSourceValue(unsigned char) (er9x.o)
      Reference:      Ex_chans
  
  Selecting menus.o to define Ex_chans
      Definition:     Ex_chans
      Pushing section .bss.Ex_chans to worklist [originates from symbol Ex_chans]
  
  Processing section: .bss.Ex_chans from menus.o
  
  Selecting er9x.o to define getTrimFlightPhase(unsigned char, unsigned char)
      Definition:     getTrimFlightPhase(unsigned char, unsigned char)
      Pushing section .text.getTrimFlightPhase(unsigned char, unsigned char) to worklist [originates from symbol getTrimFlightPhase(unsigned char, unsigned char)]
  
  Processing section: .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.getTrimFlightPhase(unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define processVoiceAlarms()
      Definition:     processVoiceAlarms()
      Pushing section .text.processVoiceAlarms() to worklist [originates from symbol processVoiceAlarms()]
  
  Processing section: .text.processVoiceAlarms() from er9x.o
      Load REL relocations for .text.processVoiceAlarms() (er9x.o)
      Reference:      procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  
  Selecting er9x.o to define procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Definition:     procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
      Pushing section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) to worklist [originates from symbol procOneVoiceAlarm(t_voiceAlarm*, unsigned char)]
  
  Processing section: .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Load REL relocations for .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (er9x.o)
      Reference:      switchPosition(unsigned char)
      Reference:      telemItemValid(unsigned char)
      Reference:      doVoiceAlarmSource(t_voiceAlarm*)
      Reference:      Nvs_timer
      Reference:      Nvs_state
  
  Selecting er9x.o to define Nvs_state
      Definition:     Nvs_state
      Pushing section .bss.Nvs_state to worklist [originates from symbol Nvs_state]
  
  Processing section: .bss.Nvs_state from er9x.o
  
  Selecting er9x.o to define Nvs_timer
      Definition:     Nvs_timer
      Pushing section .bss.Nvs_timer to worklist [originates from symbol Nvs_timer]
  
  Processing section: .bss.Nvs_timer from er9x.o
  
  Selecting drivers.o to define switchPosition(unsigned char)
      Definition:     switchPosition(unsigned char)
      Pushing section .text.switchPosition(unsigned char) to worklist [originates from symbol switchPosition(unsigned char)]
  
  Processing section: .text.switchPosition(unsigned char) from drivers.o
      Load REL relocations for .text.switchPosition(unsigned char) (drivers.o)
      Reference:      keyState(EnumKeys)
  
  Selecting menus.o to define telemItemValid(unsigned char)
      Definition:     telemItemValid(unsigned char)
      Pushing section .text.telemItemValid(unsigned char) to worklist [originates from symbol telemItemValid(unsigned char)]
  
  Processing section: .text.telemItemValid(unsigned char) from menus.o
  
  Selecting er9x.o to define doVoiceAlarmSource(t_voiceAlarm*)
      Definition:     doVoiceAlarmSource(t_voiceAlarm*)
      Pushing section .text.doVoiceAlarmSource(t_voiceAlarm*) to worklist [originates from symbol doVoiceAlarmSource(t_voiceAlarm*)]
  
  Processing section: .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Load REL relocations for .text.doVoiceAlarmSource(t_voiceAlarm*) (er9x.o)
      Reference:      voice_telem_item(unsigned char)
      Reference:      voice_numeric(short, unsigned char, unsigned char)
  
  Selecting audio.o to define voice_numeric(short, unsigned char, unsigned char)
      Definition:     voice_numeric(short, unsigned char, unsigned char)
      Pushing section .text.voice_numeric(short, unsigned char, unsigned char) to worklist [originates from symbol voice_numeric(short, unsigned char, unsigned char)]
  
  Processing section: .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.voice_numeric(short, unsigned char, unsigned char) (audio.o)
      Reference:      __aeabi_idivmod
  
  Selecting menus.o to define voice_telem_item(unsigned char)
      Definition:     voice_telem_item(unsigned char)
      Pushing section .text.voice_telem_item(unsigned char) to worklist [originates from symbol voice_telem_item(unsigned char)]
  
  Processing section: .text.voice_telem_item(unsigned char) from menus.o
      Load REL relocations for .text.voice_telem_item(unsigned char) (menus.o)
      Reference:      get_telemetry_value(unsigned char)
      Reference:      voiceMinutes(short)
      Reference:      TelemIndex
      Local section:  .rodata.UnitsVoice from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsVoice from menus.o
  
  Selecting menus.o to define TelemIndex
      Definition:     TelemIndex
      Pushing section .rodata.TelemIndex to worklist [originates from symbol TelemIndex]
  
  Processing section: .rodata.TelemIndex from menus.o
  
  Selecting menus.o to define voiceMinutes(short)
      Definition:     voiceMinutes(short)
      Pushing section .text.voiceMinutes(short) to worklist [originates from symbol voiceMinutes(short)]
  
  Processing section: .text.voiceMinutes(short) from menus.o
      Load REL relocations for .text.voiceMinutes(short) (menus.o)
  
  Selecting er9x.o to define putVoiceQueueUpper(unsigned char)
      Definition:     putVoiceQueueUpper(unsigned char)
      Pushing section .text.putVoiceQueueUpper(unsigned char) to worklist [originates from symbol putVoiceQueueUpper(unsigned char)]
  
  Processing section: .text.putVoiceQueueUpper(unsigned char) from er9x.o
      Load REL relocations for .text.putVoiceQueueUpper(unsigned char) (er9x.o)
  
  Selecting menus.o to define get_telemetry_value(unsigned char)
      Definition:     get_telemetry_value(unsigned char)
      Pushing section .text.get_telemetry_value(unsigned char) to worklist [originates from symbol get_telemetry_value(unsigned char)]
  
  Processing section: .text.get_telemetry_value(unsigned char) from menus.o
      Load REL relocations for .text.get_telemetry_value(unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcModelSelect(unsigned char)
      Definition:     menuProcModelSelect(unsigned char)
      Pushing section .text.menuProcModelSelect(unsigned char) to worklist [originates from symbol menuProcModelSelect(unsigned char)]
  
  Processing section: .text.menuProcModelSelect(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelSelect(unsigned char) (menus.o)
      Reference:      TITLEP(char const*)
      Reference:      MState2::check_columns(unsigned char, unsigned char)
      Reference:      lcd_outdez(unsigned char, unsigned char, short)
      Reference:      lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_putc(unsigned char, unsigned char, char)
      Reference:      eeLoadModelName(unsigned char, char*, unsigned char)
      Reference:      eeModelExists(unsigned char)
      Reference:      doPopup(char const*, unsigned char, unsigned char)
      Reference:      chainMenu(void (*)(unsigned char))
      Reference:      popMenu(bool)
      Reference:      pushMenu(void (*)(unsigned char))
      Reference:      EFile::swap(unsigned char, unsigned char)
      Local section:  .rodata..L.str.40 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.41 from menus.o using relocation R_ARM_ABS32
      Reference:      DupIfNonzero
      Local section:  .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o using relocation R_ARM_ABS32
      Reference:      s_pgOfs
      Local section:  .rodata.ModelPopList from menus.o using relocation R_ARM_ABS32
      Reference:      menuBackupRestore(unsigned char)
      Reference:      DupSub
      Reference:      menuDeleteDupModel(unsigned char)
      Reference:      menuProcModelIndex(unsigned char)
      Reference:      s_editMode
  
  Processing section: .rodata..L.str.40 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.41 from menus.o
  
  Processing section: .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
  
  Processing section: .rodata.ModelPopList from menus.o
  
  Selecting menus.o to define DupIfNonzero
      Definition:     DupIfNonzero
      Pushing section .bss.DupIfNonzero to worklist [originates from symbol DupIfNonzero]
  
  Processing section: .bss.DupIfNonzero from menus.o
  
  Selecting menus.o to define DupSub
      Definition:     DupSub
      Pushing section .bss.DupSub to worklist [originates from symbol DupSub]
  
  Processing section: .bss.DupSub from menus.o
  
  Selecting lcd.o to define lcd_outdez(unsigned char, unsigned char, short)
      Definition:     lcd_outdez(unsigned char, unsigned char, short)
      Pushing section .text.lcd_outdez(unsigned char, unsigned char, short) to worklist [originates from symbol lcd_outdez(unsigned char, unsigned char, short)]
  
  Processing section: .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Load REL relocations for .text.lcd_outdez(unsigned char, unsigned char, short) (lcd.o)
      Reference:      lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  
  Selecting lcd.o to define lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  
  Selecting pers.o to define eeModelExists(unsigned char)
      Definition:     eeModelExists(unsigned char)
      Pushing section .text.eeModelExists(unsigned char) to worklist [originates from symbol eeModelExists(unsigned char)]
  
  Processing section: .text.eeModelExists(unsigned char) from pers.o
      Load REL relocations for .text.eeModelExists(unsigned char) (pers.o)
      Reference:      EFile::exists(unsigned char)
  
  Selecting lcd.o to define lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Definition:     lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
      Definition:     lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
      Pushing section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) to worklist [originates from symbol lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)]
  
  Processing section: .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (lcd.o)
      Reference:      lcd_plot(unsigned char, unsigned char)
      Reference:      lcd_vline(unsigned char, unsigned char, signed char)
      Reference:      Lcd_lastPos
  
  Selecting lcd.o to define Lcd_lastPos
      Definition:     Lcd_lastPos
      Pushing section .bss.Lcd_lastPos to worklist [originates from symbol Lcd_lastPos]
  
  Processing section: .bss.Lcd_lastPos from lcd.o
  
  Selecting pers.o to define eeLoadModelName(unsigned char, char*, unsigned char)
      Definition:     eeLoadModelName(unsigned char, char*, unsigned char)
      Pushing section .text.eeLoadModelName(unsigned char, char*, unsigned char) to worklist [originates from symbol eeLoadModelName(unsigned char, char*, unsigned char)]
  
  Processing section: .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelName(unsigned char, char*, unsigned char) (pers.o)
      Reference:      EFile::size()
  
  Selecting menus.o to define menuBackupRestore(unsigned char)
      Definition:     menuBackupRestore(unsigned char)
      Pushing section .text.menuBackupRestore(unsigned char) to worklist [originates from symbol menuBackupRestore(unsigned char)]
  
  Processing section: .text.menuBackupRestore(unsigned char) from menus.o
      Load REL relocations for .text.menuBackupRestore(unsigned char) (menus.o)
      Reference:      startSerialVoice()
      Reference:      serialVoiceWaitByte(unsigned char)
      Reference:      brSubHead(char const*)
      Reference:      getSvFifo()
      Reference:      serialVoiceBlockSend(unsigned char*, unsigned char)
      Reference:      stopSerialVoice()
      Reference:      progressBar()
      Local section:  .rodata..L.str.32 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.31 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuBackupRestore(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.38 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.37 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.36 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.35 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.34 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.33 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuBackupRestore(unsigned char)::count from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.32 from menus.o
  
  Processing section: .rodata..L.str.31 from menus.o
  
  Processing section: .bss.menuBackupRestore(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.38 from menus.o
  
  Processing section: .rodata..L.str.37 from menus.o
  
  Processing section: .rodata..L.str.36 from menus.o
  
  Processing section: .rodata..L.str.35 from menus.o
  
  Processing section: .rodata..L.str.34 from menus.o
  
  Processing section: .rodata..L.str.33 from menus.o
  
  Processing section: .bss.menuBackupRestore(unsigned char)::count from menus.o
  
  Selecting menus.o to define progressBar()
      Definition:     progressBar()
      Pushing section .text.progressBar() to worklist [originates from symbol progressBar()]
  
  Processing section: .text.progressBar() from menus.o
      Load REL relocations for .text.progressBar() (menus.o)
      Reference:      lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting drivers.o to define stopSerialVoice()
      Definition:     stopSerialVoice()
      Pushing section .text.stopSerialVoice() to worklist [originates from symbol stopSerialVoice()]
  
  Processing section: .text.stopSerialVoice() from drivers.o
  
  Selecting drivers.o to define startSerialVoice()
      Definition:     startSerialVoice()
      Pushing section .text.startSerialVoice() to worklist [originates from symbol startSerialVoice()]
  
  Processing section: .text.startSerialVoice() from drivers.o
      Load REL relocations for .text.startSerialVoice() (drivers.o)
  
  Selecting menus.o to define menuDeleteDupModel(unsigned char)
      Definition:     menuDeleteDupModel(unsigned char)
      Pushing section .text.menuDeleteDupModel(unsigned char) to worklist [originates from symbol menuDeleteDupModel(unsigned char)]
  
  Processing section: .text.menuDeleteDupModel(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteDupModel(unsigned char) (menus.o)
      Reference:      yesNoMenuExit(unsigned char, char const*)
      Reference:      eeDuplicateModel(unsigned char)
      Reference:      EFile::rm(unsigned char)
      Local section:  .rodata..L.str.24 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.23 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.25 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.24 from menus.o
  
  Processing section: .rodata..L.str.23 from menus.o
  
  Processing section: .rodata..L.str.25 from menus.o
  
  Selecting menus.o to define yesNoMenuExit(unsigned char, char const*)
      Definition:     yesNoMenuExit(unsigned char, char const*)
      Pushing section .text.yesNoMenuExit(unsigned char, char const*) to worklist [originates from symbol yesNoMenuExit(unsigned char, char const*)]
  
  Processing section: .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Load REL relocations for .text.yesNoMenuExit(unsigned char, char const*) (menus.o)
      Local section:  .rodata..L.str.19 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.19 from menus.o
  
  Selecting pers.o to define eeDuplicateModel(unsigned char)
      Definition:     eeDuplicateModel(unsigned char)
      Pushing section .text.eeDuplicateModel(unsigned char) to worklist [originates from symbol eeDuplicateModel(unsigned char)]
  
  Processing section: .text.eeDuplicateModel(unsigned char) from pers.o
      Load REL relocations for .text.eeDuplicateModel(unsigned char) (pers.o)
      Reference:      EFile::create(unsigned char, unsigned char, unsigned short)
      Reference:      EFile::read(unsigned char*, unsigned short)
      Reference:      EFile::write(unsigned char*, unsigned char)
      Reference:      EFile::closeTrunc()
  
  Selecting menus.o to define menuProcModelIndex(unsigned char)
      Definition:     menuProcModelIndex(unsigned char)
      Pushing section .text.menuProcModelIndex(unsigned char) to worklist [originates from symbol menuProcModelIndex(unsigned char)]
  
  Processing section: .text.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcModelIndex(unsigned char) (menus.o)
      Local section:  .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      EditType
      Local section:  .bss.menuProcModelIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.IlinesCount from menus.o using relocation R_ARM_ABS32
      Reference:      MenuControl
      Local section:  .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Main_Popup from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Reference:      checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Reference:      checkIncDec_0(signed char, signed char)
      Reference:      evalOffset(signed char)
      Reference:      putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      checkIncDec_i8(signed char, signed char, signed char)
      Reference:      displayNext()
      Reference:      putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Local section:  .rodata.Str_heli_setup from menus.o using relocation R_ARM_ABS32
      Reference:      InverseBlink
      Local section:  .rodata..L.str.128 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.129 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.138 from menus.o using relocation R_ARM_ABS32
      Reference:      g_posHorz
      Reference:      putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Local section:  .bss.Columns from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.139 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Timer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_limits from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Expo from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_expoChan from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.135 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.136 from menus.o using relocation R_ARM_ABS32
      Reference:      s_editing
      Reference:      editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Reference:      putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Reference:      putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Reference:      putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Reference:      setStickCenter()
      Local section:  .rodata.Str_General from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.133 from menus.o using relocation R_ARM_ABS32
      Reference:      hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Local section:  .rodata..L.str.134 from menus.o using relocation R_ARM_ABS32
      Reference:      checkIncDec16(short, short, short, unsigned char)
      Reference:      lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      checkIncDec(signed char, signed char, signed char, unsigned char)
      Reference:      get_dr_state(unsigned char)
      Reference:      IS_EXPO_THROTTLE(unsigned char)
      Reference:      drawFunction(unsigned char, unsigned char)
      Reference:      calcExpo(unsigned char, short)
      Local section:  .rodata..L.str.137 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.125 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.126 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.127 from menus.o using relocation R_ARM_ABS32
      Reference:      throttleReversed()
      Local section:  .rodata..L.str.130 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.131 from menus.o using relocation R_ARM_ABS32
      Reference:      editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      plotType
      Local section:  .rodata..L.str.123 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.124 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.120 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.121 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_TRE012AG from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.122 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Load REL relocations for .text.indexProcess(unsigned char, MState2*, unsigned char) (menus.o)
  
  Processing section: .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_puts_P(unsigned char, unsigned char, char const*)
      Reference:      lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Processing section: .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
  
  Processing section: .bss.IlinesCount from menus.o
  
  Processing section: .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Load REL relocations for .rodata..Lswitch.table.menuProcModelIndex(unsigned char) (menus.o)
      Reference:      menuProcMix(unsigned char)
      Reference:      menuModelPhases(unsigned char)
      Reference:      menuProcCurve(unsigned char)
      Reference:      menuProcGlobals(unsigned char)
      Reference:      menuProcTelemetry(unsigned char)
      Reference:      menuProcVoiceAlarm(unsigned char)
      Reference:      menuProcProtocol(unsigned char)
  
  Processing section: .rodata.Str_Main_Popup from menus.o
  
  Processing section: .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcModelIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_Mixer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Modes from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curves from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Cswitches from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Safety from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Globals from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Telemetry from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.98 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Protocol from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_heli_setup from menus.o
  
  Processing section: .rodata..L.str.128 from menus.o
  
  Processing section: .rodata..L.str.129 from menus.o
  
  Processing section: .rodata..L.str.138 from menus.o
  
  Processing section: .bss.Columns from menus.o
  
  Processing section: .rodata..L.str.139 from menus.o
  
  Processing section: .rodata.Str_Timer from menus.o
  
  Processing section: .rodata.Str_limits from menus.o
  
  Processing section: .rodata.Str_Expo from menus.o
  
  Processing section: .bss.s_expoChan from menus.o
  
  Processing section: .rodata..L.str.135 from menus.o
  
  Processing section: .rodata.Str_Cswitch from menus.o
  
  Processing section: .rodata..L.str.136 from menus.o
  
  Processing section: .rodata.Str_General from menus.o
  
  Processing section: .rodata..L.str.133 from menus.o
  
  Processing section: .rodata..L.str.134 from menus.o
  
  Processing section: .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.onoffItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.137 from menus.o
  
  Processing section: .rodata..L.str.125 from menus.o
  
  Processing section: .rodata..L.str.126 from menus.o
  
  Processing section: .rodata..L.str.127 from menus.o
  
  Processing section: .rodata..L.str.130 from menus.o
  
  Processing section: .rodata..L.str.131 from menus.o
  
  Processing section: .rodata..L.str.123 from menus.o
  
  Processing section: .rodata..L.str.124 from menus.o
  
  Processing section: .rodata..L.str.120 from menus.o
  
  Processing section: .rodata..L.str.121 from menus.o
  
  Processing section: .rodata.Str_TRE012AG from menus.o
  
  Processing section: .rodata..L.str.122 from menus.o
  
  Processing section: .rodata.Str_Mixer from menus.o
  
  Processing section: .rodata.Str_Modes from menus.o
  
  Processing section: .rodata.Str_Curves from menus.o
  
  Processing section: .rodata.Str_Cswitches from menus.o
  
  Processing section: .rodata.Str_Safety from menus.o
  
  Processing section: .rodata.Str_Globals from menus.o
  
  Processing section: .rodata.Str_Telemetry from menus.o
  
  Processing section: .rodata..L.str.98 from menus.o
  
  Processing section: .rodata.Str_Protocol from menus.o
  
  Selecting menus.o to define EditType
      Definition:     EditType
      Pushing section .bss.EditType to worklist [originates from symbol EditType]
  
  Processing section: .bss.EditType from menus.o
  
  Selecting menus.o to define InverseBlink
      Definition:     InverseBlink
      Pushing section .bss.InverseBlink to worklist [originates from symbol InverseBlink]
  
  Processing section: .bss.InverseBlink from menus.o
  
  Selecting menus.o to define MenuControl
      Definition:     MenuControl
      Pushing section .bss.MenuControl to worklist [originates from symbol MenuControl]
  
  Processing section: .bss.MenuControl from menus.o
  
  Selecting menus.o to define evalOffset(signed char)
      Definition:     evalOffset(signed char)
      Pushing section .text.evalOffset(signed char) to worklist [originates from symbol evalOffset(signed char)]
  
  Processing section: .text.evalOffset(signed char) from menus.o
      Load REL relocations for .text.evalOffset(signed char) (menus.o)
  
  Selecting lcd.o to define lcd_puts_P(unsigned char, unsigned char, char const*)
      Definition:     lcd_puts_P(unsigned char, unsigned char, char const*)
      Pushing section .text.lcd_puts_P(unsigned char, unsigned char, char const*) to worklist [originates from symbol lcd_puts_P(unsigned char, unsigned char, char const*)]
  
  Processing section: .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Load REL relocations for .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd.o)
  
  Selecting er9x.o to define putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      Str_Chans_Gv
      Reference:      Str_telemItems
      Reference:      modi12x3
      Local section:  .rodata.Str_Hyphens from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Hyphens from er9x.o
  
  Selecting menus.o to define Str_Chans_Gv
      Definition:     Str_Chans_Gv
      Pushing section .rodata.Str_Chans_Gv to worklist [originates from symbol Str_Chans_Gv]
  
  Processing section: .rodata.Str_Chans_Gv from menus.o
  
  Selecting menus.o to define Str_telemItems
      Definition:     Str_telemItems
      Pushing section .rodata.Str_telemItems to worklist [originates from symbol Str_telemItems]
  
  Processing section: .rodata.Str_telemItems from menus.o
  
  Selecting er9x.o to define checkIncDec(signed char, signed char, signed char, unsigned char)
      Definition:     checkIncDec(signed char, signed char, signed char, unsigned char)
      Pushing section .text.checkIncDec(signed char, signed char, signed char, unsigned char) to worklist [originates from symbol checkIncDec(signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec(signed char, signed char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define displayNext()
      Definition:     displayNext()
      Pushing section .text.displayNext() to worklist [originates from symbol displayNext()]
  
  Processing section: .text.displayNext() from menus.o
      Load REL relocations for .text.displayNext() (menus.o)
      Local section:  .rodata..L.str.3 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.3 from menus.o
  
  Selecting menus.o to define menuProcMix(unsigned char)
      Definition:     menuProcMix(unsigned char)
      Pushing section .text.menuProcMix(unsigned char) to worklist [originates from symbol menuProcMix(unsigned char)]
  
  Processing section: .text.menuProcMix(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMix(unsigned char) (menus.o)
      Reference:      putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Reference:      gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      reachMixerCountLimit()
      Local section:  .text.insertMix(unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Reference:      s_moveMode
      Local section:  .bss.menuProcMix(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      s_mixMaxSel
      Reference:      RotaryState
      Local section:  .bss.s_currMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_moveMixIdx from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currDestCh from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcMixOne(unsigned char)
      Local section:  .rodata.MixPopList from menus.o using relocation R_ARM_ABS32
      Reference:      mixToDelete
      Reference:      menuDeleteMix(unsigned char)
      Local section:  .rodata..L.str.22 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.insertMix(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.insertMix(unsigned char, unsigned char) (menus.o)
      Reference:      __aeabi_memmove
  
  Processing section: .bss.menuProcMix(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currMixIdx from menus.o
  
  Processing section: .bss.s_moveMixIdx from menus.o
  
  Processing section: .bss.s_currDestCh from menus.o
  
  Processing section: .rodata.MixPopList from menus.o
  
  Processing section: .rodata..L.str.22 from menus.o
  
  Selecting menus.o to define RotaryState
      Definition:     RotaryState
      Pushing section .bss.RotaryState to worklist [originates from symbol RotaryState]
  
  Processing section: .bss.RotaryState from menus.o
  
  Selecting er9x.o to define putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Reference:      Curve_Str
      Local section:  .rodata..L.str from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from er9x.o
  
  Selecting menus.o to define Curve_Str
      Definition:     Curve_Str
      Pushing section .rodata.Curve_Str to worklist [originates from symbol Curve_Str]
  
  Processing section: .rodata.Curve_Str from menus.o
  
  Selecting menus.o to define checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Definition:     checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
      Pushing section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) to worklist [originates from symbol checkIndexed(unsigned char, char const*, unsigned char, unsigned char)]
  
  Processing section: .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (menus.o)
      Reference:      EditColumns
  
  Selecting menus.o to define EditColumns
      Definition:     EditColumns
      Pushing section .bss.EditColumns to worklist [originates from symbol EditColumns]
  
  Processing section: .bss.EditColumns from menus.o
  
  Selecting menus.o to define drawFunction(unsigned char, unsigned char)
      Definition:     drawFunction(unsigned char, unsigned char)
      Pushing section .text.drawFunction(unsigned char, unsigned char) to worklist [originates from symbol drawFunction(unsigned char, unsigned char)]
  
  Processing section: .text.drawFunction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.drawFunction(unsigned char, unsigned char) (menus.o)
      Reference:      intpol(short, unsigned char)
      Local section:  .bss.s_curveChan from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_curveChan from menus.o
  
  Selecting menus.o to define editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  
  Selecting menus.o to define get_dr_state(unsigned char)
      Definition:     get_dr_state(unsigned char)
      Pushing section .text.get_dr_state(unsigned char) to worklist [originates from symbol get_dr_state(unsigned char)]
  
  Processing section: .text.get_dr_state(unsigned char) from menus.o
      Load REL relocations for .text.get_dr_state(unsigned char) (menus.o)
  
  Selecting menus.o to define gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Definition:     gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (menus.o)
      Reference:      dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Definition:     putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
      Pushing section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) to worklist [originates from symbol putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)]
  
  Processing section: .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Load REL relocations for .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (menus.o)
      Local section:  .rodata..L.str.11 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.SW_3_IDX from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.11 from menus.o
  
  Processing section: .rodata.SW_3_IDX from menus.o
  
  Selecting er9x.o to define checkIncDec16(short, short, short, unsigned char)
      Definition:     checkIncDec16(short, short, short, unsigned char)
      Pushing section .text.checkIncDec16(short, short, short, unsigned char) to worklist [originates from symbol checkIncDec16(short, short, short, unsigned char)]
  
  Processing section: .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec16(short, short, short, unsigned char) (er9x.o)
      Reference:      pauseEvents(unsigned char)
  
  Selecting drivers.o to define pauseEvents(unsigned char)
      Definition:     pauseEvents(unsigned char)
      Pushing section .text.pauseEvents(unsigned char) to worklist [originates from symbol pauseEvents(unsigned char)]
  
  Processing section: .text.pauseEvents(unsigned char) from drivers.o
      Load REL relocations for .text.pauseEvents(unsigned char) (drivers.o)
  
  Selecting er9x.o to define checkIncDec_0(signed char, signed char)
      Definition:     checkIncDec_0(signed char, signed char)
      Pushing section .text.checkIncDec_0(signed char, signed char) to worklist [originates from symbol checkIncDec_0(signed char, signed char)]
  
  Processing section: .text.checkIncDec_0(signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_0(signed char, signed char) (er9x.o)
  
  Selecting menus.o to define menuDeleteMix(unsigned char)
      Definition:     menuDeleteMix(unsigned char)
      Pushing section .text.menuDeleteMix(unsigned char) to worklist [originates from symbol menuDeleteMix(unsigned char)]
  
  Processing section: .text.menuDeleteMix(unsigned char) from menus.o
      Load REL relocations for .text.menuDeleteMix(unsigned char) (menus.o)
      Reference:      clearMixes()
      Local section:  .rodata..L.str.20 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.21 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.20 from menus.o
  
  Processing section: .rodata..L.str.21 from menus.o
  
  Selecting templates.o to define clearMixes()
      Definition:     clearMixes()
      Pushing section .text.clearMixes() to worklist [originates from symbol clearMixes()]
  
  Processing section: .text.clearMixes() from templates.o
      Load REL relocations for .text.clearMixes() (templates.o)
  
  Selecting menus.o to define menuProcCurve(unsigned char)
      Definition:     menuProcCurve(unsigned char)
      Pushing section .text.menuProcCurve(unsigned char) to worklist [originates from symbol menuProcCurve(unsigned char)]
  
  Processing section: .text.menuProcCurve(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurve(unsigned char) (menus.o)
      Reference:      drawCurve(unsigned char)
      Local section:  .bss.menuProcCurve(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcCurveOne(unsigned char)
      Local section:  .rodata..L.str.2 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.2 from menus.o
  
  Selecting er9x.o to define checkIncDec_i8(signed char, signed char, signed char)
      Definition:     checkIncDec_i8(signed char, signed char, signed char)
      Pushing section .text.checkIncDec_i8(signed char, signed char, signed char) to worklist [originates from symbol checkIncDec_i8(signed char, signed char, signed char)]
  
  Processing section: .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.checkIncDec_i8(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Definition:     edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
      Pushing section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) to worklist [originates from symbol edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)]
  
  Processing section: .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcMixOne(unsigned char)
      Definition:     menuProcMixOne(unsigned char)
      Pushing section .text.menuProcMixOne(unsigned char) to worklist [originates from symbol menuProcMixOne(unsigned char)]
  
  Processing section: .text.menuProcMixOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcMixOne(unsigned char) (menus.o)
      Reference:      lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Local section:  .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.12 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.13 from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata..L.str.17 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.16 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Curve from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.15 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.14 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.12 from menus.o
  
  Processing section: .rodata..L.str.13 from menus.o
  
  Processing section: .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.offonItem(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Processing section: .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata..L.str.17 from menus.o
  
  Processing section: .rodata..L.str.16 from menus.o
  
  Processing section: .rodata.Str_Curve from menus.o
  
  Processing section: .rodata..L.str.15 from menus.o
  
  Processing section: .rodata..L.str.14 from menus.o
  
  Selecting lcd.o to define lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Definition:     lcd_puts_Pskip(unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_puts_Pskip(unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting er9x.o to define putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
      Reference:      Str_OFF
      Reference:      Str_ON
  
  Selecting er9x.o to define Str_OFF
      Definition:     Str_OFF
      Pushing section .rodata.Str_OFF to worklist [originates from symbol Str_OFF]
  
  Processing section: .rodata.Str_OFF from er9x.o
  
  Selecting er9x.o to define Str_ON
      Definition:     Str_ON
      Pushing section .rodata.Str_ON to worklist [originates from symbol Str_ON]
  
  Processing section: .rodata.Str_ON from er9x.o
  
  Selecting menus.o to define putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Definition:     putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
      Pushing section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) to worklist [originates from symbol putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)]
  
  Processing section: .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Load REL relocations for .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (menus.o)
  
  Selecting menus.o to define setStickCenter()
      Definition:     setStickCenter()
      Pushing section .text.setStickCenter() to worklist [originates from symbol setStickCenter()]
  
  Processing section: .text.setStickCenter() from menus.o
      Load REL relocations for .text.setStickCenter() (menus.o)
  
  Selecting menus.o to define gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting menus.o to define hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Definition:     hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
      Pushing section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol hyphinvMenuItem(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str from menus.o
  
  Selecting menus.o to define menuModelPhases(unsigned char)
      Definition:     menuModelPhases(unsigned char)
      Pushing section .text.menuModelPhases(unsigned char) to worklist [originates from symbol menuModelPhases(unsigned char)]
  
  Processing section: .text.menuModelPhases(unsigned char) from menus.o
      Load REL relocations for .text.menuModelPhases(unsigned char) (menus.o)
      Reference:      dispFlightModename(unsigned char, unsigned char, unsigned char)
      Reference:      putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuModelPhases(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.s_currIdx from menus.o using relocation R_ARM_ABS32
      Reference:      menuPhaseOne(unsigned char)
      Local section:  .rodata..L.str.39 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.s_currIdx from menus.o
  
  Processing section: .rodata..L.str.39 from menus.o
  
  Selecting menus.o to define menuPhaseOne(unsigned char)
      Definition:     menuPhaseOne(unsigned char)
      Pushing section .text.menuPhaseOne(unsigned char) to worklist [originates from symbol menuPhaseOne(unsigned char)]
  
  Processing section: .text.menuPhaseOne(unsigned char) from menus.o
      Load REL relocations for .text.menuPhaseOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.28 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.29 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.28 from menus.o
  
  Processing section: .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.29 from menus.o
  
  Selecting menus.o to define putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_1_RETA from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_1_RETA from menus.o
  
  Selecting menus.o to define menuProcGlobals(unsigned char)
      Definition:     menuProcGlobals(unsigned char)
      Pushing section .text.menuProcGlobals(unsigned char) to worklist [originates from symbol menuProcGlobals(unsigned char)]
  
  Processing section: .text.menuProcGlobals(unsigned char) from menus.o
      Load REL relocations for .text.menuProcGlobals(unsigned char) (menus.o)
      Local section:  .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuScaleOne(unsigned char)
      Local section:  .rodata..L.str.10 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_GV from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Gv_Source from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.10 from menus.o
  
  Processing section: .rodata.Str_GV from menus.o
  
  Processing section: .rodata.Str_Gv_Source from menus.o
  
  Selecting menus.o to define menuScaleOne(unsigned char)
      Definition:     menuScaleOne(unsigned char)
      Pushing section .text.menuScaleOne(unsigned char) to worklist [originates from symbol menuScaleOne(unsigned char)]
  
  Processing section: .text.menuScaleOne(unsigned char) from menus.o
      Load REL relocations for .text.menuScaleOne(unsigned char) (menus.o)
      Reference:      scalerDecimal(unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuScaleOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_SC from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.8 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.9 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.UnitsString from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata.Str_SC from menus.o
  
  Processing section: .rodata..L.str.8 from menus.o
  
  Processing section: .rodata..L.str.9 from menus.o
  
  Processing section: .rodata.UnitsString from menus.o
  
  Selecting menus.o to define scalerDecimal(unsigned char, unsigned char, unsigned char)
      Definition:     scalerDecimal(unsigned char, unsigned char, unsigned char)
      Pushing section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol scalerDecimal(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (menus.o)
      Reference:      checkIncDec_u0(short, unsigned char)
  
  Selecting er9x.o to define checkIncDec_u0(short, unsigned char)
      Definition:     checkIncDec_u0(short, unsigned char)
      Pushing section .text.checkIncDec_u0(short, unsigned char) to worklist [originates from symbol checkIncDec_u0(short, unsigned char)]
  
  Processing section: .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Load REL relocations for .text.checkIncDec_u0(short, unsigned char) (er9x.o)
  
  Selecting er9x.o to define IS_EXPO_THROTTLE(unsigned char)
      Definition:     IS_EXPO_THROTTLE(unsigned char)
      Pushing section .text.IS_EXPO_THROTTLE(unsigned char) to worklist [originates from symbol IS_EXPO_THROTTLE(unsigned char)]
  
  Processing section: .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Load REL relocations for .text.IS_EXPO_THROTTLE(unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define menuProcCurveOne(unsigned char)
      Definition:     menuProcCurveOne(unsigned char)
      Pushing section .text.menuProcCurveOne(unsigned char) to worklist [originates from symbol menuProcCurveOne(unsigned char)]
  
  Processing section: .text.menuProcCurveOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcCurveOne(unsigned char) (menus.o)
      Local section:  .text.curveAddress(unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.1 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .text.curveAddress(unsigned char) from menus.o
      Load REL relocations for .text.curveAddress(unsigned char) (menus.o)
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
  
  Processing section: .rodata..L.str.1 from menus.o
  
  Selecting menus.o to define menuProcProtocol(unsigned char)
      Definition:     menuProcProtocol(unsigned char)
      Pushing section .text.menuProcProtocol(unsigned char) to worklist [originates from symbol menuProcProtocol(unsigned char)]
  
  Processing section: .text.menuProcProtocol(unsigned char) from menus.o
      Load REL relocations for .text.menuProcProtocol(unsigned char) (menus.o)
      Local section:  .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.108 from menus.o using relocation R_ARM_ABS32
      Reference:      rangeBindAction(unsigned char, unsigned char)
      Local section:  .rodata..L.str.109 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.115 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.118 from menus.o using relocation R_ARM_ABS32
      Reference:      g_crsf_config
      Local section:  .rodata..L.str.117 from menus.o using relocation R_ARM_ABS32
      Reference:      menuRXSetup(unsigned char)
      Local section:  .rodata..L.str.116 from menus.o using relocation R_ARM_ABS32
      Reference:      menuSetFailsafe(unsigned char)
      Local section:  .rodata..L.str.110 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.111 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.112 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.113 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.114 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.119 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.108 from menus.o
  
  Processing section: .rodata..L.str.109 from menus.o
  
  Processing section: .rodata..L.str.115 from menus.o
  
  Processing section: .rodata..L.str.118 from menus.o
  
  Processing section: .rodata..L.str.117 from menus.o
  
  Processing section: .rodata..L.str.116 from menus.o
  
  Processing section: .rodata..L.str.110 from menus.o
  
  Processing section: .rodata..L.str.111 from menus.o
  
  Processing section: .rodata..L.str.112 from menus.o
  
  Processing section: .rodata..L.str.113 from menus.o
  
  Processing section: .rodata..L.str.114 from menus.o
  
  Processing section: .rodata..L.str.119 from menus.o
  
  Selecting menus.o to define menuRXSetup(unsigned char)
      Definition:     menuRXSetup(unsigned char)
      Pushing section .text.menuRXSetup(unsigned char) to worklist [originates from symbol menuRXSetup(unsigned char)]
  
  Processing section: .text.menuRXSetup(unsigned char) from menus.o
      Load REL relocations for .text.menuRXSetup(unsigned char) (menus.o)
      Local section:  .bss.menuRXSetup(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.100 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.101 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.102 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.103 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.100 from menus.o
  
  Processing section: .rodata..L.str.101 from menus.o
  
  Processing section: .rodata..L.str.102 from menus.o
  
  Processing section: .rodata..L.str.103 from menus.o
  
  Selecting menus.o to define menuSetFailsafe(unsigned char)
      Definition:     menuSetFailsafe(unsigned char)
      Pushing section .text.menuSetFailsafe(unsigned char) to worklist [originates from symbol menuSetFailsafe(unsigned char)]
  
  Processing section: .text.menuSetFailsafe(unsigned char) from menus.o
      Load REL relocations for .text.menuSetFailsafe(unsigned char) (menus.o)
      Local section:  .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.104 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.107 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.106 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.105 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.104 from menus.o
  
  Processing section: .rodata..L.str.107 from menus.o
  
  Processing section: .rodata..L.str.106 from menus.o
  
  Processing section: .rodata..L.str.105 from menus.o
  
  Selecting menus.o to define rangeBindAction(unsigned char, unsigned char)
      Definition:     rangeBindAction(unsigned char, unsigned char)
      Pushing section .text.rangeBindAction(unsigned char, unsigned char) to worklist [originates from symbol rangeBindAction(unsigned char, unsigned char)]
  
  Processing section: .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.rangeBindAction(unsigned char, unsigned char) (menus.o)
      Reference:      pxxFlag
      Reference:      menuRangeBind(unsigned char)
  
  Selecting menus.o to define menuRangeBind(unsigned char)
      Definition:     menuRangeBind(unsigned char)
      Pushing section .text.menuRangeBind(unsigned char) to worklist [originates from symbol menuRangeBind(unsigned char)]
  
  Processing section: .text.menuRangeBind(unsigned char) from menus.o
      Load REL relocations for .text.menuRangeBind(unsigned char) (menus.o)
      Local section:  .rodata..L.str.27 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.26 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuRangeBind(unsigned char)::timer from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.27 from menus.o
  
  Processing section: .rodata..L.str.26 from menus.o
  
  Processing section: .bss.menuRangeBind(unsigned char)::timer from menus.o
  
  Selecting er9x.o to define throttleReversed()
      Definition:     throttleReversed()
      Pushing section .text.throttleReversed() to worklist [originates from symbol throttleReversed()]
  
  Processing section: .text.throttleReversed() from er9x.o
      Load REL relocations for .text.throttleReversed() (er9x.o)
  
  Selecting menus.o to define menuProcTelemetry(unsigned char)
      Definition:     menuProcTelemetry(unsigned char)
      Pushing section .text.menuProcTelemetry(unsigned char) to worklist [originates from symbol menuProcTelemetry(unsigned char)]
  
  Processing section: .text.menuProcTelemetry(unsigned char) from menus.o
      Load REL relocations for .text.menuProcTelemetry(unsigned char) (menus.o)
      Reference:      putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.6 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.7 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.5 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.4 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.6 from menus.o
  
  Processing section: .rodata..L.str.7 from menus.o
  
  Processing section: .rodata..L.str.5 from menus.o
  
  Processing section: .rodata..L.str.4 from menus.o
  
  Selecting menus.o to define dispFlightModename(unsigned char, unsigned char, unsigned char)
      Definition:     dispFlightModename(unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispFlightModename(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata..L.str.30 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.30 from menus.o
  
  Selecting menus.o to define lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Definition:     lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
      Pushing section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) to worklist [originates from symbol lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)]
  
  Processing section: .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Load REL relocations for .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (menus.o)
  
  Selecting menus.o to define menuProcVoiceAlarm(unsigned char)
      Definition:     menuProcVoiceAlarm(unsigned char)
      Pushing section .text.menuProcVoiceAlarm(unsigned char) to worklist [originates from symbol menuProcVoiceAlarm(unsigned char)]
  
  Processing section: .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceAlarm(unsigned char) (menus.o)
      Reference:      displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Local section:  .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcVoiceOne(unsigned char)
      Local section:  .rodata..L.str.99 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.99 from menus.o
  
  Selecting menus.o to define displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_On_Off_Both from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_On_Off_Both from menus.o
  
  Selecting menus.o to define menuProcVoiceOne(unsigned char)
      Definition:     menuProcVoiceOne(unsigned char)
      Pushing section .text.menuProcVoiceOne(unsigned char) to worklist [originates from symbol menuProcVoiceOne(unsigned char)]
  
  Processing section: .text.menuProcVoiceOne(unsigned char) from menus.o
      Load REL relocations for .text.menuProcVoiceOne(unsigned char) (menus.o)
      Local section:  .rodata..L.str.86 from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.88 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.92 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.93 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.94 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.95 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Sounds from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.96 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.97 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.87 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.89 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.90 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.91 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.86 from menus.o
  
  Processing section: .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
  
  Processing section: .rodata..L.str.88 from menus.o
  
  Processing section: .rodata..L.str.92 from menus.o
  
  Processing section: .rodata..L.str.93 from menus.o
  
  Processing section: .rodata..L.str.94 from menus.o
  
  Processing section: .rodata..L.str.95 from menus.o
  
  Processing section: .rodata.Str_Sounds from menus.o
  
  Processing section: .rodata..L.str.96 from menus.o
  
  Processing section: .rodata..L.str.97 from menus.o
  
  Processing section: .rodata..L.str.87 from menus.o
  
  Processing section: .rodata..L.str.89 from menus.o
  
  Processing section: .rodata..L.str.90 from menus.o
  
  Processing section: .rodata..L.str.91 from menus.o
  
  Selecting menus.o to define serialVoiceWaitByte(unsigned char)
      Definition:     serialVoiceWaitByte(unsigned char)
      Pushing section .text.serialVoiceWaitByte(unsigned char) to worklist [originates from symbol serialVoiceWaitByte(unsigned char)]
  
  Processing section: .text.serialVoiceWaitByte(unsigned char) from menus.o
      Load REL relocations for .text.serialVoiceWaitByte(unsigned char) (menus.o)
  
  Selecting pers.o to define eeLoadModelForBackup(unsigned char)
      Definition:     eeLoadModelForBackup(unsigned char)
      Pushing section .text.eeLoadModelForBackup(unsigned char) to worklist [originates from symbol eeLoadModelForBackup(unsigned char)]
  
  Processing section: .text.eeLoadModelForBackup(unsigned char) from pers.o
      Load REL relocations for .text.eeLoadModelForBackup(unsigned char) (pers.o)
  
  Selecting menus.o to define putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting er9x.o to define putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Load REL relocations for .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (er9x.o)
  
  Selecting menus.o to define putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Definition:     putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
      Pushing section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) to worklist [originates from symbol putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (menus.o)
      Reference:      putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Local section:  .rodata.UnitsText from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.UnitsText from menus.o
  
  Selecting er9x.o to define putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Definition:     putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (er9x.o)
      Reference:      __aeabi_llsr
      Local section:  .rodata..L.str.1 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.1 from er9x.o
  
  Selecting menus.o to define reachMixerCountLimit()
      Definition:     reachMixerCountLimit()
      Pushing section .text.reachMixerCountLimit() to worklist [originates from symbol reachMixerCountLimit()]
  
  Processing section: .text.reachMixerCountLimit() from menus.o
      Load REL relocations for .text.reachMixerCountLimit() (menus.o)
      Reference:      menuMixersLimit(unsigned char)
  
  Selecting menus.o to define menuMixersLimit(unsigned char)
      Definition:     menuMixersLimit(unsigned char)
      Pushing section .text.menuMixersLimit(unsigned char) to worklist [originates from symbol menuMixersLimit(unsigned char)]
  
  Processing section: .text.menuMixersLimit(unsigned char) from menus.o
      Load REL relocations for .text.menuMixersLimit(unsigned char) (menus.o)
      Local section:  .rodata..L.str.18 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.18 from menus.o
  
  Selecting menus.o to define serialVoiceBlockSend(unsigned char*, unsigned char)
      Definition:     serialVoiceBlockSend(unsigned char*, unsigned char)
      Pushing section .text.serialVoiceBlockSend(unsigned char*, unsigned char) to worklist [originates from symbol serialVoiceBlockSend(unsigned char*, unsigned char)]
  
  Processing section: .text.serialVoiceBlockSend(unsigned char*, unsigned char) from menus.o
  
  Selecting er9x.o to define check_backlight_voice()
      Definition:     check_backlight_voice()
      Pushing section .text.check_backlight_voice() to worklist [originates from symbol check_backlight_voice()]
  
  Processing section: .text.check_backlight_voice() from er9x.o
      Load REL relocations for .text.check_backlight_voice() (er9x.o)
      Reference:      backlight_on
      Reference:      backlight_off
      Local section:  .bss.check_backlight_voice()::tmr10ms from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .bss.check_backlight_voice()::tmr10ms from er9x.o
  
  Selecting drivers.o to define eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Definition:     eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
      Pushing section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) to worklist [originates from symbol eeprom_write_page_cmp(char const*, unsigned short, unsigned int)]
  
  Processing section: .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Load REL relocations for .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (drivers.o)
  
  Selecting er9x.o to define getCurrentSwitchStates()
      Definition:     getCurrentSwitchStates()
      Pushing section .text.getCurrentSwitchStates() to worklist [originates from symbol getCurrentSwitchStates()]
  
  Processing section: .text.getCurrentSwitchStates() from er9x.o
      Load REL relocations for .text.getCurrentSwitchStates() (er9x.o)
  
  Selecting er9x.o to define alert(char const*)
      Definition:     alert(char const*)
      Pushing section .text.alert(char const*) to worklist [originates from symbol alert(char const*)]
  
  Processing section: .text.alert(char const*) from er9x.o
      Load REL relocations for .text.alert(char const*) (er9x.o)
  
  Selecting er9x.o to define anaIn(unsigned char)
      Definition:     anaIn(unsigned char)
      Pushing section .text.anaIn(unsigned char) to worklist [originates from symbol anaIn(unsigned char)]
  
  Processing section: .text.anaIn(unsigned char) from er9x.o
      Load REL relocations for .text.anaIn(unsigned char) (er9x.o)
  
  Selecting menus.o to define timer()
      Definition:     timer()
      Pushing section .text.timer() to worklist [originates from symbol timer()]
  
  Processing section: .text.timer() from menus.o
      Load REL relocations for .text.timer() (menus.o)
      Reference:      get_tmr10ms()
      Reference:      ThrottleStickyOn
  
  Selecting menus.o to define ThrottleStickyOn
      Definition:     ThrottleStickyOn
      Pushing section .bss.ThrottleStickyOn to worklist [originates from symbol ThrottleStickyOn]
  
  Processing section: .bss.ThrottleStickyOn from menus.o
  
  Selecting er9x.o to define get_tmr10ms()
      Definition:     get_tmr10ms()
      Pushing section .text.get_tmr10ms() to worklist [originates from symbol get_tmr10ms()]
  
  Processing section: .text.get_tmr10ms() from er9x.o
      Load REL relocations for .text.get_tmr10ms() (er9x.o)
  
  Selecting menus.o to define trace()
      Definition:     trace()
      Pushing section .text.trace() to worklist [originates from symbol trace()]
  
  Processing section: .text.trace() from menus.o
      Load REL relocations for .text.trace() (menus.o)
      Local section:  .bss.trace()::s_time from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.trace()::s_time from menus.o
  
  Selecting file.o to define EeFsck()
      Definition:     EeFsck()
      Pushing section .text.EeFsck() to worklist [originates from symbol EeFsck()]
  
  Processing section: .text.EeFsck() from file.o
      Load REL relocations for .text.EeFsck() (file.o)
      Local section:  .text.EeFsFlushFreelist() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFlushFreelist() from file.o
      Load REL relocations for .text.EeFsFlushFreelist() (file.o)
  
  Selecting menus.o to define TITLEP(char const*)
      Definition:     TITLEP(char const*)
      Pushing section .text.TITLEP(char const*) to worklist [originates from symbol TITLEP(char const*)]
  
  Processing section: .text.TITLEP(char const*) from menus.o
      Load REL relocations for .text.TITLEP(char const*) (menus.o)
  
  Selecting er9x.o to define alertx(char const*, bool)
      Definition:     alertx(char const*, bool)
      Pushing section .text.alertx(char const*, bool) to worklist [originates from symbol alertx(char const*, bool)]
  
  Processing section: .text.alertx(char const*, bool) from er9x.o
      Load REL relocations for .text.alertx(char const*, bool) (er9x.o)
      Reference:      lcdSetRefVolt(unsigned char)
      Weak reference: keyDown()
  
  Selecting lcd.o to define lcdSetRefVolt(unsigned char)
      Definition:     lcdSetRefVolt(unsigned char)
      Pushing section .text.lcdSetRefVolt(unsigned char) to worklist [originates from symbol lcdSetRefVolt(unsigned char)]
  
  Processing section: .text.lcdSetRefVolt(unsigned char) from lcd.o
      Load REL relocations for .text.lcdSetRefVolt(unsigned char) (lcd.o)
  
  Selecting er9x.o to define almess(char const*, unsigned char)
      Definition:     almess(char const*, unsigned char)
      Pushing section .text.almess(char const*, unsigned char) to worklist [originates from symbol almess(char const*, unsigned char)]
  
  Processing section: .text.almess(char const*, unsigned char) from er9x.o
      Load REL relocations for .text.almess(char const*, unsigned char) (er9x.o)
      Local section:  .rodata..L.str.4 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.2 from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alert from er9x.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.3 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.4 from er9x.o
  
  Processing section: .rodata..L.str.2 from er9x.o
  
  Processing section: .rodata.Str_Alert from er9x.o
  
  Processing section: .rodata..L.str.3 from er9x.o
  
  Selecting menus.o to define intpol(short, unsigned char)
      Definition:     intpol(short, unsigned char)
      Pushing section .text.intpol(short, unsigned char) to worklist [originates from symbol intpol(short, unsigned char)]
  
  Processing section: .text.intpol(short, unsigned char) from menus.o
      Load REL relocations for .text.intpol(short, unsigned char) (menus.o)
  
  Selecting menus.o to define perOut(short*, unsigned char)
      Definition:     perOut(short*, unsigned char)
      Pushing section .text.perOut(short*, unsigned char) to worklist [originates from symbol perOut(short*, unsigned char)]
  
  Processing section: .text.perOut(short*, unsigned char) from menus.o
      Load REL relocations for .text.perOut(short*, unsigned char) (menus.o)
      Reference:      scaleAnalog(short, unsigned char)
      Reference:      calc100toRESX(signed char)
      Reference:      bpanaCenter
      Reference:      Output
      Reference:      REG100_100(signed char)
      Reference:      REG(signed char, signed char, signed char)
      Reference:      expo(short, short)
      Reference:      calc1000toRESX(short)
      Local section:  .bss.perOut(short*, unsigned char)::sticky from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.perOut(short*, unsigned char)::sticky from menus.o
  
  Selecting menus.o to define Output
      Definition:     Output
      Pushing section .bss.Output to worklist [originates from symbol Output]
  
  Processing section: .bss.Output from menus.o
  
  Selecting er9x.o to define REG100_100(signed char)
      Definition:     REG100_100(signed char)
      Pushing section .text.REG100_100(signed char) to worklist [originates from symbol REG100_100(signed char)]
  
  Processing section: .text.REG100_100(signed char) from er9x.o
      Load REL relocations for .text.REG100_100(signed char) (er9x.o)
  
  Selecting menus.o to define scaleAnalog(short, unsigned char)
      Definition:     scaleAnalog(short, unsigned char)
      Pushing section .text.scaleAnalog(short, unsigned char) to worklist [originates from symbol scaleAnalog(short, unsigned char)]
  
  Processing section: .text.scaleAnalog(short, unsigned char) from menus.o
      Load REL relocations for .text.scaleAnalog(short, unsigned char) (menus.o)
  
  Selecting er9x.o to define calc100toRESX(signed char)
      Definition:     calc100toRESX(signed char)
      Pushing section .text.calc100toRESX(signed char) to worklist [originates from symbol calc100toRESX(signed char)]
  
  Processing section: .text.calc100toRESX(signed char) from er9x.o
  
  Selecting er9x.o to define calc1000toRESX(short)
      Definition:     calc1000toRESX(short)
      Pushing section .text.calc1000toRESX(short) to worklist [originates from symbol calc1000toRESX(short)]
  
  Processing section: .text.calc1000toRESX(short) from er9x.o
  
  Selecting er9x.o to define REG(signed char, signed char, signed char)
      Definition:     REG(signed char, signed char, signed char)
      Pushing section .text.REG(signed char, signed char, signed char) to worklist [originates from symbol REG(signed char, signed char, signed char)]
  
  Processing section: .text.REG(signed char, signed char, signed char) from er9x.o
      Load REL relocations for .text.REG(signed char, signed char, signed char) (er9x.o)
  
  Selecting menus.o to define expo(short, short)
      Definition:     expo(short, short)
      Pushing section .text.expo(short, short) to worklist [originates from symbol expo(short, short)]
  
  Processing section: .text.expo(short, short) from menus.o
      Load REL relocations for .text.expo(short, short) (menus.o)
      Reference:      expou(unsigned short, unsigned short)
  
  Selecting menus.o to define expou(unsigned short, unsigned short)
      Definition:     expou(unsigned short, unsigned short)
      Pushing section .text.expou(unsigned short, unsigned short) to worklist [originates from symbol expou(unsigned short, unsigned short)]
  
  Processing section: .text.expou(unsigned short, unsigned short) from menus.o
      Load REL relocations for .text.expou(unsigned short, unsigned short) (menus.o)
  
  Selecting templates.o to define setMix(unsigned char, unsigned char)
      Definition:     setMix(unsigned char, unsigned char)
      Pushing section .text.setMix(unsigned char, unsigned char) to worklist [originates from symbol setMix(unsigned char, unsigned char)]
  
  Processing section: .text.setMix(unsigned char, unsigned char) from templates.o
      Load REL relocations for .text.setMix(unsigned char, unsigned char) (templates.o)
  
  Selecting menus.o to define doPopup(char const*, unsigned char, unsigned char)
      Definition:     doPopup(char const*, unsigned char, unsigned char)
      Pushing section .text.doPopup(char const*, unsigned char, unsigned char) to worklist [originates from symbol doPopup(char const*, unsigned char, unsigned char)]
  
  Processing section: .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.doPopup(char const*, unsigned char, unsigned char) (menus.o)
      Reference:      lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Local section:  .rodata..L.str.132 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.132 from menus.o
  
  Selecting lcd.o to define lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Definition:     lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
      Pushing section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) to worklist [originates from symbol lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)]
  
  Processing section: .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd.o)
  
  Selecting pers.o to define eeCheck(bool)
      Definition:     eeCheck(bool)
      Pushing section .text.eeCheck(bool) to worklist [originates from symbol eeCheck(bool)]
  
  Processing section: .text.eeCheck(bool) from pers.o
      Load REL relocations for .text.eeCheck(bool) (pers.o)
      Local section:  .bss.s_eeLongTimer from pers.o using relocation R_ARM_ABS32
      Local section:  .bss.s_eeDirtyTime10ms from pers.o using relocation R_ARM_ABS32
      Reference:      Ee_lock
      Reference:      theWriteFile
      Local section:  .rodata.Str_EEPROM_Overflow from pers.o using relocation R_ARM_ABS32
  
  Processing section: .bss.s_eeLongTimer from pers.o
  
  Processing section: .bss.s_eeDirtyTime10ms from pers.o
  
  Processing section: .rodata.Str_EEPROM_Overflow from pers.o
  
  Selecting pers.o to define Ee_lock
      Definition:     Ee_lock
      Pushing section .bss.Ee_lock to worklist [originates from symbol Ee_lock]
  
  Processing section: .bss.Ee_lock from pers.o
  
  Selecting pers.o to define eeDirty(unsigned char)
      Definition:     eeDirty(unsigned char)
      Pushing section .text.eeDirty(unsigned char) to worklist [originates from symbol eeDirty(unsigned char)]
  
  Processing section: .text.eeDirty(unsigned char) from pers.o
      Load REL relocations for .text.eeDirty(unsigned char) (pers.o)
  
  Selecting er9x.o to define keyDown()
      Definition:     keyDown()
      Pushing section .text.keyDown() to worklist [originates from symbol keyDown()]
  
  Processing section: .text.keyDown() from er9x.o
      Load REL relocations for .text.keyDown() (er9x.o)
  
  Selecting er9x.o to define message(char const*)
      Definition:     message(char const*)
      Pushing section .text.message(char const*) to worklist [originates from symbol message(char const*)]
  
  Processing section: .text.message(char const*) from er9x.o
      Load REL relocations for .text.message(char const*) (er9x.o)
  
  Selecting er9x.o to define popMenu(bool)
      Definition:     popMenu(bool)
      Pushing section .text.popMenu(bool) to worklist [originates from symbol popMenu(bool)]
  
  Processing section: .text.popMenu(bool) from er9x.o
      Load REL relocations for .text.popMenu(bool) (er9x.o)
  
  Selecting er9x.o to define putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsChn(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Load REL relocations for .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (er9x.o)
  
  Selecting er9x.o to define CS_STATE(unsigned char)
      Definition:     CS_STATE(unsigned char)
      Pushing section .text.CS_STATE(unsigned char) to worklist [originates from symbol CS_STATE(unsigned char)]
  
  Processing section: .text.CS_STATE(unsigned char) from er9x.o
      Load REL relocations for .text.CS_STATE(unsigned char) (er9x.o)
  
  Selecting file.o to define EeFsOpen()
      Definition:     EeFsOpen()
      Pushing section .text.EeFsOpen() to worklist [originates from symbol EeFsOpen()]
  
  Processing section: .text.EeFsOpen() from file.o
      Load REL relocations for .text.EeFsOpen() (file.o)
  
  Selecting menus.o to define calcExpo(unsigned char, short)
      Definition:     calcExpo(unsigned char, short)
      Pushing section .text.calcExpo(unsigned char, short) to worklist [originates from symbol calcExpo(unsigned char, short)]
  
  Processing section: .text.calcExpo(unsigned char, short) from menus.o
      Load REL relocations for .text.calcExpo(unsigned char, short) (menus.o)
  
  Selecting menus.o to define char2idx(char)
      Definition:     char2idx(char)
      Pushing section .text.char2idx(char) to worklist [originates from symbol char2idx(char)]
  
  Processing section: .text.char2idx(char) from menus.o
      Load REL relocations for .text.char2idx(char) (menus.o)
      Local section:  .rodata.s_charTab from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.s_charTab from menus.o
  
  Selecting er9x.o to define checkTHR()
      Definition:     checkTHR()
      Pushing section .text.checkTHR() to worklist [originates from symbol checkTHR()]
  
  Processing section: .text.checkTHR() from er9x.o
      Load REL relocations for .text.checkTHR() (er9x.o)
      Reference:      checkThrottlePosition()
      Local section:  .rodata..L.str.5 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.5 from er9x.o
  
  Selecting er9x.o to define checkThrottlePosition()
      Definition:     checkThrottlePosition()
      Pushing section .text.checkThrottlePosition() to worklist [originates from symbol checkThrottlePosition()]
  
  Processing section: .text.checkThrottlePosition() from er9x.o
      Load REL relocations for .text.checkThrottlePosition() (er9x.o)
  
  Selecting menus.o to define dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Definition:     editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
      Pushing section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) to worklist [originates from symbol editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)]
  
  Processing section: .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (menus.o)
      Local section:  .rodata.Str_Name from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Name from menus.o
  
  Selecting drivers.o to define ee_waite()
      Definition:     ee_waite()
      Pushing section .text.ee_waite() to worklist [originates from symbol ee_waite()]
  
  Processing section: .text.ee_waite() from drivers.o
      Load REL relocations for .text.ee_waite() (drivers.o)
  
  Selecting er9x.o to define getValue(unsigned char)
      Definition:     getValue(unsigned char)
      Pushing section .text.getValue(unsigned char) to worklist [originates from symbol getValue(unsigned char)]
  
  Processing section: .text.getValue(unsigned char) from er9x.o
      Load REL relocations for .text.getValue(unsigned char) (er9x.o)
  
  Selecting menus.o to define idx2char(unsigned char)
      Definition:     idx2char(unsigned char)
      Pushing section .text.idx2char(unsigned char) to worklist [originates from symbol idx2char(unsigned char)]
  
  Processing section: .text.idx2char(unsigned char) from menus.o
      Load REL relocations for .text.idx2char(unsigned char) (menus.o)
  
  Selecting drivers.o to define keyState(EnumKeys)
      Definition:     keyState(EnumKeys)
      Pushing section .text.keyState(EnumKeys) to worklist [originates from symbol keyState(EnumKeys)]
  
  Processing section: .text.keyState(EnumKeys) from drivers.o
      Load REL relocations for .text.keyState(EnumKeys) (drivers.o)
      Reference:      PING
      Reference:      PINE
  
  Selecting BoardI6.o to define PINE
      Definition:     PINE
      Pushing section .text.PINE to worklist [originates from symbol PINE]
  
  Processing section: .text.PINE from BoardI6.o
      Load REL relocations for .text.PINE (BoardI6.o)
  
  Selecting BoardI6.o to define PING
      Definition:     PING
      Pushing section .text.PING to worklist [originates from symbol PING]
  
  Processing section: .text.PING from BoardI6.o
      Load REL relocations for .text.PING (BoardI6.o)
  
  Selecting lcd.o to define lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_init()
      Definition:     lcd_init()
      Pushing section .text.lcd_init() to worklist [originates from symbol lcd_init()]
  
  Processing section: .text.lcd_init() from lcd.o
      Load REL relocations for .text.lcd_init() (lcd.o)
      Reference:      rst_0
      Reference:      rst_1
      Reference:      rw_0
      Reference:      cs_0
      Reference:      lcdSetContrast()
      Local section:  .rodata.Lcdinit from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Lcdinit from lcd.o
  
  Selecting lcd.o to define lcdSetContrast()
      Definition:     lcdSetContrast()
      Pushing section .text.lcdSetContrast() to worklist [originates from symbol lcdSetContrast()]
  
  Processing section: .text.lcdSetContrast() from lcd.o
      Load REL relocations for .text.lcdSetContrast() (lcd.o)
  
  Selecting lcd.o to define lcd_plot(unsigned char, unsigned char)
      Definition:     lcd_plot(unsigned char, unsigned char)
      Pushing section .text.lcd_plot(unsigned char, unsigned char) to worklist [originates from symbol lcd_plot(unsigned char, unsigned char)]
  
  Processing section: .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_plot(unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_write_bits(unsigned char*, unsigned char)
      Local section:  .rodata._bitmask from lcd.o using relocation R_ARM_ABS32
  
  Processing section: .rodata._bitmask from lcd.o
  
  Selecting lcd.o to define lcd_write_bits(unsigned char*, unsigned char)
      Definition:     lcd_write_bits(unsigned char*, unsigned char)
      Pushing section .text.lcd_write_bits(unsigned char*, unsigned char) to worklist [originates from symbol lcd_write_bits(unsigned char*, unsigned char)]
  
  Processing section: .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_write_bits(unsigned char*, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_putc(unsigned char, unsigned char, char)
      Definition:     lcd_putc(unsigned char, unsigned char, char)
      Pushing section .text.lcd_putc(unsigned char, unsigned char, char) to worklist [originates from symbol lcd_putc(unsigned char, unsigned char, char)]
  
  Processing section: .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Load REL relocations for .text.lcd_putc(unsigned char, unsigned char, char) (lcd.o)
  
  Selecting lcd.o to define lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
      Reference:      lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting lcd.o to define lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting er9x.o to define pushMenu(void (*)(unsigned char))
      Definition:     pushMenu(void (*)(unsigned char))
      Pushing section .text.pushMenu(void (*)(unsigned char)) to worklist [originates from symbol pushMenu(void (*)(unsigned char))]
  
  Processing section: .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.pushMenu(void (*)(unsigned char)) (er9x.o)
      Local section:  .rodata..L.str.7 from er9x.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.7 from er9x.o
  
  Selecting lcd.o to define putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Definition:     putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
      Pushing section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) to worklist [originates from symbol putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)]
  
  Processing section: .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (lcd.o)
  
  Selecting pers.o to define setNameP(char*, char const*)
      Definition:     setNameP(char*, char const*)
      Pushing section .text.setNameP(char*, char const*) to worklist [originates from symbol setNameP(char*, char const*)]
  
  Processing section: .text.setNameP(char*, char const*) from pers.o
  
  Selecting menus.o to define brSubHead(char const*)
      Definition:     brSubHead(char const*)
      Pushing section .text.brSubHead(char const*) to worklist [originates from symbol brSubHead(char const*)]
  
  Processing section: .text.brSubHead(char const*) from menus.o
      Load REL relocations for .text.brSubHead(char const*) (menus.o)
  
  Selecting er9x.o to define chainMenu(void (*)(unsigned char))
      Definition:     chainMenu(void (*)(unsigned char))
      Pushing section .text.chainMenu(void (*)(unsigned char)) to worklist [originates from symbol chainMenu(void (*)(unsigned char))]
  
  Processing section: .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Load REL relocations for .text.chainMenu(void (*)(unsigned char)) (er9x.o)
  
  Selecting menus.o to define drawCurve(unsigned char)
      Definition:     drawCurve(unsigned char)
      Pushing section .text.drawCurve(unsigned char) to worklist [originates from symbol drawCurve(unsigned char)]
  
  Processing section: .text.drawCurve(unsigned char) from menus.o
      Load REL relocations for .text.drawCurve(unsigned char) (menus.o)
  
  Selecting drivers.o to define getSvFifo()
      Definition:     getSvFifo()
      Pushing section .text.getSvFifo() to worklist [originates from symbol getSvFifo()]
  
  Processing section: .text.getSvFifo() from drivers.o
      Load REL relocations for .text.getSvFifo() (drivers.o)
      Reference:      SvFifo
  
  Selecting drivers.o to define SvFifo
      Definition:     SvFifo
      Pushing section .bss.SvFifo to worklist [originates from symbol SvFifo]
  
  Processing section: .bss.SvFifo from drivers.o
  
  Selecting er9x.o to define getSwitch(signed char, bool, unsigned char)
      Definition:     getSwitch(signed char, bool, unsigned char)
      Pushing section .text.getSwitch(signed char, bool, unsigned char) to worklist [originates from symbol getSwitch(signed char, bool, unsigned char)]
  
  Processing section: .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Load REL relocations for .text.getSwitch(signed char, bool, unsigned char) (er9x.o)
  
  Selecting lcd.o to define lcd_clear()
      Definition:     lcd_clear()
      Pushing section .text.lcd_clear() to worklist [originates from symbol lcd_clear()]
  
  Processing section: .text.lcd_clear() from lcd.o
      Load REL relocations for .text.lcd_clear() (lcd.o)
  
  Selecting lcd.o to define lcd_hline(unsigned char, unsigned char, signed char)
      Definition:     lcd_hline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_hline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_hline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd.o)
      Reference:      lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  
  Selecting lcd.o to define lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd.o)
  
  Selecting lcd.o to define lcd_vline(unsigned char, unsigned char, signed char)
      Definition:     lcd_vline(unsigned char, unsigned char, signed char)
      Pushing section .text.lcd_vline(unsigned char, unsigned char, signed char) to worklist [originates from symbol lcd_vline(unsigned char, unsigned char, signed char)]
  
  Processing section: .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Load REL relocations for .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd.o)
  
  Selecting menus.o to define menuProc0(unsigned char)
      Definition:     menuProc0(unsigned char)
      Pushing section .text.menuProc0(unsigned char) to worklist [originates from symbol menuProc0(unsigned char)]
  
  Processing section: .text.menuProc0(unsigned char) from menus.o
      Load REL relocations for .text.menuProc0(unsigned char) (menus.o)
      Reference:      putsVBat(unsigned char, unsigned char, unsigned char)
      Reference:      displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Reference:      dispSignalQality(unsigned char)
      Reference:      dispInVExVDbl(unsigned char)
      Reference:      singleBar(unsigned char, unsigned char, short)
      Reference:      doMainScreenGrphics()
      Local section:  .bss.menuProc0(unsigned char)::trimSwLock from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.51 from menus.o using relocation R_ARM_ABS32
      Reference:      switchDisplay(unsigned char, unsigned char)
      Reference:      displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Local section:  .rodata..L.str.52 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.53 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.50 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuProc0(unsigned char)::xt from menus.o using relocation R_ARM_ABS32
      Local section:  .bss.inputs_subview from menus.o using relocation R_ARM_ABS32
      Reference:      menuProcStatistic(unsigned char)
      Reference:      menuProcIndex(unsigned char)
      Local section:  .rodata..L.str.58 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.59 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.57 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.55 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.56 from menus.o using relocation R_ARM_ABS32
      Reference:      frskyUsrStreaming
      Local section:  .rodata..L.str.54 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.60 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProc0(unsigned char)::trimSwLock from menus.o
  
  Processing section: .rodata..L.str.51 from menus.o
  
  Processing section: .rodata..L.str.52 from menus.o
  
  Processing section: .rodata..L.str.53 from menus.o
  
  Processing section: .rodata..L.str.50 from menus.o
  
  Processing section: .rodata.menuProc0(unsigned char)::xt from menus.o
  
  Processing section: .bss.inputs_subview from menus.o
  
  Processing section: .rodata..L.str.58 from menus.o
  
  Processing section: .rodata..L.str.59 from menus.o
  
  Processing section: .rodata..L.str.57 from menus.o
  
  Processing section: .rodata..L.str.55 from menus.o
  
  Processing section: .rodata..L.str.56 from menus.o
  
  Processing section: .rodata..L.str.54 from menus.o
  
  Processing section: .rodata..L.str.60 from menus.o
  
  Selecting menus.o to define displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define dispInVExVDbl(unsigned char)
      Definition:     dispInVExVDbl(unsigned char)
      Pushing section .text.dispInVExVDbl(unsigned char) to worklist [originates from symbol dispInVExVDbl(unsigned char)]
  
  Processing section: .text.dispInVExVDbl(unsigned char) from menus.o
      Load REL relocations for .text.dispInVExVDbl(unsigned char) (menus.o)
      Local section:  .rodata..L.str.46 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.47 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.46 from menus.o
  
  Processing section: .rodata..L.str.47 from menus.o
  
  Selecting menus.o to define menuProcIndex(unsigned char)
      Definition:     menuProcIndex(unsigned char)
      Pushing section .text.menuProcIndex(unsigned char) to worklist [originates from symbol menuProcIndex(unsigned char)]
  
  Processing section: .text.menuProcIndex(unsigned char) from menus.o
      Load REL relocations for .text.menuProcIndex(unsigned char) (menus.o)
      Local section:  .bss.menuProcIndex(unsigned char)::mstate from menus.o using relocation R_ARM_ABS32
      Local section:  .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o using relocation R_ARM_THM_CALL
      Local section:  .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Display from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.61 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.62 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_AudioHaptic from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.63 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.64 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.65 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Alarms from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.68 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Beep_Countdown from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.70 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.71 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.72 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Controls from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.67 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Calibration from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Trainer from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.78 from menus.o using relocation R_ARM_ABS32
      Reference:      putc_0_1(unsigned char, unsigned char, unsigned char)
      Reference:      lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Reference:      lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Local section:  .rodata..L.str.79 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Version from menus.o using relocation R_ARM_ABS32
      Reference:      Stamps
      Local section:  .rodata..L.str.73 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.76 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_Hardware from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.82 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.74 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.75 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.sticks from menus.o using relocation R_ARM_ABS32
      Reference:      putsVolts(unsigned char, unsigned char, short, unsigned char)
      Local section:  .rodata..L.str.85 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.menuWhenDone from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.84 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.83 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.77 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.80 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.81 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.69 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.66 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_minute_Beep from menus.o using relocation R_ARM_ABS32
  
  Processing section: .bss.menuProcIndex(unsigned char)::mstate from menus.o
  
  Processing section: .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Load REL relocations for .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (menus.o)
  
  Processing section: .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Load REL relocations for .rodata.menuProcIndex(unsigned char)::n_Strings (menus.o)
      Local section:  .rodata.Str_DiagSwtch from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata.Str_DiagAna from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.Str_Display from menus.o
  
  Processing section: .rodata..L.str.61 from menus.o
  
  Processing section: .rodata..L.str.62 from menus.o
  
  Processing section: .rodata.Str_AudioHaptic from menus.o
  
  Processing section: .rodata..L.str.63 from menus.o
  
  Processing section: .rodata..L.str.64 from menus.o
  
  Processing section: .rodata..L.str.65 from menus.o
  
  Processing section: .rodata.Str_Alarms from menus.o
  
  Processing section: .rodata..L.str.68 from menus.o
  
  Processing section: .rodata.Str_Beep_Countdown from menus.o
  
  Processing section: .rodata..L.str.70 from menus.o
  
  Processing section: .rodata..L.str.71 from menus.o
  
  Processing section: .rodata..L.str.72 from menus.o
  
  Processing section: .rodata.Str_Controls from menus.o
  
  Processing section: .rodata..L.str.67 from menus.o
  
  Processing section: .rodata.Str_Calibration from menus.o
  
  Processing section: .rodata.Str_Trainer from menus.o
  
  Processing section: .rodata..L.str.78 from menus.o
  
  Processing section: .rodata..L.str.79 from menus.o
  
  Processing section: .rodata.Str_Version from menus.o
  
  Processing section: .rodata..L.str.73 from menus.o
  
  Processing section: .rodata..L.str.76 from menus.o
  
  Processing section: .rodata.Str_Hardware from menus.o
  
  Processing section: .rodata..L.str.82 from menus.o
  
  Processing section: .rodata..L.str.74 from menus.o
  
  Processing section: .rodata..L.str.75 from menus.o
  
  Processing section: .rodata.sticks from menus.o
  
  Processing section: .rodata..L.str.85 from menus.o
  
  Processing section: .rodata.menuWhenDone from menus.o
  
  Processing section: .rodata..L.str.84 from menus.o
  
  Processing section: .rodata..L.str.83 from menus.o
  
  Processing section: .rodata..L.str.77 from menus.o
  
  Processing section: .rodata..L.str.80 from menus.o
  
  Processing section: .rodata..L.str.81 from menus.o
  
  Processing section: .rodata..L.str.69 from menus.o
  
  Processing section: .rodata..L.str.66 from menus.o
  
  Processing section: .rodata.Str_minute_Beep from menus.o
  
  Processing section: .rodata.Str_DiagSwtch from menus.o
  
  Processing section: .rodata.Str_DiagAna from menus.o
  
  Selecting stamp.o to define Stamps
      Definition:     Stamps
      Pushing section .rodata.Stamps to worklist [originates from symbol Stamps]
  
  Processing section: .rodata.Stamps from stamp.o
  
  Selecting lcd.o to define lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Definition:     lcd_outhex4(unsigned char, unsigned char, unsigned short)
      Pushing section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol lcd_outhex4(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Load REL relocations for .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd.o)
  
  Selecting menus.o to define switchDisplay(unsigned char, unsigned char)
      Definition:     switchDisplay(unsigned char, unsigned char)
      Pushing section .text.switchDisplay(unsigned char, unsigned char) to worklist [originates from symbol switchDisplay(unsigned char, unsigned char)]
  
  Processing section: .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.switchDisplay(unsigned char, unsigned char) (menus.o)
      Reference:      displayOneSwitch(unsigned char, unsigned char, unsigned char)
  
  Selecting menus.o to define dispSignalQality(unsigned char)
      Definition:     dispSignalQality(unsigned char)
      Pushing section .text.dispSignalQality(unsigned char) to worklist [originates from symbol dispSignalQality(unsigned char)]
  
  Processing section: .text.dispSignalQality(unsigned char) from menus.o
      Load REL relocations for .text.dispSignalQality(unsigned char) (menus.o)
      Local section:  .rodata..L.str.48 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.49 from menus.o using relocation R_ARM_ABS32
  
  Processing section: .rodata..L.str.48 from menus.o
  
  Processing section: .rodata..L.str.49 from menus.o
  
  Selecting menus.o to define displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting menus.o to define menuProcStatistic(unsigned char)
      Definition:     menuProcStatistic(unsigned char)
      Pushing section .text.menuProcStatistic(unsigned char) to worklist [originates from symbol menuProcStatistic(unsigned char)]
  
  Processing section: .text.menuProcStatistic(unsigned char) from menus.o
      Load REL relocations for .text.menuProcStatistic(unsigned char) (menus.o)
      Local section:  .rodata..L.str.42 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.43 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.44 from menus.o using relocation R_ARM_ABS32
      Local section:  .rodata..L.str.45 from menus.o using relocation R_ARM_ABS32
      Reference:      putsTimeNoAtt(unsigned char, unsigned char, short)
  
  Processing section: .rodata..L.str.42 from menus.o
  
  Processing section: .rodata..L.str.43 from menus.o
  
  Processing section: .rodata..L.str.44 from menus.o
  
  Processing section: .rodata..L.str.45 from menus.o
  
  Selecting menus.o to define putsTimeNoAtt(unsigned char, unsigned char, short)
      Definition:     putsTimeNoAtt(unsigned char, unsigned char, short)
      Pushing section .text.putsTimeNoAtt(unsigned char, unsigned char, short) to worklist [originates from symbol putsTimeNoAtt(unsigned char, unsigned char, short)]
  
  Processing section: .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Load REL relocations for .text.putsTimeNoAtt(unsigned char, unsigned char, short) (menus.o)
  
  Selecting menus.o to define doMainScreenGrphics()
      Definition:     doMainScreenGrphics()
      Pushing section .text.doMainScreenGrphics() to worklist [originates from symbol doMainScreenGrphics()]
  
  Processing section: .text.doMainScreenGrphics() from menus.o
      Load REL relocations for .text.doMainScreenGrphics() (menus.o)
      Reference:      telltale(unsigned char, signed char, signed char)
  
  Selecting menus.o to define displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Definition:     displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
      Pushing section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Definition:     lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
      Pushing section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) to worklist [originates from symbol lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)]
  
  Processing section: .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Load REL relocations for .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd.o)
  
  Selecting menus.o to define putc_0_1(unsigned char, unsigned char, unsigned char)
      Definition:     putc_0_1(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putc_0_1(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putc_0_1(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.putc_0_1(unsigned char, unsigned char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVBat(unsigned char, unsigned char, unsigned char)
      Definition:     putsVBat(unsigned char, unsigned char, unsigned char)
      Pushing section .text.putsVBat(unsigned char, unsigned char, unsigned char) to worklist [originates from symbol putsVBat(unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Load REL relocations for .text.putsVBat(unsigned char, unsigned char, unsigned char) (lcd.o)
  
  Selecting menus.o to define telltale(unsigned char, signed char, signed char)
      Definition:     telltale(unsigned char, signed char, signed char)
      Pushing section .text.telltale(unsigned char, signed char, signed char) to worklist [originates from symbol telltale(unsigned char, signed char, signed char)]
  
  Processing section: .text.telltale(unsigned char, signed char, signed char) from menus.o
      Load REL relocations for .text.telltale(unsigned char, signed char, signed char) (menus.o)
  
  Selecting pers.o to define modelSave(unsigned char)
      Definition:     modelSave(unsigned char)
      Pushing section .text.modelSave(unsigned char) to worklist [originates from symbol modelSave(unsigned char)]
  
  Processing section: .text.modelSave(unsigned char) from pers.o
      Load REL relocations for .text.modelSave(unsigned char) (pers.o)
  
  Selecting menus.o to define put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Definition:     put_curve(unsigned char, unsigned char, signed char, unsigned char)
      Pushing section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) to worklist [originates from symbol put_curve(unsigned char, unsigned char, signed char, unsigned char)]
  
  Processing section: .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Load REL relocations for .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (menus.o)
  
  Selecting lcd.o to define putsVolts(unsigned char, unsigned char, short, unsigned char)
      Definition:     putsVolts(unsigned char, unsigned char, short, unsigned char)
      Pushing section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) to worklist [originates from symbol putsVolts(unsigned char, unsigned char, short, unsigned char)]
  
  Processing section: .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Load REL relocations for .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (lcd.o)
  
  Selecting er9x.o to define setVolume(unsigned char)
      Definition:     setVolume(unsigned char)
      Pushing section .text.setVolume(unsigned char) to worklist [originates from symbol setVolume(unsigned char)]
  
  Processing section: .text.setVolume(unsigned char) from er9x.o
      Load REL relocations for .text.setVolume(unsigned char) (er9x.o)
  
  Selecting menus.o to define singleBar(unsigned char, unsigned char, short)
      Definition:     singleBar(unsigned char, unsigned char, short)
      Pushing section .text.singleBar(unsigned char, unsigned char, short) to worklist [originates from symbol singleBar(unsigned char, unsigned char, short)]
  
  Processing section: .text.singleBar(unsigned char, unsigned char, short) from menus.o
      Load REL relocations for .text.singleBar(unsigned char, unsigned char, short) (menus.o)
  
  Selecting audio.o to define audioQueue::event(unsigned char, unsigned char)
      Definition:     audioQueue::event(unsigned char, unsigned char)
      Pushing section .text.audioQueue::event(unsigned char, unsigned char) to worklist [originates from symbol audioQueue::event(unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::event(unsigned char, unsigned char) (audio.o)
      Reference:      audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  
  Selecting audio.o to define audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Definition:     audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
      Pushing section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) to worklist [originates from symbol audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)]
  
  Processing section: .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audio.o)
      Weak reference: audioQueue::getToneLength(unsigned char)
  
  Selecting audio.o to define audioQueue::getToneLength(unsigned char)
      Definition:     audioQueue::getToneLength(unsigned char)
      Pushing section .text.audioQueue::getToneLength(unsigned char) to worklist [originates from symbol audioQueue::getToneLength(unsigned char)]
  
  Processing section: .text.audioQueue::getToneLength(unsigned char) from audio.o
      Load REL relocations for .text.audioQueue::getToneLength(unsigned char) (audio.o)
  
  Selecting file.o to define EFile::closeTrunc()
      Definition:     EFile::closeTrunc()
      Pushing section .text.EFile::closeTrunc() to worklist [originates from symbol EFile::closeTrunc()]
  
  Processing section: .text.EFile::closeTrunc() from file.o
      Load REL relocations for .text.EFile::closeTrunc() (file.o)
      Local section:  .text.EeFsFree(unsigned char) from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsFree(unsigned char) from file.o
      Load REL relocations for .text.EeFsFree(unsigned char) (file.o)
  
  Selecting file.o to define EFile::rm(unsigned char)
      Definition:     EFile::rm(unsigned char)
      Pushing section .text.EFile::rm(unsigned char) to worklist [originates from symbol EFile::rm(unsigned char)]
  
  Processing section: .text.EFile::rm(unsigned char) from file.o
      Load REL relocations for .text.EFile::rm(unsigned char) (file.o)
  
  Selecting file.o to define EFile::read(unsigned char*, unsigned short)
      Definition:     EFile::read(unsigned char*, unsigned short)
      Pushing section .text.EFile::read(unsigned char*, unsigned short) to worklist [originates from symbol EFile::read(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::read(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::read(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::size()
      Definition:     EFile::size()
      Pushing section .text.EFile::size() to worklist [originates from symbol EFile::size()]
  
  Processing section: .text.EFile::size() from file.o
      Load REL relocations for .text.EFile::size() (file.o)
  
  Selecting file.o to define EFile::swap(unsigned char, unsigned char)
      Definition:     EFile::swap(unsigned char, unsigned char)
      Pushing section .text.EFile::swap(unsigned char, unsigned char) to worklist [originates from symbol EFile::swap(unsigned char, unsigned char)]
  
  Processing section: .text.EFile::swap(unsigned char, unsigned char) from file.o
      Load REL relocations for .text.EFile::swap(unsigned char, unsigned char) (file.o)
  
  Selecting file.o to define EFile::write(unsigned char*, unsigned char)
      Definition:     EFile::write(unsigned char*, unsigned char)
      Pushing section .text.EFile::write(unsigned char*, unsigned char) to worklist [originates from symbol EFile::write(unsigned char*, unsigned char)]
  
  Processing section: .text.EFile::write(unsigned char*, unsigned char) from file.o
      Load REL relocations for .text.EFile::write(unsigned char*, unsigned char) (file.o)
      Local section:  .text.EeFsAlloc() from file.o using relocation R_ARM_THM_CALL
  
  Processing section: .text.EeFsAlloc() from file.o
      Load REL relocations for .text.EeFsAlloc() (file.o)
  
  Selecting file.o to define EFile::create(unsigned char, unsigned char, unsigned short)
      Definition:     EFile::create(unsigned char, unsigned char, unsigned short)
      Pushing section .text.EFile::create(unsigned char, unsigned char, unsigned short) to worklist [originates from symbol EFile::create(unsigned char, unsigned char, unsigned short)]
  
  Processing section: .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Load REL relocations for .text.EFile::create(unsigned char, unsigned char, unsigned short) (file.o)
  
  Selecting file.o to define EFile::exists(unsigned char)
      Definition:     EFile::exists(unsigned char)
      Pushing section .text.EFile::exists(unsigned char) to worklist [originates from symbol EFile::exists(unsigned char)]
  
  Processing section: .text.EFile::exists(unsigned char) from file.o
      Load REL relocations for .text.EFile::exists(unsigned char) (file.o)
  
  Selecting file.o to define EFile::openRd(unsigned char)
      Definition:     EFile::openRd(unsigned char)
      Pushing section .text.EFile::openRd(unsigned char) to worklist [originates from symbol EFile::openRd(unsigned char)]
  
  Processing section: .text.EFile::openRd(unsigned char) from file.o
      Load REL relocations for .text.EFile::openRd(unsigned char) (file.o)
  
  Selecting file.o to define EFile::readRlc(unsigned char*, unsigned short)
      Definition:     EFile::readRlc(unsigned char*, unsigned short)
      Pushing section .text.EFile::readRlc(unsigned char*, unsigned short) to worklist [originates from symbol EFile::readRlc(unsigned char*, unsigned short)]
  
  Processing section: .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Load REL relocations for .text.EFile::readRlc(unsigned char*, unsigned short) (file.o)
  
  Selecting file.o to define EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Definition:     EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
      Pushing section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) to worklist [originates from symbol EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)]
  
  Processing section: .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Load REL relocations for .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (file.o)
  
  Selecting menus.o to define MState2::check_columns(unsigned char, unsigned char)
      Definition:     MState2::check_columns(unsigned char, unsigned char)
      Pushing section .text.MState2::check_columns(unsigned char, unsigned char) to worklist [originates from symbol MState2::check_columns(unsigned char, unsigned char)]
  
  Processing section: .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Load REL relocations for .text.MState2::check_columns(unsigned char, unsigned char) (menus.o)
      Reference:      backlightKey()
      Reference:      scrollLR
      Reference:      scrollUD
      Local section:  .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o using relocation R_ARM_ABS32
      Reference:      M_longMenuTimer
  
  Processing section: .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
  
  Selecting menus.o to define M_longMenuTimer
      Definition:     M_longMenuTimer
      Pushing section .bss.M_longMenuTimer to worklist [originates from symbol M_longMenuTimer]
  
  Processing section: .bss.M_longMenuTimer from menus.o
  
  Selecting er9x.o to define backlightKey()
      Definition:     backlightKey()
      Pushing section .text.backlightKey() to worklist [originates from symbol backlightKey()]
  
  Processing section: .text.backlightKey() from er9x.o
      Load REL relocations for .text.backlightKey() (er9x.o)
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_idivmod
      Definition:     __aeabi_idivmod
      Pushing section .text.libc.__aeabi_idivmod to worklist [originates from symbol __aeabi_idivmod]
  
  Processing section: .text.libc.__aeabi_idivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_llsr
      Definition:     __aeabi_llsr
      Pushing section .text.libc.__int64_lsr to worklist [originates from symbol __aeabi_llsr]
  
  Processing section: .text.libc.__int64_lsr from libc_asm.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting libc2_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr
      Definition:     __aeabi_memclr
  
  Selecting libc2_asm.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memclr4
      Definition:     __aeabi_memclr4
  
  Selecting libc2.o (libc_v6m_t_le_eabi_small.a) to define __aeabi_memmove
      Definition:     __aeabi_memmove
      Pushing section .text.libc.memmove to worklist [originates from symbol __aeabi_memmove]
  
  Processing section: .text.libc.memmove from libc2.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting BoardI6.o to define backlight_off
      Definition:     backlight_off
      Pushing section .text.backlight_off to worklist [originates from symbol backlight_off]
  
  Processing section: .text.backlight_off from BoardI6.o
  
  Selecting BoardI6.o to define backlight_on
      Definition:     backlight_on
      Pushing section .text.backlight_on to worklist [originates from symbol backlight_on]
  
  Processing section: .text.backlight_on from BoardI6.o
  
  Selecting er9x.o to define bchout_ar
      Definition:     bchout_ar
      Pushing section .rodata.bchout_ar to worklist [originates from symbol bchout_ar]
  
  Processing section: .rodata.bchout_ar from er9x.o
  
  Selecting menus.o to define bpanaCenter
      Definition:     bpanaCenter
      Pushing section .bss.bpanaCenter to worklist [originates from symbol bpanaCenter]
  
  Processing section: .bss.bpanaCenter from menus.o
  
  Selecting menus.o to define calibratedStick
      Definition:     calibratedStick
      Pushing section .bss.calibratedStick to worklist [originates from symbol calibratedStick]
  
  Processing section: .bss.calibratedStick from menus.o
  
  Selecting BoardI6.o to define cs_0
      Definition:     cs_0
      Pushing section .text.cs_0 to worklist [originates from symbol cs_0]
  
  Processing section: .text.cs_0 from BoardI6.o
  
  Selecting libc2.o (libc_v6m_t_le_eabi_small.a) to define div
      Definition:     div
      Pushing section .text.libc.div to worklist [originates from symbol div]
  
  Processing section: .text.libc.div from libc2.o (libc_v6m_t_le_eabi_small.a)
      Load REL relocations for .text.libc.div (libc2.o (libc_v6m_t_le_eabi_small.a))
  
  Selecting file.o to define eeFs
      Definition:     eeFs
      Pushing section .bss.eeFs to worklist [originates from symbol eeFs]
  
  Processing section: .bss.eeFs from file.o
  
  Selecting A7105_SPI.o to define frskyUsrStreaming
      Definition:     frskyUsrStreaming
      Pushing section .data.frskyUsrStreaming to worklist [originates from symbol frskyUsrStreaming]
  
  Processing section: .data.frskyUsrStreaming from A7105_SPI.o
  
  Selecting er9x.o to define g_LightOffCounter
      Definition:     g_LightOffCounter
      Pushing section .bss.g_LightOffCounter to worklist [originates from symbol g_LightOffCounter]
  
  Processing section: .bss.g_LightOffCounter from er9x.o
  
  Selecting crossfire.o to define g_crsf_config
      Definition:     g_crsf_config
      Pushing section .bss.g_crsf_config to worklist [originates from symbol g_crsf_config]
  
  Processing section: .bss.g_crsf_config from crossfire.o
  
  Selecting menus.o to define g_latency
      Definition:     g_latency
      Pushing section .bss.g_latency to worklist [originates from symbol g_latency]
  
  Processing section: .bss.g_latency from menus.o
  
  Selecting er9x.o to define g_menuStack
      Definition:     g_menuStack
      Pushing section .bss.g_menuStack to worklist [originates from symbol g_menuStack]
  
  Processing section: .bss.g_menuStack from er9x.o
  
  Selecting er9x.o to define g_menuStackPtr
      Definition:     g_menuStackPtr
      Pushing section .bss.g_menuStackPtr to worklist [originates from symbol g_menuStackPtr]
  
  Processing section: .bss.g_menuStackPtr from er9x.o
  
  Selecting menus.o to define g_posHorz
      Definition:     g_posHorz
      Pushing section .bss.g_posHorz to worklist [originates from symbol g_posHorz]
  
  Processing section: .bss.g_posHorz from menus.o
  
  Selecting er9x.o to define g_vbat100mV
      Definition:     g_vbat100mV
      Pushing section .bss.g_vbat100mV to worklist [originates from symbol g_vbat100mV]
  
  Processing section: .bss.g_vbat100mV from er9x.o
  
  Selecting BoardI6.o to define getADC_osmp
      Definition:     getADC_osmp
      Pushing section .text.getADC_osmp to worklist [originates from symbol getADC_osmp]
  
  Processing section: .text.getADC_osmp from BoardI6.o
      Load REL relocations for .text.getADC_osmp (BoardI6.o)
      Local section:  .rodata.ChannelToPin from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .rodata.ChannelToPin from BoardI6.o
  
  Selecting drivers.o to define i2c_buffer
      Definition:     i2c_buffer
      Pushing section .bss.i2c_buffer to worklist [originates from symbol i2c_buffer]
  
  Processing section: .bss.i2c_buffer from drivers.o
  
  Selecting BoardI6.o to define i2c_master
      Definition:     i2c_master
      Pushing section .text.i2c_master to worklist [originates from symbol i2c_master]
  
  Processing section: .text.i2c_master from BoardI6.o
      Load REL relocations for .text.i2c_master (BoardI6.o)
  
  Selecting libc2.o (libc_v6m_t_le_eabi_small.a) to define memcmp
      Definition:     memcmp
      Pushing section .text.libc.memcmp to worklist [originates from symbol memcmp]
  
  Processing section: .text.libc.memcmp from libc2.o (libc_v6m_t_le_eabi_small.a)
  
  Selecting menus.o to define mixToDelete
      Definition:     mixToDelete
      Pushing section .bss.mixToDelete to worklist [originates from symbol mixToDelete]
  
  Processing section: .bss.mixToDelete from menus.o
  
  Selecting er9x.o to define modi12x3
      Definition:     modi12x3
      Pushing section .rodata.modi12x3 to worklist [originates from symbol modi12x3]
  
  Processing section: .rodata.modi12x3 from er9x.o
  
  Selecting crossfire.o to define outputTelemetryBuffer
      Definition:     outputTelemetryBuffer
      Pushing section .bss.outputTelemetryBuffer to worklist [originates from symbol outputTelemetryBuffer]
  
  Processing section: .bss.outputTelemetryBuffer from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferSize
      Definition:     outputTelemetryBufferSize
      Pushing section .bss.outputTelemetryBufferSize to worklist [originates from symbol outputTelemetryBufferSize]
  
  Processing section: .bss.outputTelemetryBufferSize from crossfire.o
  
  Selecting crossfire.o to define outputTelemetryBufferTrigger
      Definition:     outputTelemetryBufferTrigger
      Pushing section .bss.outputTelemetryBufferTrigger to worklist [originates from symbol outputTelemetryBufferTrigger]
  
  Processing section: .bss.outputTelemetryBufferTrigger from crossfire.o
  
  Selecting A7105_SPI.o to define packet
      Definition:     packet
      Pushing section .bss.packet to worklist [originates from symbol packet]
  
  Processing section: .bss.packet from A7105_SPI.o
  
  Selecting A7105_SPI.o to define packet_count
      Definition:     packet_count
      Pushing section .bss.packet_count to worklist [originates from symbol packet_count]
  
  Processing section: .bss.packet_count from A7105_SPI.o
  
  Selecting menus.o to define phyStick
      Definition:     phyStick
      Pushing section .bss.phyStick to worklist [originates from symbol phyStick]
  
  Processing section: .bss.phyStick from menus.o
  
  Selecting lcd.o to define plotType
      Definition:     plotType
      Pushing section .bss.plotType to worklist [originates from symbol plotType]
  
  Processing section: .bss.plotType from lcd.o
  
  Selecting er9x.o to define ppmInAvailable
      Definition:     ppmInAvailable
      Pushing section .bss.ppmInAvailable to worklist [originates from symbol ppmInAvailable]
  
  Processing section: .bss.ppmInAvailable from er9x.o
  
  Selecting er9x.o to define ppmInState
      Definition:     ppmInState
      Pushing section .bss.ppmInState to worklist [originates from symbol ppmInState]
  
  Processing section: .bss.ppmInState from er9x.o
  
  Selecting A7105_SPI.o to define prev_power
      Definition:     prev_power
      Pushing section .data.prev_power to worklist [originates from symbol prev_power]
  
  Processing section: .data.prev_power from A7105_SPI.o
  
  Selecting A7105_SPI.o to define protocol_flags
      Definition:     protocol_flags
      Pushing section .bss.protocol_flags to worklist [originates from symbol protocol_flags]
  
  Processing section: .bss.protocol_flags from A7105_SPI.o
  
  Selecting pulses.o to define pulses2MHz
      Definition:     pulses2MHz
      Pushing section .bss.pulses2MHz to worklist [originates from symbol pulses2MHz]
  
  Processing section: .bss.pulses2MHz from pulses.o
  
  Selecting pulses.o to define pxxFlag
      Definition:     pxxFlag
      Pushing section .bss.pxxFlag to worklist [originates from symbol pxxFlag]
  
  Processing section: .bss.pxxFlag from pulses.o
  
  Selecting BoardI6.o to define rd_0
      Definition:     rd_0
      Pushing section .text.rd_0 to worklist [originates from symbol rd_0]
  
  Processing section: .text.rd_0 from BoardI6.o
  
  Selecting BoardI6.o to define rd_1
      Definition:     rd_1
      Pushing section .text.rd_1 to worklist [originates from symbol rd_1]
  
  Processing section: .text.rd_1 from BoardI6.o
  
  Selecting BoardI6.o to define rs_0
      Definition:     rs_0
      Pushing section .text.rs_0 to worklist [originates from symbol rs_0]
  
  Processing section: .text.rs_0 from BoardI6.o
  
  Selecting BoardI6.o to define rs_1
      Definition:     rs_1
      Pushing section .text.rs_1 to worklist [originates from symbol rs_1]
  
  Processing section: .text.rs_1 from BoardI6.o
  
  Selecting BoardI6.o to define rst_0
      Definition:     rst_0
      Pushing section .text.rst_0 to worklist [originates from symbol rst_0]
  
  Processing section: .text.rst_0 from BoardI6.o
  
  Selecting BoardI6.o to define rst_1
      Definition:     rst_1
      Pushing section .text.rst_1 to worklist [originates from symbol rst_1]
  
  Processing section: .text.rst_1 from BoardI6.o
  
  Selecting BoardI6.o to define rw_0
      Definition:     rw_0
      Pushing section .text.rw_0 to worklist [originates from symbol rw_0]
  
  Processing section: .text.rw_0 from BoardI6.o
  
  Selecting er9x.o to define s_anaFilt
      Definition:     s_anaFilt
      Pushing section .bss.s_anaFilt to worklist [originates from symbol s_anaFilt]
  
  Processing section: .bss.s_anaFilt from er9x.o
  
  Selecting menus.o to define s_editMode
      Definition:     s_editMode
      Pushing section .bss.s_editMode to worklist [originates from symbol s_editMode]
  
  Processing section: .bss.s_editMode from menus.o
  
  Selecting menus.o to define s_editing
      Definition:     s_editing
      Pushing section .bss.s_editing to worklist [originates from symbol s_editing]
  
  Processing section: .bss.s_editing from menus.o
  
  Selecting drivers.o to define s_evt
      Definition:     s_evt
      Pushing section .bss.s_evt to worklist [originates from symbol s_evt]
  
  Processing section: .bss.s_evt from drivers.o
  
  Selecting menus.o to define s_mixMaxSel
      Definition:     s_mixMaxSel
      Pushing section .bss.s_mixMaxSel to worklist [originates from symbol s_mixMaxSel]
  
  Processing section: .bss.s_mixMaxSel from menus.o
  
  Selecting menus.o to define s_moveMode
      Definition:     s_moveMode
      Pushing section .bss.s_moveMode to worklist [originates from symbol s_moveMode]
  
  Processing section: .bss.s_moveMode from menus.o
  
  Selecting menus.o to define s_noHi
      Definition:     s_noHi
      Pushing section .bss.s_noHi to worklist [originates from symbol s_noHi]
  
  Processing section: .bss.s_noHi from menus.o
  
  Selecting menus.o to define s_pgOfs
      Definition:     s_pgOfs
      Pushing section .bss.s_pgOfs to worklist [originates from symbol s_pgOfs]
  
  Processing section: .bss.s_pgOfs from menus.o
  
  Selecting menus.o to define s_timer
      Definition:     s_timer
      Pushing section .bss.s_timer to worklist [originates from symbol s_timer]
  
  Processing section: .bss.s_timer from menus.o
  
  Selecting menus.o to define scrollLR
      Definition:     scrollLR
      Pushing section .bss.scrollLR to worklist [originates from symbol scrollLR]
  
  Processing section: .bss.scrollLR from menus.o
  
  Selecting menus.o to define scrollUD
      Definition:     scrollUD
      Pushing section .bss.scrollUD to worklist [originates from symbol scrollUD]
  
  Processing section: .bss.scrollUD from menus.o
  
  Selecting menus.o to define scroll_disabled
      Definition:     scroll_disabled
      Pushing section .bss.scroll_disabled to worklist [originates from symbol scroll_disabled]
  
  Processing section: .bss.scroll_disabled from menus.o
  
  Selecting BoardI6.o to define sei
      Definition:     sei
      Pushing section .text.sei to worklist [originates from symbol sei]
  
  Processing section: .text.sei from BoardI6.o
  
  Selecting pulses.o to define serialDat0
      Definition:     serialDat0
      Pushing section .bss.serialDat0 to worklist [originates from symbol serialDat0]
  
  Processing section: .bss.serialDat0 from pulses.o
  
  Selecting BoardI6.o to define setup_crsf_serial_port
      Definition:     setup_crsf_serial_port
      Pushing section .text.setup_crsf_serial_port to worklist [originates from symbol setup_crsf_serial_port]
  
  Processing section: .text.setup_crsf_serial_port from BoardI6.o
      Load REL relocations for .text.setup_crsf_serial_port (BoardI6.o)
      Local section:  .bss.g_crsf_read_callback from BoardI6.o using relocation R_ARM_ABS32
  
  Processing section: .bss.g_crsf_read_callback from BoardI6.o
  
  Selecting er9x.o to define stickMoved
      Definition:     stickMoved
      Pushing section .bss.stickMoved to worklist [originates from symbol stickMoved]
  
  Processing section: .bss.stickMoved from er9x.o
  
  Selecting er9x.o to define stickScramble
      Definition:     stickScramble
      Pushing section .rodata.stickScramble to worklist [originates from symbol stickScramble]
  
  Processing section: .rodata.stickScramble from er9x.o
  
  Selecting er9x.o to define sysFlags
      Definition:     sysFlags
      Pushing section .bss.sysFlags to worklist [originates from symbol sysFlags]
  
  Processing section: .bss.sysFlags from er9x.o
  
  Selecting crossfire.o to define telemetryErrors
      Definition:     telemetryErrors
      Pushing section .bss.telemetryErrors to worklist [originates from symbol telemetryErrors]
  
  Processing section: .bss.telemetryErrors from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBuffer
      Definition:     telemetryRxBuffer
      Pushing section .bss.telemetryRxBuffer to worklist [originates from symbol telemetryRxBuffer]
  
  Processing section: .bss.telemetryRxBuffer from crossfire.o
  
  Selecting crossfire.o to define telemetryRxBufferCount
      Definition:     telemetryRxBufferCount
      Pushing section .bss.telemetryRxBufferCount to worklist [originates from symbol telemetryRxBufferCount]
  
  Processing section: .bss.telemetryRxBufferCount from crossfire.o
  
  Selecting pers.o to define theFile
      Definition:     theFile
      Pushing section .bss.theFile to worklist [originates from symbol theFile]
  
  Processing section: .bss.theFile from pers.o
  
  Selecting pers.o to define theWriteFile
      Definition:     theWriteFile
      Pushing section .bss.theWriteFile to worklist [originates from symbol theWriteFile]
  
  Processing section: .bss.theWriteFile from pers.o
  
  Selecting er9x.o to define tick10ms
      Definition:     tick10ms
      Pushing section .bss.tick10ms to worklist [originates from symbol tick10ms]
  
  Processing section: .bss.tick10ms from er9x.o
  
  Selecting er9x.o to define tmrEEPROM
      Definition:     tmrEEPROM
      Pushing section .bss.tmrEEPROM to worklist [originates from symbol tmrEEPROM]
  
  Processing section: .bss.tmrEEPROM from er9x.o


***************************************************************************************
***                                                                                 ***
***                                   Keep inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Applying keep
      Keeping section .cfm
  Sections that are explicitly kept by the script:
      .cfm
  Keeping symbols set on the command line:
      Reset_Handler
      _vectors
  Keeping init arrays sections for object files


***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Define symbols                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Find sections                                  ***
***                                                                                 ***
***************************************************************************************

  Defining any required ES block symbols
      Selecting block stack to define __stack_end__
  
  Processing section: .cfm from MKL16Z4_Vectors.o
  
  Processing section: .init_array from SX127x.o
      Load REL relocations for .init_array (SX127x.o)
      Local section:  .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o using relocation R_ARM_TARGET1
  
  Processing section: .init_array from ELRS.o
      Load REL relocations for .init_array (ELRS.o)
      Local section:  .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o using relocation R_ARM_TARGET1
  
  Processing section: .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Load REL relocations for .text._GLOBAL__sub_I_SX127x.cpp (SX127x.o)
      Reference:      SX127xHal::SX127xHal()
      Reference:      hal
  
  Processing section: .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Load REL relocations for .text._GLOBAL__sub_I_ELRS.cpp (ELRS.o)
      Reference:      SX127xDriver::SX127xDriver()
      Reference:      GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Reference:      StubbornReceiver::StubbornReceiver(unsigned char)
      Reference:      StubbornSender::StubbornSender(unsigned char)
      Reference:      Radio
      Reference:      ota_crc
      Reference:      LQCalc
      Reference:      TelemetryReceiver
      Reference:      MspSender
  
  Selecting ELRS.o to define LQCalc
      Definition:     LQCalc
      Pushing section .bss.LQCalc to worklist [originates from symbol LQCalc]
  
  Processing section: .bss.LQCalc from ELRS.o
  
  Selecting ELRS.o to define MspSender
      Definition:     MspSender
      Pushing section .bss.MspSender to worklist [originates from symbol MspSender]
  
  Processing section: .bss.MspSender from ELRS.o
  
  Selecting ELRS.o to define Radio
      Definition:     Radio
      Pushing section .bss.Radio to worklist [originates from symbol Radio]
  
  Processing section: .bss.Radio from ELRS.o
  
  Selecting ELRS.o to define TelemetryReceiver
      Definition:     TelemetryReceiver
      Pushing section .bss.TelemetryReceiver to worklist [originates from symbol TelemetryReceiver]
  
  Processing section: .bss.TelemetryReceiver from ELRS.o
  
  Selecting SX127x.o to define SX127xDriver::SX127xDriver()
      Definition:     SX127xDriver::SX127xDriver()
      Pushing section .text.SX127xDriver::SX127xDriver() to worklist [originates from symbol SX127xDriver::SX127xDriver()]
  
  Processing section: .text.SX127xDriver::SX127xDriver() from SX127x.o
      Load REL relocations for .text.SX127xDriver::SX127xDriver() (SX127x.o)
      Reference:      SX127xDriver::instance
  
  Selecting SX127x.o to define SX127xDriver::instance
      Definition:     SX127xDriver::instance
      Pushing section .bss.SX127xDriver::instance to worklist [originates from symbol SX127xDriver::instance]
  
  Processing section: .bss.SX127xDriver::instance from SX127x.o
  
  Selecting crc.o to define GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Definition:     GENERIC_CRC14::GENERIC_CRC14(unsigned short)
      Pushing section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) to worklist [originates from symbol GENERIC_CRC14::GENERIC_CRC14(unsigned short)]
  
  Processing section: .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
  
  Selecting stubborn_sender.o to define StubbornSender::StubbornSender(unsigned char)
      Definition:     StubbornSender::StubbornSender(unsigned char)
      Pushing section .text.StubbornSender::StubbornSender(unsigned char) to worklist [originates from symbol StubbornSender::StubbornSender(unsigned char)]
  
  Processing section: .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Load REL relocations for .text.StubbornSender::StubbornSender(unsigned char) (stubborn_sender.o)
      Reference:      StubbornSender::ResetState()
  
  Selecting stubborn_sender.o to define StubbornSender::ResetState()
      Definition:     StubbornSender::ResetState()
      Pushing section .text.StubbornSender::ResetState() to worklist [originates from symbol StubbornSender::ResetState()]
  
  Processing section: .text.StubbornSender::ResetState() from stubborn_sender.o
  
  Selecting stubborn_receiver.o to define StubbornReceiver::StubbornReceiver(unsigned char)
      Definition:     StubbornReceiver::StubbornReceiver(unsigned char)
      Pushing section .text.StubbornReceiver::StubbornReceiver(unsigned char) to worklist [originates from symbol StubbornReceiver::StubbornReceiver(unsigned char)]
  
  Processing section: .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
  
  Selecting SX127xHal.o to define SX127xHal::SX127xHal()
      Definition:     SX127xHal::SX127xHal()
      Pushing section .text.SX127xHal::SX127xHal() to worklist [originates from symbol SX127xHal::SX127xHal()]
  
  Processing section: .text.SX127xHal::SX127xHal() from SX127xHal.o
      Load REL relocations for .text.SX127xHal::SX127xHal() (SX127xHal.o)
      Reference:      SX127xHal::instance
  
  Selecting SX127xHal.o to define SX127xHal::instance
      Definition:     SX127xHal::instance
      Pushing section .bss.SX127xHal::instance to worklist [originates from symbol SX127xHal::instance]
  
  Processing section: .bss.SX127xHal::instance from SX127xHal.o
  
  Selecting SX127x.o to define hal
      Definition:     hal
      Pushing section .bss.hal to worklist [originates from symbol hal]
  
  Processing section: .bss.hal from SX127x.o
  
  Selecting ELRS.o to define ota_crc
      Definition:     ota_crc
      Pushing section .bss.ota_crc to worklist [originates from symbol ota_crc]
  
  Processing section: .bss.ota_crc from ELRS.o


***************************************************************************************
***                                                                                 ***
***                                 Rewrite headers                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Define access                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Check allocatable                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Merge sections                                  ***
***                                                                                 ***
***************************************************************************************

  Shared references:
      U32 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes
      U64 sizes: 0 unshared bytes, 0 shared bytes, saves 0 bytes


***************************************************************************************
***                                                                                 ***
***                                  Merge strings                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                               Analyze attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Function inlining                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Auto-at sections                                 ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Select inputs                                  ***
***                                                                                 ***
***************************************************************************************

  Select inputs for block vectors
      Select section .vectors (_vectors) from MKL16Z4_Vectors.o using name
  Select inputs for block vectors_ram
  Select inputs for inline block <#1> at line 61, col 85
      Select section .init_array ([.init_array]) from er9x.o using attribute or mask
      Select section .init_array ([.init_array]) from SX127x.o using attribute or mask
      Select section .init_array ([.init_array]) from ELRS.o using attribute or mask
  Select inputs for block ctors
      Select inline block <#1> at line 61, col 85 ([<#1> at line 61, col 85]) from [ Linker created ] using name
  Select inputs for inline block <#2> at line 62, col 85
  Select inputs for block dtors
      Select inline block <#2> at line 62, col 85 ([<#2> at line 62, col 85]) from [ Linker created ] using name
  Select inputs for block exidx
  Select inputs for block tbss
  Select inputs for block tdata
  Select inputs for block tls
      Select block tbss ([tbss]) from [ Linker created ] using name
      Select block tdata ([tdata]) from [ Linker created ] using name
  Select inputs for block tdata_load
      Select copy of block tdata ([tdata]) from [ Linker created ] using name
  Select inputs for block heap
  Select inputs for block stack
  Select inputs for block cfm
      Select section .cfm (BackDoorKey) from MKL16Z4_Vectors.o using name
  Select inputs for 'place at start' block <#5> at line 97, col 45
      Select block vectors ([vectors]) from [ Linker created ] using name
  Select inputs for 'place at start' block <#6> at line 98, col 45
      Select block cfm ([cfm]) from [ Linker created ] using name
  Select inputs for 'place at start' block <#10> at line 119, col 45
      Select block vectors_ram ([vectors_ram]) from [ Linker created ] using name
  Select inputs for 'place at end' block <#14> at line 129, col 45
      Select block stack ([stack]) from [ Linker created ] using name
  Select inputs for 'place in' block <#3> at line 90, col 44
  Select inputs for 'place in' block <#4> at line 91, col 44
  Select inputs for 'place in' block <#7> at line 99, col 45
      Select block exidx ([exidx]) from [ Linker created ] using name
      Select block ctors ([ctors]) from [ Linker created ] using name
      Select block dtors ([dtors]) from [ Linker created ] using name
      Select section .init.SystemInit (SystemInit) from system_MKL16Z4.o using wildcard
      Select section .init._start (_start) from SEGGER_THUMB_Startup.o using wildcard
      Select section .text.lcdSetRefVolt(unsigned char) (lcdSetRefVolt(unsigned char)) from lcd.o using wildcard
      Select section .text.lcdSendCtl(unsigned char) (lcdSendCtl(unsigned char)) from lcd.o using wildcard
      Select section .text.lcdSetContrast() (lcdSetContrast()) from lcd.o using wildcard
      Select section .text.lcd_clear() (lcd_clear()) from lcd.o using wildcard
      Select section .text.lcd_init() (lcd_init()) from lcd.o using wildcard
      Select section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_putc(unsigned char, unsigned char, char) (lcd_putc(unsigned char, unsigned char, char)) from lcd.o using wildcard
      Select section .text.lcd_puts_Pleft(unsigned char, char const*) (lcd_puts_Pleft(unsigned char, char const*)) from lcd.o using wildcard
      Select section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) (lcd_puts_Pskip(unsigned char, char const*, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_puts_P(unsigned char, unsigned char, char const*) (lcd_puts_P(unsigned char, unsigned char, char const*)) from lcd.o using wildcard
      Select section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) (lcd_outhex4(unsigned char, unsigned char, unsigned short)) from lcd.o using wildcard
      Select section .text.lcd_write_bits(unsigned char*, unsigned char) (lcd_write_bits(unsigned char*, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_plot(unsigned char, unsigned char) (lcd_plot(unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_vline(unsigned char, unsigned char, signed char) (lcd_vline(unsigned char, unsigned char, signed char)) from lcd.o using wildcard
      Select section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_hline(unsigned char, unsigned char, signed char) (lcd_hline(unsigned char, unsigned char, signed char)) from lcd.o using wildcard
      Select section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)) from lcd.o using wildcard
      Select section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_outdez(unsigned char, unsigned char, short) (lcd_outdez(unsigned char, unsigned char, short)) from lcd.o using wildcard
      Select section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.refreshDiplay() (refreshDiplay()) from lcd.o using wildcard
      Select section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)) from lcd.o using wildcard
      Select section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) (putsVolts(unsigned char, unsigned char, short, unsigned char)) from lcd.o using wildcard
      Select section .text.putsVBat(unsigned char, unsigned char, unsigned char) (putsVBat(unsigned char, unsigned char, unsigned char)) from lcd.o using wildcard
      Select section .text.HW_Init (HW_Init) from BoardI6.o using wildcard
      Select section .text.mDelay (mDelay) from BoardI6.o using wildcard
      Select section .text.getADC_osmp (getADC_osmp) from BoardI6.o using wildcard
      Select section .text.backlight_on (backlight_on) from BoardI6.o using wildcard
      Select section .text.backlight_off (backlight_off) from BoardI6.o using wildcard
      Select section .text.rd_1 (rd_1) from BoardI6.o using wildcard
      Select section .text.rd_0 (rd_0) from BoardI6.o using wildcard
      Select section .text.cs_0 (cs_0) from BoardI6.o using wildcard
      Select section .text.rw_0 (rw_0) from BoardI6.o using wildcard
      Select section .text.rs_1 (rs_1) from BoardI6.o using wildcard
      Select section .text.rs_0 (rs_0) from BoardI6.o using wildcard
      Select section .text.rst_1 (rst_1) from BoardI6.o using wildcard
      Select section .text.rst_0 (rst_0) from BoardI6.o using wildcard
      Select section .text.PINB (PINB) from BoardI6.o using wildcard
      Select section .text.PIND (PIND) from BoardI6.o using wildcard
      Select section .text.PINE (PINE) from BoardI6.o using wildcard
      Select section .text.PING (PING) from BoardI6.o using wildcard
      Select section .text.LCD_DATA (LCD_DATA) from BoardI6.o using wildcard
      Select section .text.Buzzer_SetVal (Buzzer_SetVal) from BoardI6.o using wildcard
      Select section .text.Buzzer_ClrVal (Buzzer_ClrVal) from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_SendBlock (SPI_RADIO_SendBlock) from BoardI6.o using wildcard
      Select section .text.SPI_RADIO_ReceiveBlock (SPI_RADIO_ReceiveBlock) from BoardI6.o using wildcard
      Select section .text.a7105_csn_on (a7105_csn_on) from BoardI6.o using wildcard
      Select section .text.a7105_csn_off (a7105_csn_off) from BoardI6.o using wildcard
      Select section .text.RF0_SetVal (RF0_SetVal) from BoardI6.o using wildcard
      Select section .text.RF0_ClrVal (RF0_ClrVal) from BoardI6.o using wildcard
      Select section .text.RF1_SetVal (RF1_SetVal) from BoardI6.o using wildcard
      Select section .text.RF1_ClrVal (RF1_ClrVal) from BoardI6.o using wildcard
      Select section .text.TX_RX_PutVal (TX_RX_PutVal) from BoardI6.o using wildcard
      Select section .text.EnableGIO (EnableGIO) from BoardI6.o using wildcard
      Select section .text.DisableGIO (DisableGIO) from BoardI6.o using wildcard
      Select section .text.i2c_master (i2c_master) from BoardI6.o using wildcard
      Select section .text.GetPPMTimCapture (GetPPMTimCapture) from BoardI6.o using wildcard
      Select section .text.GetPPMOutState (GetPPMOutState) from BoardI6.o using wildcard
      Select section .text.SetPPMTimCompare (SetPPMTimCompare) from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompare (GetPPMTimCompare) from BoardI6.o using wildcard
      Select section .text.GetPPMTimCompareInterruptFlag (GetPPMTimCompareInterruptFlag) from BoardI6.o using wildcard
      Select section .text.ClearPPMTimCompareInterruptFlag (ClearPPMTimCompareInterruptFlag) from BoardI6.o using wildcard
      Select section .text.EnablePPMTim (EnablePPMTim) from BoardI6.o using wildcard
      Select section .text.EnablePPMOut (EnablePPMOut) from BoardI6.o using wildcard
      Select section .text.DisablePPMOut (DisablePPMOut) from BoardI6.o using wildcard
      Select section .text.EnablePRTTim (EnablePRTTim) from BoardI6.o using wildcard
      Select section .text.DisablePRTTim (DisablePRTTim) from BoardI6.o using wildcard
      Select section .text.SetPRTTimPeriod (SetPRTTimPeriod) from BoardI6.o using wildcard
      Select section .text.GetChipID (GetChipID) from BoardI6.o using wildcard
      Select section .text.sei (sei) from BoardI6.o using wildcard
      Select section .text.cli (cli) from BoardI6.o using wildcard
      Select section .text.PIT_IRQHandler (PIT_IRQHandler) from BoardI6.o using wildcard
      Select section .text.TPM1_IRQHandler (TPM1_IRQHandler) from BoardI6.o using wildcard
      Select section .text.SPI0_IRQHandler (SPI0_IRQHandler) from BoardI6.o using wildcard
      Select section .text.PORTC_PORTD_IRQHandler (PORTC_PORTD_IRQHandler) from BoardI6.o using wildcard
      Select section .text.TPM0_IRQHandler (TPM0_IRQHandler) from BoardI6.o using wildcard
      Select section .text.TPM2_IRQHandler (TPM2_IRQHandler) from BoardI6.o using wildcard
      Select section .text.setup_crsf_serial_port (setup_crsf_serial_port) from BoardI6.o using wildcard
      Select section .text.crsf_send_data (crsf_send_data) from BoardI6.o using wildcard
      Select section .text.modeFixValue(unsigned char) (modeFixValue(unsigned char)) from er9x.o using wildcard
      Select section .text.get_tmr10ms() (get_tmr10ms()) from er9x.o using wildcard
      Select section .text.CS_STATE(unsigned char) (CS_STATE(unsigned char)) from er9x.o using wildcard
      Select section .text.mixaddress(unsigned char) (mixaddress(unsigned char)) from er9x.o using wildcard
      Select section .text.throttleReversed() (throttleReversed()) from er9x.o using wildcard
      Select section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (putsChn(unsigned char, unsigned char, unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) from er9x.o using wildcard
      Select section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)) from er9x.o using wildcard
      Select section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.getValue(unsigned char) (getValue(unsigned char)) from er9x.o using wildcard
      Select section .text.getSwitch00(signed char) (getSwitch00(signed char)) from er9x.o using wildcard
      Select section .text.getSwitch(signed char, bool, unsigned char) (getSwitch(signed char, bool, unsigned char)) from er9x.o using wildcard
      Select section .text.calc100toRESX(signed char) (calc100toRESX(signed char)) from er9x.o using wildcard
      Select section .text.check_backlight_voice() (check_backlight_voice()) from er9x.o using wildcard
      Select section .text.stickMoveValue() (stickMoveValue()) from er9x.o using wildcard
      Select section .text.anaIn(unsigned char) (anaIn(unsigned char)) from er9x.o using wildcard
      Select section .text.almess(char const*, unsigned char) (almess(char const*, unsigned char)) from er9x.o using wildcard
      Select section .text.message(char const*) (message(char const*)) from er9x.o using wildcard
      Select section .text.alert(char const*) (alert(char const*)) from er9x.o using wildcard
      Select section .text.alertx(char const*, bool) (alertx(char const*, bool)) from er9x.o using wildcard
      Select section .text.clearKeyEvents() (clearKeyEvents()) from er9x.o using wildcard
      Select section .text.keyDown() (keyDown()) from er9x.o using wildcard
      Select section .text.checkThrottlePosition() (checkThrottlePosition()) from er9x.o using wildcard
      Select section .text.checkTHR() (checkTHR()) from er9x.o using wildcard
      Select section .text.putWarnSwitch(unsigned char, unsigned char) (putWarnSwitch(unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.getCurrentSwitchStates() (getCurrentSwitchStates()) from er9x.o using wildcard
      Select section .text.checkSwitches() (checkSwitches()) from er9x.o using wildcard
      Select section .text.getFlightPhase() (getFlightPhase()) from er9x.o using wildcard
      Select section .text.getRawTrimValue(unsigned char, unsigned char) (getRawTrimValue(unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.getTrimFlightPhase(unsigned char, unsigned char) (getTrimFlightPhase(unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.getTrimValue(unsigned char, unsigned char) (getTrimValue(unsigned char, unsigned char)) from er9x.o using wildcard
      Select section .text.setTrimValue(unsigned char, unsigned char, short) (setTrimValue(unsigned char, unsigned char, short)) from er9x.o using wildcard
      Select section .text.checkIncDec16(short, short, short, unsigned char) (checkIncDec16(short, short, short, unsigned char)) from er9x.o using wildcard
      Select section .text.checkIncDec(signed char, signed char, signed char, unsigned char) (checkIncDec(signed char, signed char, signed char, unsigned char)) from er9x.o using wildcard
      Select section .text.checkIncDec_i8(signed char, signed char, signed char) (checkIncDec_i8(signed char, signed char, signed char)) from er9x.o using wildcard
      Select section .text.checkIncDec_0(signed char, signed char) (checkIncDec_0(signed char, signed char)) from er9x.o using wildcard
      Select section .text.checkIncDec_u0(short, unsigned char) (checkIncDec_u0(short, unsigned char)) from er9x.o using wildcard
      Select section .text.popMenu(bool) (popMenu(bool)) from er9x.o using wildcard
      Select section .text.chainMenu(void (*)(unsigned char)) (chainMenu(void (*)(unsigned char))) from er9x.o using wildcard
      Select section .text.pushMenu(void (*)(unsigned char)) (pushMenu(void (*)(unsigned char))) from er9x.o using wildcard
      Select section .text.backlightKey() (backlightKey()) from er9x.o using wildcard
      Select section .text.doBackLightVoice(unsigned char) (doBackLightVoice(unsigned char)) from er9x.o using wildcard
      Select section .text.putVoiceQueueUpper(unsigned char) (putVoiceQueueUpper(unsigned char)) from er9x.o using wildcard
      Select section .text.putVoiceQueueLong(unsigned short) (putVoiceQueueLong(unsigned short)) from er9x.o using wildcard
      Select section .text.putVoiceQueue(unsigned char) (putVoiceQueue(unsigned char)) from er9x.o using wildcard
      Select section .text.setVolume(unsigned char) (setVolume(unsigned char)) from er9x.o using wildcard
      Select section .text.calcStickScroll(unsigned char) (calcStickScroll(unsigned char)) from er9x.o using wildcard
      Select section .text.getGvarSourceValue(unsigned char) (getGvarSourceValue(unsigned char)) from er9x.o using wildcard
      Select section .text.ISR_TIMER2_OVF_vect (ISR_TIMER2_OVF_vect) from er9x.o using wildcard
      Select section .text.audioQueue::driver() (audioQueue::driver()) from er9x.o using wildcard
      Select section .text.ISR_TIMER0_COMP_vect (ISR_TIMER0_COMP_vect) from er9x.o using wildcard
      Select section .text.ISR_TIMER3_CAPT_vect (ISR_TIMER3_CAPT_vect) from er9x.o using wildcard
      Select section .text.mainER() (mainER()) from er9x.o using wildcard
      Select section .text.mainSequence() (mainSequence()) from er9x.o using wildcard
      Select section .text.doVoiceAlarmSource(t_voiceAlarm*) (doVoiceAlarmSource(t_voiceAlarm*)) from er9x.o using wildcard
      Select section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (procOneVoiceAlarm(t_voiceAlarm*, unsigned char)) from er9x.o using wildcard
      Select section .text.processVoiceAlarms() (processVoiceAlarms()) from er9x.o using wildcard
      Select section .text.calc1000toRESX(short) (calc1000toRESX(short)) from er9x.o using wildcard
      Select section .text.REG100_100(signed char) (REG100_100(signed char)) from er9x.o using wildcard
      Select section .text.REG(signed char, signed char, signed char) (REG(signed char, signed char, signed char)) from er9x.o using wildcard
      Select section .text.IS_EXPO_THROTTLE(unsigned char) (IS_EXPO_THROTTLE(unsigned char)) from er9x.o using wildcard
      Select section .text._GLOBAL__sub_I_er9x.cpp (_GLOBAL__sub_I_er9x.cpp) from er9x.o using wildcard
      Select section .text.A7105_AntSwitch() (A7105_AntSwitch()) from A7105_SPI.o using wildcard
      Select section .text.A7105_SetTxRxMode(unsigned char) (A7105_SetTxRxMode(unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_Strobe(unsigned char) (A7105_Strobe(unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteReg(unsigned char, unsigned char) (A7105_WriteReg(unsigned char, unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteData(unsigned char, unsigned char) (A7105_WriteData(unsigned char, unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadData(unsigned char) (A7105_ReadData(unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_ReadReg(unsigned char) (A7105_ReadReg(unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.A7105_Reset() (A7105_Reset()) from A7105_SPI.o using wildcard
      Select section .text.A7105_WriteID(unsigned int) (A7105_WriteID(unsigned int)) from A7105_SPI.o using wildcard
      Select section .text.A7105_SetPower() (A7105_SetPower()) from A7105_SPI.o using wildcard
      Select section .text.A7105_AdjustLOBaseFreq() (A7105_AdjustLOBaseFreq()) from A7105_SPI.o using wildcard
      Select section .text.A7105_Sleep() (A7105_Sleep()) from A7105_SPI.o using wildcard
      Select section .text.A7105_Init() (A7105_Init()) from A7105_SPI.o using wildcard
      Select section .text.convert_failsafe_ppm(unsigned char) (convert_failsafe_ppm(unsigned char)) from A7105_SPI.o using wildcard
      Select section .text.AFHDS2A_build_packet(unsigned char) (AFHDS2A_build_packet(unsigned char)) from AFHDS2A_a7105.o using wildcard
      Select section .text.ActionAFHDS2A (ActionAFHDS2A) from AFHDS2A_a7105.o using wildcard
      Select section .text.initAFHDS2A (initAFHDS2A) from AFHDS2A_a7105.o using wildcard
      Select section .text.processFlySkySensor(unsigned char const*, unsigned char) (processFlySkySensor(unsigned char const*, unsigned char)) from AFHDS2A_a7105.o using wildcard
      Select section .text.audioQueue::audioQueue() (audioQueue::audioQueue()) from audio.o using wildcard
      Select section .text.audioQueue::busy() (audioQueue::busy()) from audio.o using wildcard
      Select section .text.audioQueue::heartbeat() (audioQueue::heartbeat()) from audio.o using wildcard
      Select section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)) from audio.o using wildcard
      Select section .text.audioQueue::getToneLength(unsigned char) (audioQueue::getToneLength(unsigned char)) from audio.o using wildcard
      Select section .text.audioQueue::event(unsigned char, unsigned char) (audioQueue::event(unsigned char, unsigned char)) from audio.o using wildcard
      Select section .text.audioDefevent(unsigned char) (audioDefevent(unsigned char)) from audio.o using wildcard
      Select section .text.audioEvent(unsigned char, unsigned short) (audioEvent(unsigned char, unsigned short)) from audio.o using wildcard
      Select section .text.audioVoiceDefevent(unsigned char, unsigned char) (audioVoiceDefevent(unsigned char, unsigned char)) from audio.o using wildcard
      Select section .text.voice_numeric(short, unsigned char, unsigned char) (voice_numeric(short, unsigned char, unsigned char)) from audio.o using wildcard
      Select section .text.ee_waite() (ee_waite()) from drivers.o using wildcard
      Select section .text.eeprom_read_block(void*, void const*, unsigned int) (eeprom_read_block(void*, void const*, unsigned int)) from drivers.o using wildcard
      Select section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (eeprom_write_page_cmp(char const*, unsigned short, unsigned int)) from drivers.o using wildcard
      Select section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) (eeWriteBlockCmp(void const*, unsigned short, unsigned int)) from drivers.o using wildcard
      Select section .text.Key::input(bool, EnumKeys) (Key::input(bool, EnumKeys)) from drivers.o using wildcard
      Select section .text.menuPressed() (menuPressed()) from drivers.o using wildcard
      Select section .text.switchPosition(unsigned char) (switchPosition(unsigned char)) from drivers.o using wildcard
      Select section .text.keyState(EnumKeys) (keyState(EnumKeys)) from drivers.o using wildcard
      Select section .text.pauseEvents(unsigned char) (pauseEvents(unsigned char)) from drivers.o using wildcard
      Select section .text.killEvents(unsigned char) (killEvents(unsigned char)) from drivers.o using wildcard
      Select section .text.per10ms() (per10ms()) from drivers.o using wildcard
      Select section .text.startSerialVoice() (startSerialVoice()) from drivers.o using wildcard
      Select section .text.stopSerialVoice() (stopSerialVoice()) from drivers.o using wildcard
      Select section .text.getSvFifo() (getSvFifo()) from drivers.o using wildcard
      Select section .text.EeFsGetFree() (EeFsGetFree()) from file.o using wildcard
      Select section .text.EeFsGetLink(unsigned char) (EeFsGetLink(unsigned char)) from file.o using wildcard
      Select section .text.EeFsck() (EeFsck()) from file.o using wildcard
      Select section .text.EeFsSetLink(unsigned char, unsigned char) (EeFsSetLink(unsigned char, unsigned char)) from file.o using wildcard
      Select section .text.EeFsFlush() (EeFsFlush()) from file.o using wildcard
      Select section .text.EeFsFlushFreelist() (EeFsFlushFreelist()) from file.o using wildcard
      Select section .text.EeFsFormat() (EeFsFormat()) from file.o using wildcard
      Select section .text.EeFsOpen() (EeFsOpen()) from file.o using wildcard
      Select section .text.EFile::exists(unsigned char) (EFile::exists(unsigned char)) from file.o using wildcard
      Select section .text.EFile::swap(unsigned char, unsigned char) (EFile::swap(unsigned char, unsigned char)) from file.o using wildcard
      Select section .text.EFile::rm(unsigned char) (EFile::rm(unsigned char)) from file.o using wildcard
      Select section .text.EeFsFree(unsigned char) (EeFsFree(unsigned char)) from file.o using wildcard
      Select section .text.EFile::size() (EFile::size()) from file.o using wildcard
      Select section .text.EFile::openRd(unsigned char) (EFile::openRd(unsigned char)) from file.o using wildcard
      Select section .text.EFile::read(unsigned char*, unsigned short) (EFile::read(unsigned char*, unsigned short)) from file.o using wildcard
      Select section .text.EFile::readRlc(unsigned char*, unsigned short) (EFile::readRlc(unsigned char*, unsigned short)) from file.o using wildcard
      Select section .text.EFile::write(unsigned char*, unsigned char) (EFile::write(unsigned char*, unsigned char)) from file.o using wildcard
      Select section .text.EeFsAlloc() (EeFsAlloc()) from file.o using wildcard
      Select section .text.EFile::create(unsigned char, unsigned char, unsigned short) (EFile::create(unsigned char, unsigned char, unsigned short)) from file.o using wildcard
      Select section .text.EFile::closeTrunc() (EFile::closeTrunc()) from file.o using wildcard
      Select section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)) from file.o using wildcard
      Select section .text.EeFsRead(unsigned char, unsigned char) (EeFsRead(unsigned char, unsigned char)) from file.o using wildcard
      Select section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) (calc_scaler(unsigned char, unsigned char*, unsigned char*)) from menus.o using wildcard
      Select section .text.telemItemValid(unsigned char) (telemItemValid(unsigned char)) from menus.o using wildcard
      Select section .text.singleBar(unsigned char, unsigned char, short) (singleBar(unsigned char, unsigned char, short)) from menus.o using wildcard
      Select section .text.voiceMinutes(short) (voiceMinutes(short)) from menus.o using wildcard
      Select section .text.voice_telem_item(unsigned char) (voice_telem_item(unsigned char)) from menus.o using wildcard
      Select section .text.get_telemetry_value(unsigned char) (get_telemetry_value(unsigned char)) from menus.o using wildcard
      Select section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)) from menus.o using wildcard
      Select section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)) from menus.o using wildcard
      Select section .text.get_dr_state(unsigned char) (get_dr_state(unsigned char)) from menus.o using wildcard
      Select section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.char2idx(char) (char2idx(char)) from menus.o using wildcard
      Select section .text.idx2char(unsigned char) (idx2char(unsigned char)) from menus.o using wildcard
      Select section .text.TITLEP(char const*) (TITLEP(char const*)) from menus.o using wildcard
      Select section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)) from menus.o using wildcard
      Select section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (checkIndexed(unsigned char, char const*, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (hyphinvMenuItem(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)) from menus.o using wildcard
      Select section .text.MState2::check_columns(unsigned char, unsigned char) (MState2::check_columns(unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.telltale(unsigned char, signed char, signed char) (telltale(unsigned char, signed char, signed char)) from menus.o using wildcard
      Select section .text.doMainScreenGrphics() (doMainScreenGrphics()) from menus.o using wildcard
      Select section .text.drawFunction(unsigned char, unsigned char) (drawFunction(unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.intpol(short, unsigned char) (intpol(short, unsigned char)) from menus.o using wildcard
      Select section .text.calcExpo(unsigned char, short) (calcExpo(unsigned char, short)) from menus.o using wildcard
      Select section .text.drawCurve(unsigned char) (drawCurve(unsigned char)) from menus.o using wildcard
      Select section .text.curveAddress(unsigned char) (curveAddress(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcCurveOne(unsigned char) (menuProcCurveOne(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcCurve(unsigned char) (menuProcCurve(unsigned char)) from menus.o using wildcard
      Select section .text.evalOffset(signed char) (evalOffset(signed char)) from menus.o using wildcard
      Select section .text.setStickCenter() (setStickCenter()) from menus.o using wildcard
      Select section .text.perOut(short*, unsigned char) (perOut(short*, unsigned char)) from menus.o using wildcard
      Select section .text.displayNext() (displayNext()) from menus.o using wildcard
      Select section .text.menuProcTelemetry(unsigned char) (menuProcTelemetry(unsigned char)) from menus.o using wildcard
      Select section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) (put_curve(unsigned char, unsigned char, signed char, unsigned char)) from menus.o using wildcard
      Select section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) (scalerDecimal(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuScaleOne(unsigned char) (menuScaleOne(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcGlobals(unsigned char) (menuProcGlobals(unsigned char)) from menus.o using wildcard
      Select section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)) from menus.o using wildcard
      Select section .text.menuProcMixOne(unsigned char) (menuProcMixOne(unsigned char)) from menus.o using wildcard
      Select section .text.onoffItem(unsigned char, unsigned char, unsigned char) (onoffItem(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.offonItem(unsigned char, unsigned char, unsigned char) (offonItem(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)) from menus.o using wildcard
      Select section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) (editSlowDelay(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuMixersLimit(unsigned char) (menuMixersLimit(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcMix(unsigned char) (menuProcMix(unsigned char)) from menus.o using wildcard
      Select section .text.reachMixerCountLimit() (reachMixerCountLimit()) from menus.o using wildcard
      Select section .text.yesNoMenuExit(unsigned char, char const*) (yesNoMenuExit(unsigned char, char const*)) from menus.o using wildcard
      Select section .text.menuDeleteMix(unsigned char) (menuDeleteMix(unsigned char)) from menus.o using wildcard
      Select section .text.doPopup(char const*, unsigned char, unsigned char) (doPopup(char const*, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.insertMix(unsigned char, unsigned char) (insertMix(unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.expou(unsigned short, unsigned short) (expou(unsigned short, unsigned short)) from menus.o using wildcard
      Select section .text.expo(short, short) (expo(short, short)) from menus.o using wildcard
      Select section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuDeleteDupModel(unsigned char) (menuDeleteDupModel(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcModelSelect(unsigned char) (menuProcModelSelect(unsigned char)) from menus.o using wildcard
      Select section .text.menuRangeBind(unsigned char) (menuRangeBind(unsigned char)) from menus.o using wildcard
      Select section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuPhaseOne(unsigned char) (menuPhaseOne(unsigned char)) from menus.o using wildcard
      Select section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) (dispFlightModename(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.serialVoiceBlockSend(unsigned char*, unsigned char) (serialVoiceBlockSend(unsigned char*, unsigned char)) from menus.o using wildcard
      Select section .text.serialVoiceWaitByte(unsigned char) (serialVoiceWaitByte(unsigned char)) from menus.o using wildcard
      Select section .text.progressBar() (progressBar()) from menus.o using wildcard
      Select section .text.brSubHead(char const*) (brSubHead(char const*)) from menus.o using wildcard
      Select section .text.menuBackupRestore(unsigned char) (menuBackupRestore(unsigned char)) from menus.o using wildcard
      Select section .text.menuModelPhases(unsigned char) (menuModelPhases(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcModelIndex(unsigned char) (menuProcModelIndex(unsigned char)) from menus.o using wildcard
      Select section .text.putc_0_1(unsigned char, unsigned char, unsigned char) (putc_0_1(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.timer() (timer()) from menus.o using wildcard
      Select section .text.resetTimer1() (resetTimer1()) from menus.o using wildcard
      Select section .text.resetTimer2() (resetTimer2()) from menus.o using wildcard
      Select section .text.trace() (trace()) from menus.o using wildcard
      Select section .text.putsTimeNoAtt(unsigned char, unsigned char, short) (putsTimeNoAtt(unsigned char, unsigned char, short)) from menus.o using wildcard
      Select section .text.menuProcStatistic(unsigned char) (menuProcStatistic(unsigned char)) from menus.o using wildcard
      Select section .text.resetTimern(unsigned char) (resetTimern(unsigned char)) from menus.o using wildcard
      Select section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) (displayOneSwitch(unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.switchDisplay(unsigned char, unsigned char) (switchDisplay(unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.dispInVExVDbl(unsigned char) (dispInVExVDbl(unsigned char)) from menus.o using wildcard
      Select section .text.dispSignalQality(unsigned char) (dispSignalQality(unsigned char)) from menus.o using wildcard
      Select section .text.menuProc0(unsigned char) (menuProc0(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcIndex(unsigned char) (menuProcIndex(unsigned char)) from menus.o using wildcard
      Select section .text.perOutPhase(short*, unsigned char) (perOutPhase(short*, unsigned char)) from menus.o using wildcard
      Select section .text.scaleAnalog(short, unsigned char) (scaleAnalog(short, unsigned char)) from menus.o using wildcard
      Select section .text.indexProcess(unsigned char, MState2*, unsigned char) (indexProcess(unsigned char, MState2*, unsigned char)) from menus.o using wildcard
      Select section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)) from menus.o using wildcard
      Select section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuProcVoiceOne(unsigned char) (menuProcVoiceOne(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcVoiceAlarm(unsigned char) (menuProcVoiceAlarm(unsigned char)) from menus.o using wildcard
      Select section .text.rangeBindAction(unsigned char, unsigned char) (rangeBindAction(unsigned char, unsigned char)) from menus.o using wildcard
      Select section .text.menuRXSetup(unsigned char) (menuRXSetup(unsigned char)) from menus.o using wildcard
      Select section .text.menuSetFailsafe(unsigned char) (menuSetFailsafe(unsigned char)) from menus.o using wildcard
      Select section .text.menuProcProtocol(unsigned char) (menuProcProtocol(unsigned char)) from menus.o using wildcard
      Select section .text.evalChkSum() (evalChkSum()) from pers.o using wildcard
      Select section .text.setNameP(char*, char const*) (setNameP(char*, char const*)) from pers.o using wildcard
      Select section .text.eeGeneralDefault() (eeGeneralDefault()) from pers.o using wildcard
      Select section .text.modelSave(unsigned char) (modelSave(unsigned char)) from pers.o using wildcard
      Select section .text.modelDefaultWrite(unsigned char) (modelDefaultWrite(unsigned char)) from pers.o using wildcard
      Select section .text.eeLoadModelName(unsigned char, char*, unsigned char) (eeLoadModelName(unsigned char, char*, unsigned char)) from pers.o using wildcard
      Select section .text.eeModelExists(unsigned char) (eeModelExists(unsigned char)) from pers.o using wildcard
      Select section .text.eeLoadModelForBackup(unsigned char) (eeLoadModelForBackup(unsigned char)) from pers.o using wildcard
      Select section .text.eeLoadModel(unsigned char) (eeLoadModel(unsigned char)) from pers.o using wildcard
      Select section .text.validateName(char*, unsigned char) (validateName(char*, unsigned char)) from pers.o using wildcard
      Select section .text.eeDirty(unsigned char) (eeDirty(unsigned char)) from pers.o using wildcard
      Select section .text.eeWaitComplete() (eeWaitComplete()) from pers.o using wildcard
      Select section .text.eeDuplicateModel(unsigned char) (eeDuplicateModel(unsigned char)) from pers.o using wildcard
      Select section .text.eeReadGeneral() (eeReadGeneral()) from pers.o using wildcard
      Select section .text.eeWriteGeneral() (eeWriteGeneral()) from pers.o using wildcard
      Select section .text.eeCheck(bool) (eeCheck(bool)) from pers.o using wildcard
      Select section .text.SetStartPulsePol() (SetStartPulsePol()) from pulses.o using wildcard
      Select section .text.ISR_TIMER1_COMPA_vect (ISR_TIMER1_COMPA_vect) from pulses.o using wildcard
      Select section .text.setupPulses() (setupPulses()) from pulses.o using wildcard
      Select section .text.startPulses() (startPulses()) from pulses.o using wildcard
      Select section .text.setupPulsesPPM(unsigned char) (setupPulsesPPM(unsigned char)) from pulses.o using wildcard
      Select section .text.clearMixes() (clearMixes()) from templates.o using wildcard
      Select section .text.setMix(unsigned char, unsigned char) (setMix(unsigned char, unsigned char)) from templates.o using wildcard
      Select section .text.applyTemplate() (applyTemplate()) from templates.o using wildcard
      Select section .text.main (main) from main.o using wildcard
      Select section .text.Vario_play(int, bool) (Vario_play(int, bool)) from Vario.o using wildcard
      Select section .text.Vario_driver() (Vario_driver()) from Vario.o using wildcard
      Select section .text.ActionAFHDS (ActionAFHDS) from AFHDS.o using wildcard
      Select section .text.initAFHDS (initAFHDS) from AFHDS.o using wildcard
      Select section .text.SX127xDriver::SX127xDriver() (SX127xDriver::SX127xDriver()) from SX127x.o using wildcard
      Select section .text._GLOBAL__sub_I_SX127x.cpp (_GLOBAL__sub_I_SX127x.cpp) from SX127x.o using wildcard
      Select section .text.SX127xHal::SX127xHal() (SX127xHal::SX127xHal()) from SX127xHal.o using wildcard
      Select section .text._GLOBAL__sub_I_ELRS.cpp (_GLOBAL__sub_I_ELRS.cpp) from ELRS.o using wildcard
      Select section .text.StubbornReceiver::StubbornReceiver(unsigned char) (StubbornReceiver::StubbornReceiver(unsigned char)) from stubborn_receiver.o using wildcard
      Select section .text.StubbornSender::StubbornSender(unsigned char) (StubbornSender::StubbornSender(unsigned char)) from stubborn_sender.o using wildcard
      Select section .text.StubbornSender::ResetState() (StubbornSender::ResetState()) from stubborn_sender.o using wildcard
      Select section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) (GENERIC_CRC14::GENERIC_CRC14(unsigned short)) from crc.o using wildcard
      Select section .text.createCrossfireChannelsFrame(unsigned char*, short*) (createCrossfireChannelsFrame(unsigned char*, short*)) from crossfire_output.o using wildcard
      Select section .text.setupPulsesCrossfire() (setupPulsesCrossfire()) from crossfire_output.o using wildcard
      Select section .text.ModuleSyncStatus::update(unsigned short, short) (ModuleSyncStatus::update(unsigned short, short)) from crossfire.o using wildcard
      Select section .text.checkCrossfireTelemetryFrameCRC() (checkCrossfireTelemetryFrameCRC()) from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryFrame() (processCrossfireTelemetryFrame()) from crossfire.o using wildcard
      Select section .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) (bool getCrossfireTelemetryValue<2>(unsigned char, int&)) from crossfire.o using wildcard
      Select section .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) (bool getCrossfireTelemetryValue<4>(unsigned char, int&)) from crossfire.o using wildcard
      Select section .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) (bool getCrossfireTelemetryValue<1>(unsigned char, int&)) from crossfire.o using wildcard
      Select section .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) (bool getCrossfireTelemetryValue<3>(unsigned char, int&)) from crossfire.o using wildcard
      Select section .text.processCrossfireTelemetryData(unsigned char) (processCrossfireTelemetryData(unsigned char)) from crossfire.o using wildcard
      Select section .text.crsf_current_period() (crsf_current_period()) from crossfire.o using wildcard
      Select section .text.crsf_init() (crsf_init()) from crossfire.o using wildcard
      Select section .text.crsf_action() (crsf_action()) from crossfire.o using wildcard
      Select section .text.crc8(unsigned char const*, unsigned int) (crc8(unsigned char const*, unsigned int)) from crc_crsf.o using wildcard
      Select section .text.libc.__int64_lsl (__ashldi3) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__int64_lsr (__lshrdi3) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__int32_div (__divsi3) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__uint32_div (__udivsi3) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_uidivmod (__aeabi_uidivmod) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_idivmod (__aeabi_idivmod) from libc_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.div (div) from libc2.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcmp (memcmp) from libc2.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memmove (memmove) from libc2.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.memcpy (memcpy) from libc2_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .text.libc.__aeabi_memset (__aeabi_memclr8) from libc2_asm.o (libc_v6m_t_le_eabi_small.a) using wildcard
      Select section .rodata.Lcdinit (Lcdinit) from lcd.o using wildcard
      Select section .rodata.font (font) from lcd.o using wildcard
      Select section .rodata.font_dblsize (font_dblsize) from lcd.o using wildcard
      Select section .rodata._bitmask (_bitmask) from lcd.o using wildcard
      Select section .rodata.ChannelToPin (ChannelToPin) from BoardI6.o using wildcard
      Select section .rodata.AFHDS2A_A7105_regs (AFHDS2A_A7105_regs) from BoardI6.o using wildcard
      Select section .rodata.AFHDS_A7105_regs (AFHDS_A7105_regs) from BoardI6.o using wildcard
      Select section .rodata.bchout_ar (bchout_ar) from er9x.o using wildcard
      Select section .rodata.Str_Switches (Str_Switches) from er9x.o using wildcard
      Select section .rodata.Str_OFF (Str_OFF) from er9x.o using wildcard
      Select section .rodata.Str_ON (Str_ON) from er9x.o using wildcard
      Select section .rodata.modi12x3 (modi12x3) from er9x.o using wildcard
      Select section .rodata.stickScramble (stickScramble) from er9x.o using wildcard
      Select section .rodata.csTypeTable (csTypeTable) from er9x.o using wildcard
      Select section .rodata.Str_Hyphens (Str_Hyphens) from er9x.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) from er9x.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) from er9x.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) from er9x.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) from er9x.o using wildcard
      Select section .rodata.Str_Alert (Str_Alert) from er9x.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) from er9x.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) from er9x.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) from er9x.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) from er9x.o using wildcard
      Select section .rodata.rate (rate) from er9x.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) from er9x.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) from er9x.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) from er9x.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) from er9x.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) from er9x.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) from er9x.o using wildcard
      Select section .rodata.AFHDS2A_tel (AFHDS2A_tel) from AFHDS2A_a7105.o using wildcard
      Select section .rodata.per10ms()::crossTrim (per10ms()::crossTrim) from drivers.o using wildcard
      Select section .rodata.Str_Chans_Gv (Str_Chans_Gv) from menus.o using wildcard
      Select section .rodata.Curve_Str (Curve_Str) from menus.o using wildcard
      Select section .rodata.Str_telemItems (Str_telemItems) from menus.o using wildcard
      Select section .rodata.TelemIndex (TelemIndex) from menus.o using wildcard
      Select section .rodata.UnitsVoice (UnitsVoice) from menus.o using wildcard
      Select section .rodata.UnitsText (UnitsText) from menus.o using wildcard
      Select section .rodata.Str_GV (Str_GV) from menus.o using wildcard
      Select section .rodata.Str_Name (Str_Name) from menus.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) from menus.o using wildcard
      Select section .rodata.Str_Curve (Str_Curve) from menus.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) from menus.o using wildcard
      Select section .rodata.Str_Curves (Str_Curves) from menus.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) from menus.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) from menus.o using wildcard
      Select section .rodata.Str_Telemetry (Str_Telemetry) from menus.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) from menus.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) from menus.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) from menus.o using wildcard
      Select section .rodata..L.str.7 ([.rodata..L.str.7]) from menus.o using wildcard
      Select section .rodata.Str_SC (Str_SC) from menus.o using wildcard
      Select section .rodata..L.str.8 ([.rodata..L.str.8]) from menus.o using wildcard
      Select section .rodata.UnitsString (UnitsString) from menus.o using wildcard
      Select section .rodata..L.str.9 ([.rodata..L.str.9]) from menus.o using wildcard
      Select section .rodata.Str_Globals (Str_Globals) from menus.o using wildcard
      Select section .rodata.Str_Gv_Source (Str_Gv_Source) from menus.o using wildcard
      Select section .rodata..L.str.10 ([.rodata..L.str.10]) from menus.o using wildcard
      Select section .rodata.SW_3_IDX (SW_3_IDX) from menus.o using wildcard
      Select section .rodata..L.str.11 ([.rodata..L.str.11]) from menus.o using wildcard
      Select section .rodata..L.str.12 ([.rodata..L.str.12]) from menus.o using wildcard
      Select section .rodata..L.str.13 ([.rodata..L.str.13]) from menus.o using wildcard
      Select section .rodata..L.str.14 ([.rodata..L.str.14]) from menus.o using wildcard
      Select section .rodata..L.str.15 ([.rodata..L.str.15]) from menus.o using wildcard
      Select section .rodata..L.str.16 ([.rodata..L.str.16]) from menus.o using wildcard
      Select section .rodata..L.str.17 ([.rodata..L.str.17]) from menus.o using wildcard
      Select section .rodata..L.str.18 ([.rodata..L.str.18]) from menus.o using wildcard
      Select section .rodata..L.str.19 ([.rodata..L.str.19]) from menus.o using wildcard
      Select section .rodata..L.str.20 ([.rodata..L.str.20]) from menus.o using wildcard
      Select section .rodata..L.str.21 ([.rodata..L.str.21]) from menus.o using wildcard
      Select section .rodata.Str_Mixer (Str_Mixer) from menus.o using wildcard
      Select section .rodata..L.str.22 ([.rodata..L.str.22]) from menus.o using wildcard
      Select section .rodata.s_charTab (s_charTab) from menus.o using wildcard
      Select section .rodata..L.str.23 ([.rodata..L.str.23]) from menus.o using wildcard
      Select section .rodata..L.str.24 ([.rodata..L.str.24]) from menus.o using wildcard
      Select section .rodata..L.str.25 ([.rodata..L.str.25]) from menus.o using wildcard
      Select section .rodata..L.str.26 ([.rodata..L.str.26]) from menus.o using wildcard
      Select section .rodata..L.str.27 ([.rodata..L.str.27]) from menus.o using wildcard
      Select section .rodata.Str_1_RETA (Str_1_RETA) from menus.o using wildcard
      Select section .rodata..L.str.28 ([.rodata..L.str.28]) from menus.o using wildcard
      Select section .rodata..L.str.29 ([.rodata..L.str.29]) from menus.o using wildcard
      Select section .rodata..L.str.30 ([.rodata..L.str.30]) from menus.o using wildcard
      Select section .rodata..L.str.31 ([.rodata..L.str.31]) from menus.o using wildcard
      Select section .rodata..L.str.32 ([.rodata..L.str.32]) from menus.o using wildcard
      Select section .rodata..L.str.33 ([.rodata..L.str.33]) from menus.o using wildcard
      Select section .rodata..L.str.34 ([.rodata..L.str.34]) from menus.o using wildcard
      Select section .rodata..L.str.35 ([.rodata..L.str.35]) from menus.o using wildcard
      Select section .rodata..L.str.36 ([.rodata..L.str.36]) from menus.o using wildcard
      Select section .rodata..L.str.37 ([.rodata..L.str.37]) from menus.o using wildcard
      Select section .rodata..L.str.38 ([.rodata..L.str.38]) from menus.o using wildcard
      Select section .rodata.Str_Modes (Str_Modes) from menus.o using wildcard
      Select section .rodata..L.str.39 ([.rodata..L.str.39]) from menus.o using wildcard
      Select section .rodata..L.str.40 ([.rodata..L.str.40]) from menus.o using wildcard
      Select section .rodata..L.str.41 ([.rodata..L.str.41]) from menus.o using wildcard
      Select section .rodata.ModelPopList (ModelPopList) from menus.o using wildcard
      Select section .rodata..L.str.42 ([.rodata..L.str.42]) from menus.o using wildcard
      Select section .rodata..L.str.43 ([.rodata..L.str.43]) from menus.o using wildcard
      Select section .rodata..L.str.44 ([.rodata..L.str.44]) from menus.o using wildcard
      Select section .rodata..L.str.45 ([.rodata..L.str.45]) from menus.o using wildcard
      Select section .rodata..L.str.46 ([.rodata..L.str.46]) from menus.o using wildcard
      Select section .rodata..L.str.47 ([.rodata..L.str.47]) from menus.o using wildcard
      Select section .rodata..L.str.48 ([.rodata..L.str.48]) from menus.o using wildcard
      Select section .rodata..L.str.49 ([.rodata..L.str.49]) from menus.o using wildcard
      Select section .rodata..L.str.50 ([.rodata..L.str.50]) from menus.o using wildcard
      Select section .rodata.menuProc0(unsigned char)::xt (menuProc0(unsigned char)::xt) from menus.o using wildcard
      Select section .rodata..L.str.51 ([.rodata..L.str.51]) from menus.o using wildcard
      Select section .rodata..L.str.52 ([.rodata..L.str.52]) from menus.o using wildcard
      Select section .rodata..L.str.53 ([.rodata..L.str.53]) from menus.o using wildcard
      Select section .rodata..L.str.54 ([.rodata..L.str.54]) from menus.o using wildcard
      Select section .rodata..L.str.55 ([.rodata..L.str.55]) from menus.o using wildcard
      Select section .rodata..L.str.56 ([.rodata..L.str.56]) from menus.o using wildcard
      Select section .rodata..L.str.57 ([.rodata..L.str.57]) from menus.o using wildcard
      Select section .rodata..L.str.58 ([.rodata..L.str.58]) from menus.o using wildcard
      Select section .rodata..L.str.59 ([.rodata..L.str.59]) from menus.o using wildcard
      Select section .rodata..L.str.60 ([.rodata..L.str.60]) from menus.o using wildcard
      Select section .rodata.Str_Main_Popup (Str_Main_Popup) from menus.o using wildcard
      Select section .rodata.menuProcIndex(unsigned char)::n_Strings (menuProcIndex(unsigned char)::n_Strings) from menus.o using wildcard
      Select section .rodata.Str_Display (Str_Display) from menus.o using wildcard
      Select section .rodata.Str_AudioHaptic (Str_AudioHaptic) from menus.o using wildcard
      Select section .rodata.Str_Alarms (Str_Alarms) from menus.o using wildcard
      Select section .rodata.Str_General (Str_General) from menus.o using wildcard
      Select section .rodata.Str_Controls (Str_Controls) from menus.o using wildcard
      Select section .rodata.Str_Calibration (Str_Calibration) from menus.o using wildcard
      Select section .rodata.Str_Trainer (Str_Trainer) from menus.o using wildcard
      Select section .rodata.Str_Version (Str_Version) from menus.o using wildcard
      Select section .rodata.Str_DiagSwtch (Str_DiagSwtch) from menus.o using wildcard
      Select section .rodata.Str_DiagAna (Str_DiagAna) from menus.o using wildcard
      Select section .rodata.Str_Hardware (Str_Hardware) from menus.o using wildcard
      Select section .rodata..L.str.61 ([.rodata..L.str.61]) from menus.o using wildcard
      Select section .rodata..L.str.62 ([.rodata..L.str.62]) from menus.o using wildcard
      Select section .rodata..L.str.63 ([.rodata..L.str.63]) from menus.o using wildcard
      Select section .rodata..L.str.64 ([.rodata..L.str.64]) from menus.o using wildcard
      Select section .rodata..L.str.65 ([.rodata..L.str.65]) from menus.o using wildcard
      Select section .rodata..L.str.66 ([.rodata..L.str.66]) from menus.o using wildcard
      Select section .rodata.Str_minute_Beep (Str_minute_Beep) from menus.o using wildcard
      Select section .rodata..L.str.67 ([.rodata..L.str.67]) from menus.o using wildcard
      Select section .rodata.sticks (sticks) from menus.o using wildcard
      Select section .rodata..L.str.68 ([.rodata..L.str.68]) from menus.o using wildcard
      Select section .rodata..L.str.69 ([.rodata..L.str.69]) from menus.o using wildcard
      Select section .rodata.Str_Beep_Countdown (Str_Beep_Countdown) from menus.o using wildcard
      Select section .rodata..L.str.70 ([.rodata..L.str.70]) from menus.o using wildcard
      Select section .rodata..L.str.71 ([.rodata..L.str.71]) from menus.o using wildcard
      Select section .rodata..L.str.72 ([.rodata..L.str.72]) from menus.o using wildcard
      Select section .rodata..L.str.73 ([.rodata..L.str.73]) from menus.o using wildcard
      Select section .rodata..L.str.74 ([.rodata..L.str.74]) from menus.o using wildcard
      Select section .rodata..L.str.75 ([.rodata..L.str.75]) from menus.o using wildcard
      Select section .rodata..L.str.76 ([.rodata..L.str.76]) from menus.o using wildcard
      Select section .rodata..L.str.77 ([.rodata..L.str.77]) from menus.o using wildcard
      Select section .rodata..L.str.78 ([.rodata..L.str.78]) from menus.o using wildcard
      Select section .rodata..L.str.79 ([.rodata..L.str.79]) from menus.o using wildcard
      Select section .rodata..L.str.80 ([.rodata..L.str.80]) from menus.o using wildcard
      Select section .rodata..L.str.81 ([.rodata..L.str.81]) from menus.o using wildcard
      Select section .rodata..L.str.82 ([.rodata..L.str.82]) from menus.o using wildcard
      Select section .rodata..L.str.83 ([.rodata..L.str.83]) from menus.o using wildcard
      Select section .rodata..L.str.84 ([.rodata..L.str.84]) from menus.o using wildcard
      Select section .rodata.menuWhenDone (menuWhenDone) from menus.o using wildcard
      Select section .rodata..L.str.85 ([.rodata..L.str.85]) from menus.o using wildcard
      Select section .rodata.Str_On_Off_Both (Str_On_Off_Both) from menus.o using wildcard
      Select section .rodata..L.str.86 ([.rodata..L.str.86]) from menus.o using wildcard
      Select section .rodata..L.str.87 ([.rodata..L.str.87]) from menus.o using wildcard
      Select section .rodata..L.str.88 ([.rodata..L.str.88]) from menus.o using wildcard
      Select section .rodata..L.str.89 ([.rodata..L.str.89]) from menus.o using wildcard
      Select section .rodata.Str_Cswitch (Str_Cswitch) from menus.o using wildcard
      Select section .rodata..L.str.90 ([.rodata..L.str.90]) from menus.o using wildcard
      Select section .rodata..L.str.91 ([.rodata..L.str.91]) from menus.o using wildcard
      Select section .rodata..L.str.92 ([.rodata..L.str.92]) from menus.o using wildcard
      Select section .rodata..L.str.93 ([.rodata..L.str.93]) from menus.o using wildcard
      Select section .rodata..L.str.94 ([.rodata..L.str.94]) from menus.o using wildcard
      Select section .rodata..L.str.95 ([.rodata..L.str.95]) from menus.o using wildcard
      Select section .rodata.Str_Sounds (Str_Sounds) from menus.o using wildcard
      Select section .rodata..L.str.96 ([.rodata..L.str.96]) from menus.o using wildcard
      Select section .rodata..L.str.97 ([.rodata..L.str.97]) from menus.o using wildcard
      Select section .rodata..L.str.98 ([.rodata..L.str.98]) from menus.o using wildcard
      Select section .rodata..L.str.99 ([.rodata..L.str.99]) from menus.o using wildcard
      Select section .rodata..L.str.100 ([.rodata..L.str.100]) from menus.o using wildcard
      Select section .rodata..L.str.101 ([.rodata..L.str.101]) from menus.o using wildcard
      Select section .rodata..L.str.102 ([.rodata..L.str.102]) from menus.o using wildcard
      Select section .rodata..L.str.103 ([.rodata..L.str.103]) from menus.o using wildcard
      Select section .rodata..L.str.104 ([.rodata..L.str.104]) from menus.o using wildcard
      Select section .rodata..L.str.105 ([.rodata..L.str.105]) from menus.o using wildcard
      Select section .rodata..L.str.106 ([.rodata..L.str.106]) from menus.o using wildcard
      Select section .rodata..L.str.107 ([.rodata..L.str.107]) from menus.o using wildcard
      Select section .rodata.Str_Protocol (Str_Protocol) from menus.o using wildcard
      Select section .rodata..L.str.108 ([.rodata..L.str.108]) from menus.o using wildcard
      Select section .rodata..L.str.109 ([.rodata..L.str.109]) from menus.o using wildcard
      Select section .rodata..L.str.110 ([.rodata..L.str.110]) from menus.o using wildcard
      Select section .rodata..L.str.111 ([.rodata..L.str.111]) from menus.o using wildcard
      Select section .rodata..L.str.112 ([.rodata..L.str.112]) from menus.o using wildcard
      Select section .rodata..L.str.113 ([.rodata..L.str.113]) from menus.o using wildcard
      Select section .rodata..L.str.114 ([.rodata..L.str.114]) from menus.o using wildcard
      Select section .rodata..L.str.115 ([.rodata..L.str.115]) from menus.o using wildcard
      Select section .rodata..L.str.116 ([.rodata..L.str.116]) from menus.o using wildcard
      Select section .rodata..L.str.117 ([.rodata..L.str.117]) from menus.o using wildcard
      Select section .rodata..L.str.118 ([.rodata..L.str.118]) from menus.o using wildcard
      Select section .rodata..L.str.119 ([.rodata..L.str.119]) from menus.o using wildcard
      Select section .rodata.menuProcModelIndex(unsigned char)::n_Strings (menuProcModelIndex(unsigned char)::n_Strings) from menus.o using wildcard
      Select section .rodata.Str_heli_setup (Str_heli_setup) from menus.o using wildcard
      Select section .rodata.Str_limits (Str_limits) from menus.o using wildcard
      Select section .rodata.Str_Expo (Str_Expo) from menus.o using wildcard
      Select section .rodata.Str_Cswitches (Str_Cswitches) from menus.o using wildcard
      Select section .rodata.Str_Safety (Str_Safety) from menus.o using wildcard
      Select section .rodata.Str_Timer (Str_Timer) from menus.o using wildcard
      Select section .rodata..L.str.120 ([.rodata..L.str.120]) from menus.o using wildcard
      Select section .rodata..L.str.121 ([.rodata..L.str.121]) from menus.o using wildcard
      Select section .rodata.Str_TRE012AG (Str_TRE012AG) from menus.o using wildcard
      Select section .rodata..L.str.122 ([.rodata..L.str.122]) from menus.o using wildcard
      Select section .rodata..L.str.123 ([.rodata..L.str.123]) from menus.o using wildcard
      Select section .rodata..L.str.124 ([.rodata..L.str.124]) from menus.o using wildcard
      Select section .rodata..L.str.125 ([.rodata..L.str.125]) from menus.o using wildcard
      Select section .rodata..L.str.126 ([.rodata..L.str.126]) from menus.o using wildcard
      Select section .rodata..L.str.127 ([.rodata..L.str.127]) from menus.o using wildcard
      Select section .rodata..L.str.128 ([.rodata..L.str.128]) from menus.o using wildcard
      Select section .rodata..L.str.129 ([.rodata..L.str.129]) from menus.o using wildcard
      Select section .rodata..L.str.130 ([.rodata..L.str.130]) from menus.o using wildcard
      Select section .rodata..L.str.131 ([.rodata..L.str.131]) from menus.o using wildcard
      Select section .rodata..L.str.132 ([.rodata..L.str.132]) from menus.o using wildcard
      Select section .rodata.MixPopList (MixPopList) from menus.o using wildcard
      Select section .rodata..L.str.133 ([.rodata..L.str.133]) from menus.o using wildcard
      Select section .rodata..L.str.134 ([.rodata..L.str.134]) from menus.o using wildcard
      Select section .rodata..L.str.135 ([.rodata..L.str.135]) from menus.o using wildcard
      Select section .rodata..L.str.136 ([.rodata..L.str.136]) from menus.o using wildcard
      Select section .rodata..L.str.137 ([.rodata..L.str.137]) from menus.o using wildcard
      Select section .rodata..L.str.138 ([.rodata..L.str.138]) from menus.o using wildcard
      Select section .rodata..L.str.139 ([.rodata..L.str.139]) from menus.o using wildcard
      Select section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) ([.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]) from menus.o using wildcard
      Select section .rodata..L.str ([.rodata..L.str]) from pers.o using wildcard
      Select section .rodata..L.str.1 ([.rodata..L.str.1]) from pers.o using wildcard
      Select section .rodata..L.str.2 ([.rodata..L.str.2]) from pers.o using wildcard
      Select section .rodata..L.str.3 ([.rodata..L.str.3]) from pers.o using wildcard
      Select section .rodata..L.str.4 ([.rodata..L.str.4]) from pers.o using wildcard
      Select section .rodata..L.str.5 ([.rodata..L.str.5]) from pers.o using wildcard
      Select section .rodata..L.str.6 ([.rodata..L.str.6]) from pers.o using wildcard
      Select section .rodata.Str_EEPROM_Overflow (Str_EEPROM_Overflow) from pers.o using wildcard
      Select section .rodata.Stamps (Stamps) from stamp.o using wildcard
      Select section .rodata.VarioTab (VarioTab) from Vario.o using wildcard
      Select section .rodata.AFHDS_tx_channels (AFHDS_tx_channels) from AFHDS.o using wildcard
      Select section .rodata.processCrossfireTelemetryFrame()::power_values (processCrossfireTelemetryFrame()::power_values) from crossfire.o using wildcard
      Select section .rodata.CROSSFIRE_PERIODS (CROSSFIRE_PERIODS) from crossfire.o using wildcard
      Select section .rodata.CROSSFIRE_BAUDRATES (CROSSFIRE_BAUDRATES) from crossfire.o using wildcard
      Select section .rodata.crc8tab (crc8tab) from crc_crsf.o using wildcard
      Select section .init (Reset_Handler) from Kinetis_KL_Startup.o using name
      Select section .init (NMI_Handler) from MKL16Z4_Vectors.o using name
  Select inputs for 'place in' block <#8> at line 108, col 45
      Select block tdata_load ([tdata_load]) from [ Linker created ] using name
  Select inputs for 'place in' block <#9> at line 115, col 44
  Select inputs for 'place in' block <#11> at line 120, col 45
      Select block tls ([tls]) from [ Linker created ] using name
  Select inputs for 'place in' block <#12> at line 124, col 45
      Select section .data.AlarmControl (AlarmControl) from er9x.o using wildcard
      Select section .data.prev_power (prev_power) from A7105_SPI.o using wildcard
      Select section .data.frskyUsrStreaming (frskyUsrStreaming) from A7105_SPI.o using wildcard
      Select section .data.A7105_AdjustLOBaseFreq()::old_offset (A7105_AdjustLOBaseFreq()::old_offset) from A7105_SPI.o using wildcard
      Select section .data.AFHDS2A_update_telemetry()::Dacc (AFHDS2A_update_telemetry()::Dacc) from AFHDS2A_a7105.o using wildcard
      Select section .data.ISR_TIMER1_COMPA_vect::pulsePtr (ISR_TIMER1_COMPA_vect::pulsePtr) from pulses.o using wildcard
      Select section .data.g_crossfile_baudrate_index (g_crossfile_baudrate_index) from crossfire.o using wildcard
      Select section .bss.LcdLock (LcdLock) from lcd.o using wildcard
      Select section .bss.Lcd_lastPos (Lcd_lastPos) from lcd.o using wildcard
      Select section .bss.DisplayBuf (DisplayBuf) from lcd.o using wildcard
      Select section .bss.EepromActive (EepromActive) from lcd.o using wildcard
      Select section .bss.plotType (plotType) from lcd.o using wildcard
      Select section .bss.SPI_BufferPtr (SPI_BufferPtr) from BoardI6.o using wildcard
      Select section .bss.SPI_Size (SPI_Size) from BoardI6.o using wildcard
      Select section .bss.g_crsf_read_callback (g_crsf_read_callback) from BoardI6.o using wildcard
      Select section .bss.Last_switch (Last_switch) from er9x.o using wildcard
      Select section .bss.g_eeGeneral (g_eeGeneral) from er9x.o using wildcard
      Select section .bss.g_model (g_model) from er9x.o using wildcard
      Select section .bss.AlertMessage (AlertMessage) from er9x.o using wildcard
      Select section .bss.Main_running (Main_running) from er9x.o using wildcard
      Select section .bss.Nvs_state (Nvs_state) from er9x.o using wildcard
      Select section .bss.Nvs_timer (Nvs_timer) from er9x.o using wildcard
      Select section .bss.CurrentVolume (CurrentVolume) from er9x.o using wildcard
      Select section .bss.ppmInAvailable (ppmInAvailable) from er9x.o using wildcard
      Select section .bss.Rotary (Rotary) from er9x.o using wildcard
      Select section .bss.Tevent (Tevent) from er9x.o using wildcard
      Select section .bss.Backup_RestoreRunning (Backup_RestoreRunning) from er9x.o using wildcard
      Select section .bss.TimerConfig (TimerConfig) from er9x.o using wildcard
      Select section .bss.audio (audio) from er9x.o using wildcard
      Select section .bss.sysFlags (sysFlags) from er9x.o using wildcard
      Select section .bss.SystemOptions (SystemOptions) from er9x.o using wildcard
      Select section .bss.CsTimer (CsTimer) from er9x.o using wildcard
      Select section .bss.g_ppmIns (g_ppmIns) from er9x.o using wildcard
      Select section .bss.check_backlight_voice()::tmr10ms (check_backlight_voice()::tmr10ms) from er9x.o using wildcard
      Select section .bss.g_LightOffCounter (g_LightOffCounter) from er9x.o using wildcard
      Select section .bss.StickScrollAllowed (StickScrollAllowed) from er9x.o using wildcard
      Select section .bss.StickScrollTimer (StickScrollTimer) from er9x.o using wildcard
      Select section .bss.g_menuStack (g_menuStack) from er9x.o using wildcard
      Select section .bss.g_menuStackPtr (g_menuStackPtr) from er9x.o using wildcard
      Select section .bss.EnterMenu (EnterMenu) from er9x.o using wildcard
      Select section .bss.P1values (P1values) from er9x.o using wildcard
      Select section .bss.StepSize (StepSize) from er9x.o using wildcard
      Select section .bss.LongMenuTimer (LongMenuTimer) from er9x.o using wildcard
      Select section .bss.g_vbat100mV (g_vbat100mV) from er9x.o using wildcard
      Select section .bss.tick10ms (tick10ms) from er9x.o using wildcard
      Select section .bss.stickMoved (stickMoved) from er9x.o using wildcard
      Select section .bss.Inactivity (Inactivity) from er9x.o using wildcard
      Select section .bss.ppmInState (ppmInState) from er9x.o using wildcard
      Select section .bss.s_anaFilt (s_anaFilt) from er9x.o using wildcard
      Select section .bss.g_tmr16KHz (g_tmr16KHz) from er9x.o using wildcard
      Select section .bss.tmrEEPROM (tmrEEPROM) from er9x.o using wildcard
      Select section .bss.ISR_TIMER3_CAPT_vect::lastCapt (ISR_TIMER3_CAPT_vect::lastCapt) from er9x.o using wildcard
      Select section .bss.mainSequence()::timer (mainSequence()::timer) from er9x.o using wildcard
      Select section .bss.audioQueue::driver()::toneCounter (audioQueue::driver()::toneCounter) from er9x.o using wildcard
      Select section .bss.perMain()::lastTMR (perMain()::lastTMR) from er9x.o using wildcard
      Select section .bss.perMain()::repeater (perMain()::repeater) from er9x.o using wildcard
      Select section .bss.perMain()::alertKey (perMain()::alertKey) from er9x.o using wildcard
      Select section .bss.perMain()::s_batCheck (perMain()::s_batCheck) from er9x.o using wildcard
      Select section .bss.RadioState (RadioState) from A7105_SPI.o using wildcard
      Select section .bss.protocol_flags (protocol_flags) from A7105_SPI.o using wildcard
      Select section .bss.packet (packet) from A7105_SPI.o using wildcard
      Select section .bss.ID (ID) from A7105_SPI.o using wildcard
      Select section .bss.packet_count (packet_count) from A7105_SPI.o using wildcard
      Select section .bss.bind_phase (bind_phase) from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency (hopping_frequency) from A7105_SPI.o using wildcard
      Select section .bss.hopping_frequency_no (hopping_frequency_no) from A7105_SPI.o using wildcard
      Select section .bss.A7105_AntSwitch()::sw (A7105_AntSwitch()::sw) from A7105_SPI.o using wildcard
      Select section .bss.AFHDS2A_tel_data (AFHDS2A_tel_data) from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_status (AFHDS2A_tel_status) from AFHDS2A_a7105.o using wildcard
      Select section .bss.AFHDS2A_tel_res_cnt (AFHDS2A_tel_res_cnt) from AFHDS2A_a7105.o using wildcard
      Select section .bss.AltOffset (AltOffset) from AFHDS2A_a7105.o using wildcard
      Select section .bss.GAltOffset (GAltOffset) from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_type (ActionAFHDS2A::packet_type) from AFHDS2A_a7105.o using wildcard
      Select section .bss.ActionAFHDS2A::packet_counter (ActionAFHDS2A::packet_counter) from AFHDS2A_a7105.o using wildcard
      Select section .bss.Voice (Voice) from audio.o using wildcard
      Select section .bss.i2c_buffer (i2c_buffer) from drivers.o using wildcard
      Select section .bss.s_evt (s_evt) from drivers.o using wildcard
      Select section .bss.keys (keys) from drivers.o using wildcard
      Select section .bss.g_tmr10ms (g_tmr10ms) from drivers.o using wildcard
      Select section .bss.g_blinkTmr10ms (g_blinkTmr10ms) from drivers.o using wildcard
      Select section .bss.per10ms()::current (per10ms()::current) from drivers.o using wildcard
      Select section .bss.SvFifo (SvFifo) from drivers.o using wildcard
      Select section .bss.eeFs (eeFs) from file.o using wildcard
      Select section .bss.Xmem (Xmem) from menus.o using wildcard
      Select section .bss.PopupData (PopupData) from menus.o using wildcard
      Select section .bss.MenuControl (MenuControl) from menus.o using wildcard
      Select section .bss.s_timer (s_timer) from menus.o using wildcard
      Select section .bss.RotaryState (RotaryState) from menus.o using wildcard
      Select section .bss.CalcScaleNest (CalcScaleNest) from menus.o using wildcard
      Select section .bss.ThrottleStickyOn (ThrottleStickyOn) from menus.o using wildcard
      Select section .bss.phyStick (phyStick) from menus.o using wildcard
      Select section .bss.calibratedStick (calibratedStick) from menus.o using wildcard
      Select section .bss.Ex_chans (Ex_chans) from menus.o using wildcard
      Select section .bss.s_pgOfs (s_pgOfs) from menus.o using wildcard
      Select section .bss.s_editMode (s_editMode) from menus.o using wildcard
      Select section .bss.s_editing (s_editing) from menus.o using wildcard
      Select section .bss.s_noHi (s_noHi) from menus.o using wildcard
      Select section .bss.scrollLR (scrollLR) from menus.o using wildcard
      Select section .bss.scroll_disabled (scroll_disabled) from menus.o using wildcard
      Select section .bss.scrollUD (scrollUD) from menus.o using wildcard
      Select section .bss.InverseBlink (InverseBlink) from menus.o using wildcard
      Select section .bss.EditType (EditType) from menus.o using wildcard
      Select section .bss.EditColumns (EditColumns) from menus.o using wildcard
      Select section .bss.g_chans512 (g_chans512) from menus.o using wildcard
      Select section .bss.g_posHorz (g_posHorz) from menus.o using wildcard
      Select section .bss.M_longMenuTimer (M_longMenuTimer) from menus.o using wildcard
      Select section .bss.Columns (Columns) from menus.o using wildcard
      Select section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp (MState2::check_columns(unsigned char, unsigned char)::lateUp) from menus.o using wildcard
      Select section .bss.s_curveChan (s_curveChan) from menus.o using wildcard
      Select section .bss.s_expoChan (s_expoChan) from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::dfltCrv (menuProcCurveOne(unsigned char)::dfltCrv) from menus.o using wildcard
      Select section .bss.menuProcCurveOne(unsigned char)::mstate2 (menuProcCurveOne(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcCurve(unsigned char)::mstate2 (menuProcCurve(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.CurrentPhase (CurrentPhase) from menus.o using wildcard
      Select section .bss.menuProcTelemetry(unsigned char)::mstate2 (menuProcTelemetry(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuScaleOne(unsigned char)::mstate2 (menuScaleOne(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.s_currIdx (s_currIdx) from menus.o using wildcard
      Select section .bss.menuProcGlobals(unsigned char)::mstate2 (menuProcGlobals(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.s_currMixIdx (s_currMixIdx) from menus.o using wildcard
      Select section .bss.menuProcMixOne(unsigned char)::mstate2 (menuProcMixOne(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.s_mixMaxSel (s_mixMaxSel) from menus.o using wildcard
      Select section .bss.mixToDelete (mixToDelete) from menus.o using wildcard
      Select section .bss.s_moveMode (s_moveMode) from menus.o using wildcard
      Select section .bss.menuProcMix(unsigned char)::mstate2 (menuProcMix(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.s_currDestCh (s_currDestCh) from menus.o using wildcard
      Select section .bss.s_moveMixIdx (s_moveMixIdx) from menus.o using wildcard
      Select section .bss.DupIfNonzero (DupIfNonzero) from menus.o using wildcard
      Select section .bss.DupSub (DupSub) from menus.o using wildcard
      Select section .bss.menuRangeBind(unsigned char)::timer (menuRangeBind(unsigned char)::timer) from menus.o using wildcard
      Select section .bss.menuPhaseOne(unsigned char)::mstate2 (menuPhaseOne(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuBackupRestore(unsigned char)::mstate2 (menuBackupRestore(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuBackupRestore(unsigned char)::count (menuBackupRestore(unsigned char)::count) from menus.o using wildcard
      Select section .bss.menuModelPhases(unsigned char)::mstate2 (menuModelPhases(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::mstate2 (menuProcModelSelect(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcModelSelect(unsigned char)::sel_editMode (menuProcModelSelect(unsigned char)::sel_editMode) from menus.o using wildcard
      Select section .bss.TimeGlobals (TimeGlobals) from menus.o using wildcard
      Select section .bss.trace()::s_time (trace()::s_time) from menus.o using wildcard
      Select section .bss.g_latency (g_latency) from menus.o using wildcard
      Select section .bss.menuProc0(unsigned char)::trimSwLock (menuProc0(unsigned char)::trimSwLock) from menus.o using wildcard
      Select section .bss.inputs_subview (inputs_subview) from menus.o using wildcard
      Select section .bss.bpanaCenter (bpanaCenter) from menus.o using wildcard
      Select section .bss.Output (Output) from menus.o using wildcard
      Select section .bss.Fade (Fade) from menus.o using wildcard
      Select section .bss.perOutPhase(short*, unsigned char)::lastPhase (perOutPhase(short*, unsigned char)::lastPhase) from menus.o using wildcard
      Select section .bss.perOut(short*, unsigned char)::sticky (perOut(short*, unsigned char)::sticky) from menus.o using wildcard
      Select section .bss.menuProcIndex(unsigned char)::mstate (menuProcIndex(unsigned char)::mstate) from menus.o using wildcard
      Select section .bss.IlinesCount (IlinesCount) from menus.o using wildcard
      Select section .bss.menuProcVoiceOne(unsigned char)::mstate2 (menuProcVoiceOne(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 (menuProcVoiceAlarm(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuRXSetup(unsigned char)::mstate2 (menuRXSetup(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuSetFailsafe(unsigned char)::mstate2 (menuSetFailsafe(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcProtocol(unsigned char)::mstate2 (menuProcProtocol(unsigned char)::mstate2) from menus.o using wildcard
      Select section .bss.menuProcModelIndex(unsigned char)::mstate (menuProcModelIndex(unsigned char)::mstate) from menus.o using wildcard
      Select section .bss.theFile (theFile) from pers.o using wildcard
      Select section .bss.theWriteFile (theWriteFile) from pers.o using wildcard
      Select section .bss.s_eeDirtyMsk (s_eeDirtyMsk) from pers.o using wildcard
      Select section .bss.s_eeDirtyTime10ms (s_eeDirtyTime10ms) from pers.o using wildcard
      Select section .bss.s_eeLongTimer (s_eeLongTimer) from pers.o using wildcard
      Select section .bss.Ee_lock (Ee_lock) from pers.o using wildcard
      Select section .bss.pulses2MHz (pulses2MHz) from pulses.o using wildcard
      Select section .bss.heartbeat (heartbeat) from pulses.o using wildcard
      Select section .bss.Current_protocol (Current_protocol) from pulses.o using wildcard
      Select section .bss.pxxFlag (pxxFlag) from pulses.o using wildcard
      Select section .bss.PausePulses (PausePulses) from pulses.o using wildcard
      Select section .bss.serialDat0 (serialDat0) from pulses.o using wildcard
      Select section .bss.RadioActive (RadioActive) from pulses.o using wildcard
      Select section .bss.B3_comp_value (B3_comp_value) from pulses.o using wildcard
      Select section .bss.WorkBuff (WorkBuff) from Vario.o using wildcard
      Select section .bss.LoadBuff (LoadBuff) from Vario.o using wildcard
      Select section .bss.VarioPlay (VarioPlay) from Vario.o using wildcard
      Select section .bss.Vario_driver()::toneCounter (Vario_driver()::toneCounter) from Vario.o using wildcard
      Select section .bss.hal (hal) from SX127x.o using wildcard
      Select section .bss.SX127xDriver::instance (SX127xDriver::instance) from SX127x.o using wildcard
      Select section .bss.SX127xHal::instance (SX127xHal::instance) from SX127xHal.o using wildcard
      Select section .bss.Radio (Radio) from ELRS.o using wildcard
      Select section .bss.ota_crc (ota_crc) from ELRS.o using wildcard
      Select section .bss.LQCalc (LQCalc) from ELRS.o using wildcard
      Select section .bss.TelemetryReceiver (TelemetryReceiver) from ELRS.o using wildcard
      Select section .bss.MspSender (MspSender) from ELRS.o using wildcard
      Select section .bss.outputTelemetryBuffer (outputTelemetryBuffer) from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferSize (outputTelemetryBufferSize) from crossfire.o using wildcard
      Select section .bss.outputTelemetryBufferTrigger (outputTelemetryBufferTrigger) from crossfire.o using wildcard
      Select section .bss.telemetryRxBuffer (telemetryRxBuffer) from crossfire.o using wildcard
      Select section .bss.telemetryRxBufferCount (telemetryRxBufferCount) from crossfire.o using wildcard
      Select section .bss.g_crossfire (g_crossfire) from crossfire.o using wildcard
      Select section .bss.telemetryErrors (telemetryErrors) from crossfire.o using wildcard
      Select section .bss.g_crsf_config (g_crsf_config) from crossfire.o using wildcard
      Select section .bss.moduleSyncStatus (moduleSyncStatus) from crossfire.o using wildcard
      Select section .bss.crossfireTelemetryCallback (crossfireTelemetryCallback) from crossfire.o using wildcard
  Select inputs for 'place in' block <#13> at line 128, col 45
      Select block heap ([heap]) from [ Linker created ] using name


***************************************************************************************
***                                                                                 ***
***                                  Pad sections                                   ***
***                                                                                 ***
***************************************************************************************

  Padding sections for section alignment


***************************************************************************************
***                                                                                 ***
***                               Assign init methods                               ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (65 inputs)
      SystemCoreClock from system_MKL16Z4.o
      TX_name from BoardI6.o
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      frskyUsrStreaming from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      pulses2MHzptr from pulses.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      ExpressLRS_AirRateConfig from common.o
      ExpressLRS_AirRateRFperf from common.o
      connectionState from common.o
      connectionStatePrev from common.o
      BindingUID from common.o
      SX127xDriver::RXdoneCallback from SX127x.o
      SX127xDriver::TXdoneCallback from SX127x.o
      SX127xDriver::TXtimeout from SX127x.o
      SX127xDriver::RXtimeout from SX127x.o
      connectionHasModelMatch from ELRS.o
      POWERMGNT::CurrentPower from POWERMGNT.o
      POWERMGNT::FanEnableThreshold from POWERMGNT.o
      g_crossfile_baudrate_index from crossfire.o
      __RAL_global_locale from libc2.o (libc_v6m_t_le_eabi_small.a)
      __RAL_rand_next from libc2.o (libc_v6m_t_le_eabi_small.a)
      __ungot from libc2.o (libc_v6m_t_le_eabi_small.a)
      heap from libc2.o (libc_v6m_t_le_eabi_small.a)
      stderr from libc2.o (libc_v6m_t_le_eabi_small.a)
      stdout from libc2.o (libc_v6m_t_le_eabi_small.a)
      streams from libc2.o (libc_v6m_t_le_eabi_small.a)
  Applying user initialization 'auto': (0 inputs)


***************************************************************************************
***                                                                                 ***
***                                   Sort inputs                                   ***
***                                                                                 ***
***************************************************************************************

  Sorting sections with auto order for block vectors
  Sorting sections with auto order for block vectors_ram
  Sorting sections with alphabetical order for inline block <#1> at line 61, col 85
  Sorting sections with auto order for block ctors
  Sorting sections with reverse alphabetical order for inline block <#2> at line 62, col 85
  Sorting sections with auto order for block dtors
  Sorting sections with auto order for block exidx
  Sorting sections with auto order for block tbss
  Sorting sections with auto order for block tdata
  Sorting sections with auto order for block tls
  Sorting sections with auto order for block tdata_load
  Sorting sections with auto order for block heap
  Sorting sections with auto order for block stack
  Sorting sections with auto order for block cfm
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place at
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000400 to 0x0000040f]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x00000000 to 0x0000ffff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]
  Sorting sections with auto order for place in [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                               Size and alignment                                ***
***                                                                                 ***
***************************************************************************************

  Process block vectors:
      size = 192, alignment = 4
  Process block vectors_ram:
      size = 0, alignment = 0
  Process inline block <#1> at line 61, col 85:
      size = 12, alignment = 4
  Process block ctors:
      size = 12, alignment = 4
  Process inline block <#2> at line 62, col 85:
      size = 0, alignment = 0
  Process block dtors:
      size = 0, alignment = 1
  Process block exidx:
      size = 0, alignment = 0
  Process block tbss:
      size = 0, alignment = 0
  Process block tdata:
      size = 0, alignment = 0
  Process block tls:
      size = 0, alignment = 1
  Process block tdata_load:
      Process block tdata:
          size = 0, alignment = 0
      size = 0, alignment = 1
  Process block heap:
      size = 256, alignment = 8
  Process block stack:
      size = 256, alignment = 8
  Process block cfm:
      size = 16, alignment = 2
  Process 'place at start' block <#5> at line 97, col 45:
      size = 192, alignment = 4
  Process 'place at start' block <#6> at line 98, col 45:
      size = 16, alignment = 2
  Process 'place at start' block <#10> at line 119, col 45:
      size = 0, alignment = 1
  Process 'place at end' block <#14> at line 129, col 45:
      size = 256, alignment = 8


***************************************************************************************
***                                                                                 ***
***                                Dump Script tasks                                ***
***                                                                                 ***
***************************************************************************************

  Internal linker script
      define symbol __STACKSIZE__
      define symbol __STACKSIZE_PROCESS__
      define symbol __HEAPSIZE__
      define symbol __do_debug_operation
      define symbol __vfprintf
      define symbol __vfscanf
      define symbol __dso_handle
      define region FLASH = [0x00000000 to 0x0000ffff]
      define region CFM = [0x00000400 to 0x0000040f]
      define region RAM = [0x1ffff800 to 0x200017ff]
      define block vectors
          input section .vectors from MKL16Z4_Vectors.o, size 192, align 4
      define block vectors_ram
      define inline block <#1> at line 61, col 85
          input section .init_array from er9x.o, size 4, align 4
          input section .init_array from SX127x.o, size 4, align 4
          input section .init_array from ELRS.o, size 4, align 4
      define block ctors
          input inline block <#1> at line 61, col 85 from [ Linker created ], size 12, align 4
      define inline block <#2> at line 62, col 85
      define block dtors
          input inline block <#2> at line 62, col 85 from [ Linker created ], size 0, align 1
      define block exidx
      define block tbss
      define block tdata
      define block tls
          input block tdata from [ Linker created ], size 0, align 1
          input block tbss from [ Linker created ], size 0, align 1
      define block tdata_load
          input copy of block tdata from [ Linker created ], size 0, align 1
          copy of block tdata
      define block heap
          with fixed size 0x100
      define block stack
          with fixed size 0x100
      define block cfm
          input section .cfm from MKL16Z4_Vectors.o, size 16, align 2
      do not initialize {
          section .non_init,
          section .non_init.*,
          section .*.non_init,
          section .*.non_init.*,
      }
      do not initialize {
          section .no_init,
          section .no_init.*,
          section .*.no_init,
          section .*.no_init.*,
      }
      do not initialize {
          section .noinit,
          section .noinit.*,
          section .*.noinit,
          section .*.noinit.*,
      }
      do not initialize {
          block vectors_ram,
      }
      initialize by auto {
          section .data,
          section .data.*,
          section .*.data,
          section .*.data.*,
      }
      initialize by auto {
          section .fast,
          section .fast.*,
      }
      initialize by calling __SEGGER_init_heap {
          block heap,
      }
      initialize by calling __SEGGER_init_ctors {
          block ctors,
      }
      keep {
          section .cfm,
      }
      place at 0x00000000
          input block vectors from [ Linker created ], size 192, align 4
      place at 0x00000400
          input block cfm from [ Linker created ], size 16, align 2
      place at 0x1ffff800
          input block vectors_ram from [ Linker created ], size 0, align 1
      place at 0x20001800
          input block stack from [ Linker created ], size 256, align 8
      place in [0x00000000 to 0x0000ffff] with auto order
      place in [0x00000400 to 0x0000040f] with auto order
      place in [0x00000000 to 0x0000ffff] with auto order
          input section .text.menuProcModelIndex(unsigned char) from menus.o, size 4276, align 4
          input section .text.menuProcIndex(unsigned char) from menus.o, size 3216, align 4
          input section .text.perOut(short*, unsigned char) from menus.o, size 3016, align 4
          input section .text.mainSequence() from er9x.o, size 2016, align 4
          input section .text.menuProc0(unsigned char) from menus.o, size 1896, align 4
          input section .text.menuProcMixOne(unsigned char) from menus.o, size 1232, align 4
          input section .text.menuProcProtocol(unsigned char) from menus.o, size 1228, align 4
          input section .text.menuProcMix(unsigned char) from menus.o, size 1192, align 4
          input section .text.menuProcVoiceOne(unsigned char) from menus.o, size 1124, align 4
          input section .text.ActionAFHDS2A from AFHDS2A_a7105.o, size 988, align 4
          input section .text.HW_Init from BoardI6.o, size 924, align 4
          input section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o, size 832, align 4
          input section .text.menuProcModelSelect(unsigned char) from menus.o, size 832, align 4
          input section .text.timer() from menus.o, size 800, align 4
          input section .text.menuBackupRestore(unsigned char) from menus.o, size 780, align 4
          input section .text.audioQueue::event(unsigned char, unsigned char) from audio.o, size 760, align 4
          input section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o, size 732, align 4
          input section .text.menuScaleOne(unsigned char) from menus.o, size 660, align 4
          input section .text.menuProcTelemetry(unsigned char) from menus.o, size 552, align 4
          input section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o, size 544, align 4
          input section .text.mainER() from er9x.o, size 532, align 4
          input section .text.eeLoadModel(unsigned char) from pers.o, size 532, align 4
          input section .text.getSwitch(signed char, bool, unsigned char) from er9x.o, size 488, align 4
          input section .text.menuProcGlobals(unsigned char) from menus.o, size 488, align 4
          input section .text.menuPhaseOne(unsigned char) from menus.o, size 484, align 4
          input section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o, size 460, align 4
          input section .text.menuSetFailsafe(unsigned char) from menus.o, size 452, align 4
          input section .text.processCrossfireTelemetryFrame() from crossfire.o, size 404, align 4
          input section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o, size 392, align 4
          input section .text.perOutPhase(short*, unsigned char) from menus.o, size 392, align 4
          input section .text.i2c_master from BoardI6.o, size 352, align 4
          input section .text.eeCheck(bool) from pers.o, size 352, align 4
          input section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o, size 344, align 4
          input section .text.menuProcCurveOne(unsigned char) from menus.o, size 340, align 4
          input section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o, size 332, align 4
          input section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o, size 328, align 4
          input section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o, size 324, align 4
          input section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o, size 292, align 4
          input section .text.Vario_play(int, bool) from Vario.o, size 292, align 4
          input section .text.menuProcVoiceAlarm(unsigned char) from menus.o, size 280, align 4
          input section .text.menuModelPhases(unsigned char) from menus.o, size 240, align 4
          input section .text.setupPulsesPPM(unsigned char) from pulses.o, size 236, align 4
          input section .text.per10ms() from drivers.o, size 232, align 4
          input section .text.checkSwitches() from er9x.o, size 228, align 4
          input section .text.voice_telem_item(unsigned char) from menus.o, size 220, align 4
          input section .text.setStickCenter() from menus.o, size 216, align 4
          input section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o, size 204, align 4
          input section .text.A7105_Init() from A7105_SPI.o, size 204, align 4
          input section .text.EFile::write(unsigned char*, unsigned char) from file.o, size 196, align 4
          input section .text.Key::input(bool, EnumKeys) from drivers.o, size 196, align 4
          input section .text.setupPulses() from pulses.o, size 196, align 4
          input section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o, size 192, align 4
          input section .text.menuProcStatistic(unsigned char) from menus.o, size 192, align 4
          input section .text.menuRXSetup(unsigned char) from menus.o, size 192, align 4
          input section .text.calcExpo(unsigned char, short) from menus.o, size 188, align 4
          input section .text.menuProcCurve(unsigned char) from menus.o, size 184, align 4
          input section .text.initAFHDS2A from AFHDS2A_a7105.o, size 180, align 4
          input section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o, size 180, align 4
          input section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 176, align 4
          input section .text.ActionAFHDS from AFHDS.o, size 172, align 4
          input section .text.EeFsck() from file.o, size 164, align 4
          input section .text.menuDeleteDupModel(unsigned char) from menus.o, size 164, align 4
          input section .text.menuRangeBind(unsigned char) from menus.o, size 164, align 4
          input section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 164, align 4
          input section .text.drawFunction(unsigned char, unsigned char) from menus.o, size 160, align 4
          input section .text.ISR_TIMER3_CAPT_vect from er9x.o, size 152, align 4
          input section .init.SystemInit from system_MKL16Z4.o, size 148, align 4
          input section .text.initAFHDS from AFHDS.o, size 144, align 4
          input section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o, size 144, align 4
          input section .text.doMainScreenGrphics() from menus.o, size 140, align 4
          input section .text.refreshDiplay() from lcd.o, size 140, align 4
          input section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o, size 140, align 4
          input section .text.singleBar(unsigned char, unsigned char, short) from menus.o, size 136, align 4
          input section .text.drawCurve(unsigned char) from menus.o, size 136, align 4
          input section .text.keyState(EnumKeys) from drivers.o, size 136, align 4
          input section .text.eeGeneralDefault() from pers.o, size 136, align 4
          input section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 136, align 4
          input section .text.audioQueue::heartbeat() from audio.o, size 128, align 4
          input section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire_output.o, size 128, align 4
          input section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 128, align 4
          input section .text.scaleAnalog(short, unsigned char) from menus.o, size 124, align 4
          input section .text.EFile::read(unsigned char*, unsigned short) from file.o, size 120, align 4
          input section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o, size 120, align 4
          input section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o, size 120, align 4
          input section .text.eeReadGeneral() from pers.o, size 120, align 4
          input section .text.get_telemetry_value(unsigned char) from menus.o, size 116, align 4
          input section .text.getGvarSourceValue(unsigned char) from er9x.o, size 116, align 4
          input section .text.insertMix(unsigned char, unsigned char) from menus.o, size 112, align 4
          input section .text.getValue(unsigned char) from er9x.o, size 112, align 4
          input section .text.alertx(char const*, bool) from er9x.o, size 112, align 4
          input section .text.menuDeleteMix(unsigned char) from menus.o, size 112, align 4
          input section .text.modelDefaultWrite(unsigned char) from pers.o, size 108, align 4
          input section .text.SPI0_IRQHandler from BoardI6.o, size 108, align 4
          input section .text.setup_crsf_serial_port from BoardI6.o, size 104, align 4
          input section .text.eeDuplicateModel(unsigned char) from pers.o, size 104, align 4
          input section .text.Vario_driver() from Vario.o, size 104, align 4
          input section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o, size 100, align 4
          input section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o, size 100, align 4
          input section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o, size 100, align 4
          input section .text.PIND from BoardI6.o, size 100, align 4
          input section .text.getADC_osmp from BoardI6.o, size 96, align 4
          input section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o, size 96, align 4
          input section .text.PINB from BoardI6.o, size 96, align 4
          input section .text.almess(char const*, unsigned char) from er9x.o, size 92, align 4
          input section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o, size 92, align 4
          input section .text.doBackLightVoice(unsigned char) from er9x.o, size 92, align 4
          input section .text.calcStickScroll(unsigned char) from er9x.o, size 92, align 4
          input section .text.applyTemplate() from templates.o, size 92, align 4
          input section .text.EFile::closeTrunc() from file.o, size 88, align 4
          input section .text.lcd_init() from lcd.o, size 88, align 4
          input section .text.setMix(unsigned char, unsigned char) from templates.o, size 88, align 4
          input section .text.dispInVExVDbl(unsigned char) from menus.o, size 88, align 4
          input section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o, size 88, align 4
          input section .text.dispSignalQality(unsigned char) from menus.o, size 84, align 4
          input section .text.eeWriteGeneral() from pers.o, size 84, align 4
          input section .text.PINE from BoardI6.o, size 84, align 4
          input section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o, size 80, align 4
          input section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 80, align 4
          input section .text.TPM0_IRQHandler from BoardI6.o, size 80, align 4
          input section .text.ISR_TIMER0_COMP_vect from er9x.o, size 80, align 4
          input section .text.checkTHR() from er9x.o, size 76, align 4
          input section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o, size 76, align 4
          input section .text.checkThrottlePosition() from er9x.o, size 76, align 4
          input section .text.SPI_RADIO_ReceiveBlock from BoardI6.o, size 76, align 4
          input section .text.setupPulsesCrossfire() from crossfire_output.o, size 72, align 4
          input section .text.SetStartPulsePol() from pulses.o, size 72, align 4
          input section .text.yesNoMenuExit(unsigned char, char const*) from menus.o, size 72, align 4
          input section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o, size 72, align 4
          input section .text.PIT_IRQHandler from BoardI6.o, size 72, align 4
          input section .text.ModuleSyncStatus::update(unsigned short, short) from crossfire.o, size 68, align 4
          input section .text.check_backlight_voice() from er9x.o, size 68, align 4
          input section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o, size 68, align 4
          input section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o, size 68, align 4
          input section .text.ISR_TIMER1_COMPA_vect from pulses.o, size 68, align 4
          input section .init from MKL16Z4_Vectors.o, size 68, align 4
          input section .text.EFile::swap(unsigned char, unsigned char) from file.o, size 64, align 4
          input section .text.audioQueue::getToneLength(unsigned char) from audio.o, size 64, align 4
          input section .text.crsf_send_data from BoardI6.o, size 60, align 4
          input section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.anaIn(unsigned char) from er9x.o, size 60, align 4
          input section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.rangeBindAction(unsigned char, unsigned char) from menus.o, size 60, align 4
          input section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o, size 60, align 4
          input section .text.EeFsFormat() from file.o, size 60, align 4
          input section .text.audioQueue::driver() from er9x.o, size 56, align 4
          input section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 56, align 4
          input section .text.REG(signed char, signed char, signed char) from er9x.o, size 56, align 4
          input section .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) from crossfire.o, size 56, align 4
          input section .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) from crossfire.o, size 56, align 4
          input section .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) from crossfire.o, size 56, align 4
          input section .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) from crossfire.o, size 56, align 4
          input section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 56, align 4
          input section .text.get_dr_state(unsigned char) from menus.o, size 56, align 4
          input section .text.resetTimern(unsigned char) from menus.o, size 56, align 4
          input section .text.SetPRTTimPeriod from BoardI6.o, size 56, align 4
          input section .text.PORTC_PORTD_IRQHandler from BoardI6.o, size 56, align 4
          input section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o, size 56, align 4
          input section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o, size 56, align 4
          input section .text.pushMenu(void (*)(unsigned char)) from er9x.o, size 52, align 4
          input section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o, size 52, align 4
          input section .text.getFlightPhase() from er9x.o, size 52, align 4
          input section .text.A7105_SetPower() from A7105_SPI.o, size 52, align 4
          input section .text.SPI_RADIO_SendBlock from BoardI6.o, size 52, align 4
          input section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o, size 48, align 4
          input section .text.EeFsFree(unsigned char) from file.o, size 48, align 4
          input section .text.modelSave(unsigned char) from pers.o, size 48, align 4
          input section .text.char2idx(char) from menus.o, size 48, align 4
          input section .text.EeFsOpen() from file.o, size 48, align 4
          input section .text.eeDirty(unsigned char) from pers.o, size 48, align 4
          input section .text.eeLoadModelForBackup(unsigned char) from pers.o, size 48, align 4
          input section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o, size 48, align 4
          input section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 48, align 4
          input section .text.A7105_ReadData(unsigned char) from A7105_SPI.o, size 48, align 4
          input section .text.TPM2_IRQHandler from BoardI6.o, size 48, align 4
          input section .text.SX127xDriver::SX127xDriver() from SX127x.o, size 44, align 4
          input section .text.crsf_init() from crossfire.o, size 44, align 4
          input section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 44, align 4
          input section .text.popMenu(bool) from er9x.o, size 44, align 4
          input section .text.putVoiceQueueLong(unsigned short) from er9x.o, size 44, align 4
          input section .text.menuMixersLimit(unsigned char) from menus.o, size 44, align 4
          input section .text.PING from BoardI6.o, size 44, align 4
          input section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o, size 44, align 4
          input section .text.mDelay from BoardI6.o, size 40, align 4
          input section .text.EFile::rm(unsigned char) from file.o, size 40, align 4
          input section .text.EeFsAlloc() from file.o, size 40, align 4
          input section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 40, align 4
          input section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.lcd_plot(unsigned char, unsigned char) from lcd.o, size 40, align 4
          input section .text.A7105_AntSwitch() from A7105_SPI.o, size 40, align 4
          input section .text.eeWaitComplete() from pers.o, size 40, align 4
          input section .text.switchDisplay(unsigned char, unsigned char) from menus.o, size 40, align 4
          input section .text.startPulses() from pulses.o, size 40, align 4
          input section .text.progressBar() from menus.o, size 40, align 4
          input section .text.evalOffset(signed char) from menus.o, size 40, align 4
          input section .init from Kinetis_KL_Startup.o, size 40, align 4
          input section .text.EFile::openRd(unsigned char) from file.o, size 36, align 4
          input section .text.curveAddress(unsigned char) from menus.o, size 36, align 4
          input section .text.getSvFifo() from drivers.o, size 36, align 4
          input section .text.ee_waite() from drivers.o, size 36, align 4
          input section .text.reachMixerCountLimit() from menus.o, size 36, align 4
          input section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 4
          input section .text.evalChkSum() from pers.o, size 36, align 4
          input section .text.LCD_DATA from BoardI6.o, size 36, align 4
          input section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o, size 36, align 4
          input section .text.EFile::size() from file.o, size 32, align 4
          input section .text.chainMenu(void (*)(unsigned char)) from er9x.o, size 32, align 4
          input section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o, size 32, align 4
          input section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o, size 32, align 4
          input section .text.processVoiceAlarms() from er9x.o, size 32, align 4
          input section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o, size 32, align 4
          input section .text.lcdSetRefVolt(unsigned char) from lcd.o, size 32, align 4
          input section .text.backlightKey() from er9x.o, size 32, align 4
          input section .text.pauseEvents(unsigned char) from drivers.o, size 32, align 4
          input section .text.menuPressed() from drivers.o, size 32, align 4
          input section .text.EeFsGetFree() from file.o, size 32, align 4
          input section .text.ISR_TIMER2_OVF_vect from er9x.o, size 32, align 4
          input section .text.trace() from menus.o, size 28, align 4
          input section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o, size 28, align 4
          input section .text.throttleReversed() from er9x.o, size 28, align 4
          input section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o, size 28, align 4
          input section .text.modeFixValue(unsigned char) from er9x.o, size 28, align 4
          input section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 28, align 4
          input section .text.crsf_action() from crossfire.o, size 28, align 4
          input section .text.killEvents(unsigned char) from drivers.o, size 28, align 4
          input section .text.TPM1_IRQHandler from BoardI6.o, size 28, align 4
          input section .text.EnableGIO from BoardI6.o, size 28, align 4
          input section .text.clearKeyEvents() from er9x.o, size 24, align 4
          input section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 24, align 4
          input section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o, size 24, align 4
          input section .text.GetChipID from BoardI6.o, size 24, align 4
          input section .text.EFile::exists(unsigned char) from file.o, size 20, align 4
          input section .text.EeFsFlush() from file.o, size 20, align 4
          input section .text.EeFsFlushFreelist() from file.o, size 20, align 4
          input section .text.setVolume(unsigned char) from er9x.o, size 20, align 4
          input section .text.lcd_clear() from lcd.o, size 20, align 4
          input section .text.idx2char(unsigned char) from menus.o, size 20, align 4
          input section .text.crsf_current_period() from crossfire.o, size 20, align 4
          input section .text.startSerialVoice() from drivers.o, size 20, align 4
          input section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o, size 20, align 4
          input section .text.checkIncDec_u0(short, unsigned char) from er9x.o, size 20, align 4
          input section .text.checkIncDec_0(signed char, signed char) from er9x.o, size 20, align 4
          input section .text.audioDefevent(unsigned char) from audio.o, size 20, align 4
          input section .text.resetTimer1() from menus.o, size 20, align 4
          input section .text.displayNext() from menus.o, size 20, align 4
          input section .text.clearMixes() from templates.o, size 20, align 4
          input section .text.audioEvent(unsigned char, unsigned short) from audio.o, size 20, align 4
          input section .text.DisableGIO from BoardI6.o, size 20, align 4
          input section .rodata.CROSSFIRE_BAUDRATES from crossfire.o, size 20, align 4
          input section .init._start from SEGGER_THUMB_Startup.o, size 20, align 4
          input section .text.rw_0 from BoardI6.o, size 16, align 4
          input section .text.rs_1 from BoardI6.o, size 16, align 4
          input section .text.rs_0 from BoardI6.o, size 16, align 4
          input section .text.rd_1 from BoardI6.o, size 16, align 4
          input section .text.rd_0 from BoardI6.o, size 16, align 4
          input section .text.CS_STATE(unsigned char) from er9x.o, size 16, align 4
          input section .text.lcdSetContrast() from lcd.o, size 16, align 4
          input section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o, size 16, align 4
          input section .text.mixaddress(unsigned char) from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_er9x.cpp from er9x.o, size 16, align 4
          input section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o, size 16, align 4
          input section .text.TX_RX_PutVal from BoardI6.o, size 16, align 4
          input section .text.GetPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.GetPPMOutState from BoardI6.o, size 16, align 4
          input section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o, size 16, align 4
          input section .text.Buzzer_SetVal from BoardI6.o, size 16, align 4
          input section .text.Buzzer_ClrVal from BoardI6.o, size 16, align 4
          input section .text.rst_1 from BoardI6.o, size 12, align 4
          input section .text.rst_0 from BoardI6.o, size 12, align 4
          input section .text.cs_0 from BoardI6.o, size 12, align 4
          input section .text.backlight_on from BoardI6.o, size 12, align 4
          input section .text.backlight_off from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_on from BoardI6.o, size 12, align 4
          input section .text.a7105_csn_off from BoardI6.o, size 12, align 4
          input section .text.SX127xHal::SX127xHal() from SX127xHal.o, size 12, align 4
          input section .text.get_tmr10ms() from er9x.o, size 12, align 4
          input section .text.SetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.RF1_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF1_ClrVal from BoardI6.o, size 12, align 4
          input section .text.RF0_SetVal from BoardI6.o, size 12, align 4
          input section .text.RF0_ClrVal from BoardI6.o, size 12, align 4
          input section .text.GetPPMTimCompare from BoardI6.o, size 12, align 4
          input section .text.GetPPMTimCapture from BoardI6.o, size 12, align 4
          input section .text.EnablePRTTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMTim from BoardI6.o, size 12, align 4
          input section .text.EnablePPMOut from BoardI6.o, size 12, align 4
          input section .text.DisablePRTTim from BoardI6.o, size 12, align 4
          input section .text.DisablePPMOut from BoardI6.o, size 12, align 4
          input section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o, size 258, align 2
          input section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o, size 224, align 2
          input section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o, size 132, align 2
          input section .text.intpol(short, unsigned char) from menus.o, size 116, align 2
          input section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o, size 114, align 2
          input section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o, size 108, align 2
          input section .rodata.VarioTab from Vario.o, size 100, align 2
          input section .text.telltale(unsigned char, signed char, signed char) from menus.o, size 90, align 2
          input section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 74, align 2
          input section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 70, align 2
          input section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o, size 66, align 2
          input section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o, size 66, align 2
          input section .text.libc.__aeabi_idivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 64, align 2
          input section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o, size 62, align 2
          input section .text.libc.__int32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 60, align 2
          input section .text.expo(short, short) from menus.o, size 60, align 2
          input section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o, size 56, align 2
          input section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o, size 52, align 2
          input section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 50, align 2
          input section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o, size 46, align 2
          input section .text.A7105_WriteID(unsigned int) from A7105_SPI.o, size 44, align 2
          input section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o, size 44, align 2
          input section .text.libc.__aeabi_uidivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 42, align 2
          input section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 42, align 2
          input section .text.libc.__uint32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 40, align 2
          input section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o, size 40, align 2
          input section .text.A7105_Reset() from A7105_SPI.o, size 40, align 2
          input section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o, size 38, align 2
          input section .text.libc.div from libc2.o (libc_v6m_t_le_eabi_small.a), size 36, align 2
          input section .text.libc.__int64_lsr from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 36, align 2
          input section .text.libc.__int64_lsl from libc_asm.o (libc_v6m_t_le_eabi_small.a), size 36, align 2
          input section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o, size 36, align 2
          input section .text.libc.memmove from libc2.o (libc_v6m_t_le_eabi_small.a), size 34, align 2
          input section .text.expou(unsigned short, unsigned short) from menus.o, size 34, align 2
          input section .text.getCurrentSwitchStates() from er9x.o, size 34, align 2
          input section .text.lcdSendCtl(unsigned char) from lcd.o, size 32, align 2
          input section .text.stickMoveValue() from er9x.o, size 32, align 2
          input section .text.libc.memcmp from libc2.o (libc_v6m_t_le_eabi_small.a), size 30, align 2
          input section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o, size 30, align 2
          input section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 28, align 2
          input section .text.validateName(char*, unsigned char) from pers.o, size 28, align 2
          input section .text.voiceMinutes(short) from menus.o, size 28, align 2
          input section .text.A7105_Strobe(unsigned char) from A7105_SPI.o, size 28, align 2
          input section .text.serialVoiceWaitByte(unsigned char) from menus.o, size 26, align 2
          input section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o, size 26, align 2
          input section .text.StubbornSender::ResetState() from stubborn_sender.o, size 24, align 2
          input section .text.EeFsRead(unsigned char, unsigned char) from file.o, size 24, align 2
          input section .text.libc.memcpy from libc2_asm.o (libc_v6m_t_le_eabi_small.a), size 22, align 2
          input section .text.EeFsSetLink(unsigned char, unsigned char) from file.o, size 22, align 2
          input section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o, size 22, align 2
          input section .text.calc100toRESX(signed char) from er9x.o, size 22, align 2
          input section .text.libc.__aeabi_memset from libc2_asm.o (libc_v6m_t_le_eabi_small.a), size 20, align 2
          input section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o, size 20, align 2
          input section .text.setNameP(char*, char const*) from pers.o, size 20, align 2
          input section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o, size 20, align 2
          input section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o, size 20, align 2
          input section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o, size 18, align 2
          input section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o, size 18, align 2
          input section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.TITLEP(char const*) from menus.o, size 16, align 2
          input section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o, size 16, align 2
          input section .text.calc1000toRESX(short) from er9x.o, size 16, align 2
          input section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o, size 16, align 2
          input section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o, size 16, align 2
          input section .text.getTrimValue(unsigned char, unsigned char) from er9x.o, size 16, align 2
          input section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o, size 16, align 2
          input section .text.A7105_Sleep() from A7105_SPI.o, size 16, align 2
          input section .text.main from main.o, size 14, align 2
          input section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o, size 14, align 2
          input section .text.brSubHead(char const*) from menus.o, size 14, align 2
          input section .text.message(char const*) from er9x.o, size 14, align 2
          input section .text.keyDown() from er9x.o, size 14, align 2
          input section .text.putVoiceQueueUpper(unsigned char) from er9x.o, size 14, align 2
          input section .text.REG100_100(signed char) from er9x.o, size 14, align 2
          input section .text.switchPosition(unsigned char) from drivers.o, size 12, align 2
          input section .text.eeModelExists(unsigned char) from pers.o, size 12, align 2
          input section .text.getSwitch00(signed char) from er9x.o, size 12, align 2
          input section .text.EeFsGetLink(unsigned char) from file.o, size 10, align 2
          input section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o, size 10, align 2
          input section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o, size 10, align 2
          input section .text.alert(char const*) from er9x.o, size 10, align 2
          input section .text.resetTimer2() from menus.o, size 10, align 2
          input section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o, size 10, align 2
          input section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o, size 10, align 2
          input section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o, size 10, align 2
          input section .text.audioQueue::busy() from audio.o, size 8, align 2
          input section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o, size 8, align 2
          input section .text.putVoiceQueue(unsigned char) from er9x.o, size 8, align 2
          input section .text.sei from BoardI6.o, size 4, align 2
          input section .text.cli from BoardI6.o, size 4, align 2
          input section .text.telemItemValid(unsigned char) from menus.o, size 4, align 2
          input section .text.audioQueue::audioQueue() from audio.o, size 2, align 2
          input section .text.serialVoiceBlockSend(unsigned char*, unsigned char) from menus.o, size 2, align 2
          input section .text.stopSerialVoice() from drivers.o, size 2, align 2
          input section .rodata.font_dblsize from lcd.o, size 1380, align 1
          input section .rodata.font from lcd.o, size 495, align 1
          input section .rodata.crc8tab from crc_crsf.o, size 256, align 1
          input section .rodata.Str_telemItems from menus.o, size 238, align 1
          input section .rodata.Str_Chans_Gv from menus.o, size 166, align 1
          input section .rodata..L.str.13 from menus.o, size 125, align 1
          input section .rodata.Str_Cswitch from menus.o, size 114, align 1
          input section .rodata.Str_Sounds from menus.o, size 98, align 1
          input section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o, size 88, align 1
          input section .rodata..L.str.68 from menus.o, size 82, align 1
          input section .rodata..L.str.62 from menus.o, size 76, align 1
          input section .rodata.sticks from menus.o, size 75, align 1
          input section .rodata..L.str.128 from menus.o, size 75, align 1
          input section .rodata.Curve_Str from menus.o, size 74, align 1
          input section .rodata..L.str.123 from menus.o, size 71, align 1
          input section .rodata.s_charTab from menus.o, size 67, align 1
          input section .rodata.Str_Switches from er9x.o, size 65, align 1
          input section .rodata..L.str.4 from menus.o, size 65, align 1
          input section .rodata..L.str.8 from menus.o, size 63, align 1
          input section .rodata.Str_Main_Popup from menus.o, size 58, align 1
          input section .rodata.TelemIndex from menus.o, size 58, align 1
          input section .rodata..L.str.65 from menus.o, size 54, align 1
          input section .rodata.ModelPopList from menus.o, size 53, align 1
          input section .rodata..L.str.121 from menus.o, size 53, align 1
          input section .rodata..L.str.125 from menus.o, size 52, align 1
          input section .rodata.AFHDS_A7105_regs from BoardI6.o, size 50, align 1
          input section .rodata.AFHDS2A_A7105_regs from BoardI6.o, size 50, align 1
          input section .rodata..L.str.118 from menus.o, size 50, align 1
          input section .rodata..L.str.67 from menus.o, size 46, align 1
          input section .rodata..L.str.64 from menus.o, size 46, align 1
          input section .rodata..L.str.18 from menus.o, size 46, align 1
          input section .rodata..L.str.133 from menus.o, size 43, align 1
          input section .rodata..L.str.13 from er9x.o, size 43, align 1
          input section .rodata..L.str.109 from menus.o, size 43, align 1
          input section .rodata.UnitsString from menus.o, size 42, align 1
          input section .rodata.Stamps from stamp.o, size 42, align 1
          input section .rodata.Str_Gv_Source from menus.o, size 41, align 1
          input section .rodata..L.str.87 from menus.o, size 41, align 1
          input section .rodata..L.str.63 from menus.o, size 40, align 1
          input section .rodata.MixPopList from menus.o, size 39, align 1
          input section .rodata..L.str.115 from menus.o, size 38, align 1
          input section .rodata..L.str.88 from menus.o, size 37, align 1
          input section .rodata..L.str.6 from er9x.o, size 37, align 1
          input section .rodata..L.str.126 from menus.o, size 34, align 1
          input section .rodata..L.str.5 from er9x.o, size 33, align 1
          input section .rodata.AFHDS_tx_channels from AFHDS.o, size 32, align 1
          input section .rodata..L.str.91 from menus.o, size 32, align 1
          input section .rodata..L.str.74 from menus.o, size 32, align 1
          input section .rodata..L.str.131 from menus.o, size 32, align 1
          input section .rodata.SW_3_IDX from menus.o, size 30, align 1
          input section .rodata..L.str.29 from menus.o, size 30, align 1
          input section .rodata..L.str.119 from menus.o, size 30, align 1
          input section .rodata..L.str.110 from menus.o, size 30, align 1
          input section .rodata..L.str.7 from menus.o, size 28, align 1
          input section .rodata..L.str.17 from menus.o, size 28, align 1
          input section .rodata..L.str.122 from menus.o, size 28, align 1
          input section .rodata..L.str.102 from menus.o, size 27, align 1
          input section .rodata..L.str.70 from menus.o, size 26, align 1
          input section .rodata..L.str.19 from menus.o, size 25, align 1
          input section .rodata.bchout_ar from er9x.o, size 24, align 1
          input section .rodata..L.str.134 from menus.o, size 24, align 1
          input section .rodata..L.str.129 from menus.o, size 24, align 1
          input section .rodata..L.str.45 from menus.o, size 23, align 1
          input section .rodata.Str_On_Off_Both from menus.o, size 22, align 1
          input section .rodata..L.str.94 from menus.o, size 22, align 1
          input section .rodata..L.str.92 from menus.o, size 22, align 1
          input section .rodata..L.str.2 from er9x.o, size 22, align 1
          input section .rodata..L.str.2 from pers.o, size 21, align 1
          input section .rodata..L.str.60 from menus.o, size 20, align 1
          input section .rodata..L.str.6 from menus.o, size 20, align 1
          input section .rodata..L.str.117 from menus.o, size 20, align 1
          input section .rodata..L.str.55 from menus.o, size 19, align 1
          input section .rodata..L.str.44 from menus.o, size 19, align 1
          input section .rodata..L.str.3 from pers.o, size 19, align 1
          input section .rodata.modi12x3 from er9x.o, size 18, align 1
          input section .rodata..L.str.85 from menus.o, size 18, align 1
          input section .rodata..L.str.5 from pers.o, size 18, align 1
          input section .rodata..L.str.27 from menus.o, size 18, align 1
          input section .rodata..L.str.25 from menus.o, size 18, align 1
          input section .rodata.menuWhenDone from menus.o, size 17, align 1
          input section .rodata..L.str.83 from menus.o, size 17, align 1
          input section .rodata..L.str.66 from menus.o, size 17, align 1
          input section .rodata..L.str.57 from menus.o, size 17, align 1
          input section .rodata..L.str.54 from menus.o, size 17, align 1
          input section .rodata..L.str.50 from menus.o, size 17, align 1
          input section .rodata..L.str.20 from menus.o, size 17, align 1
          input section .rodata..L.str.137 from menus.o, size 17, align 1
          input section .rodata..L.str.135 from menus.o, size 17, align 1
          input section .rodata..L.str.120 from menus.o, size 17, align 1
          input section .rodata.stickScramble from er9x.o, size 16, align 1
          input section .rodata.Str_EEPROM_Overflow from pers.o, size 16, align 1
          input section .rodata..L.str.90 from menus.o, size 16, align 1
          input section .rodata..L.str.78 from menus.o, size 16, align 1
          input section .rodata..L.str.4 from pers.o, size 16, align 1
          input section .rodata..L.str.23 from menus.o, size 16, align 1
          input section .rodata..L.str.139 from menus.o, size 16, align 1
          input section .rodata..L.str.138 from menus.o, size 16, align 1
          input section .rodata..L.str.124 from menus.o, size 16, align 1
          input section .rodata..L.str.12 from er9x.o, size 16, align 1
          input section .rodata.Str_Beep_Countdown from menus.o, size 15, align 1
          input section .rodata.csTypeTable from er9x.o, size 15, align 1
          input section .rodata..L.str.6 from pers.o, size 15, align 1
          input section .rodata..L.str.5 from menus.o, size 15, align 1
          input section .rodata..L.str.14 from menus.o, size 15, align 1
          input section .rodata..L.str.132 from menus.o, size 15, align 1
          input section .rodata..L.str.112 from menus.o, size 15, align 1
          input section .rodata..L.str.11 from er9x.o, size 15, align 1
          input section .rodata..L.str.106 from menus.o, size 15, align 1
          input section .rodata..L.str.9 from menus.o, size 14, align 1
          input section .rodata..L.str.84 from menus.o, size 14, align 1
          input section .rodata..L.str.69 from menus.o, size 14, align 1
          input section .rodata..L.str.3 from er9x.o, size 14, align 1
          input section .rodata..L.str.116 from menus.o, size 14, align 1
          input section .rodata..L.str.103 from menus.o, size 14, align 1
          input section .rodata..L.str.79 from menus.o, size 13, align 1
          input section .rodata..L.str.7 from er9x.o, size 13, align 1
          input section .rodata..L.str.24 from menus.o, size 13, align 1
          input section .rodata..L.str from er9x.o, size 13, align 1
          input section .rodata.Lcdinit from lcd.o, size 12, align 1
          input section .rodata.Str_minute_Beep from menus.o, size 12, align 1
          input section .rodata.Str_Calibration from menus.o, size 12, align 1
          input section .rodata.Str_AudioHaptic from menus.o, size 12, align 1
          input section .rodata..L.str.93 from menus.o, size 12, align 1
          input section .rodata..L.str.86 from menus.o, size 12, align 1
          input section .rodata..L.str.72 from menus.o, size 12, align 1
          input section .rodata..L.str.38 from menus.o, size 12, align 1
          input section .rodata..L.str.21 from menus.o, size 12, align 1
          input section .rodata..L.str.130 from menus.o, size 12, align 1
          input section .rodata.Str_heli_setup from menus.o, size 11, align 1
          input section .rodata.Str_Cswitches from menus.o, size 11, align 1
          input section .rodata.Str_Globals from menus.o, size 11, align 1
          input section .rodata.Str_Safety from menus.o, size 11, align 1
          input section .rodata..L.str.95 from menus.o, size 11, align 1
          input section .rodata..L.str.9 from er9x.o, size 11, align 1
          input section .rodata..L.str.80 from menus.o, size 11, align 1
          input section .rodata..L.str.56 from menus.o, size 11, align 1
          input section .rodata..L.str.107 from menus.o, size 11, align 1
          input section .rodata..L.str.1 from pers.o, size 11, align 1
          input section .rodata..L.str from pers.o, size 11, align 1
          input section .rodata.Str_Telemetry from menus.o, size 10, align 1
          input section .rodata.Str_DiagSwtch from menus.o, size 10, align 1
          input section .rodata.Str_TRE012AG from menus.o, size 10, align 1
          input section .rodata..L.str.97 from menus.o, size 10, align 1
          input section .rodata..L.str.71 from menus.o, size 10, align 1
          input section .rodata..L.str.39 from menus.o, size 10, align 1
          input section .rodata..L.str.34 from menus.o, size 10, align 1
          input section .rodata..L.str.12 from menus.o, size 10, align 1
          input section .rodata..L.str.113 from menus.o, size 10, align 1
          input section .rodata..L.str from menus.o, size 10, align 1
          input section .rodata.Str_Protocol from menus.o, size 9, align 1
          input section .rodata.Str_Hardware from menus.o, size 9, align 1
          input section .rodata.Str_Controls from menus.o, size 9, align 1
          input section .rodata..L.str.8 from er9x.o, size 9, align 1
          input section .rodata..L.str.61 from menus.o, size 9, align 1
          input section .rodata..L.str.43 from menus.o, size 9, align 1
          input section .rodata..L.str.40 from menus.o, size 9, align 1
          input section .rodata..L.str.36 from menus.o, size 9, align 1
          input section .rodata..L.str.26 from menus.o, size 9, align 1
          input section .rodata..L.str.114 from menus.o, size 9, align 1
          input section .rodata..L.str.105 from menus.o, size 9, align 1
          input section .rodata..L.str.104 from menus.o, size 9, align 1
          input section .rodata..L.str.100 from menus.o, size 9, align 1
          input section .rodata..L.str.10 from menus.o, size 9, align 1
          input section .rodata.per10ms()::crossTrim from drivers.o, size 8, align 1
          input section .rodata.UnitsText from menus.o, size 8, align 1
          input section .rodata._bitmask from lcd.o, size 8, align 1
          input section .rodata.Str_Expo from menus.o, size 8, align 1
          input section .rodata.rate from er9x.o, size 8, align 1
          input section .rodata.Str_Version from menus.o, size 8, align 1
          input section .rodata.Str_Trainer from menus.o, size 8, align 1
          input section .rodata.Str_General from menus.o, size 8, align 1
          input section .rodata.Str_Display from menus.o, size 8, align 1
          input section .rodata.Str_DiagAna from menus.o, size 8, align 1
          input section .rodata.UnitsVoice from menus.o, size 8, align 1
          input section .rodata..L.str.82 from menus.o, size 8, align 1
          input section .rodata..L.str.75 from menus.o, size 8, align 1
          input section .rodata..L.str.4 from er9x.o, size 8, align 1
          input section .rodata..L.str.33 from menus.o, size 8, align 1
          input section .rodata..L.str.32 from menus.o, size 8, align 1
          input section .rodata..L.str.28 from menus.o, size 8, align 1
          input section .rodata..L.str.127 from menus.o, size 8, align 1
          input section .rodata..L.str.101 from menus.o, size 8, align 1
          input section .rodata.Str_Alert from er9x.o, size 7, align 1
          input section .rodata.ChannelToPin from BoardI6.o, size 7, align 1
          input section .rodata.Str_limits from menus.o, size 7, align 1
          input section .rodata.Str_Curves from menus.o, size 7, align 1
          input section .rodata.Str_Alarms from menus.o, size 7, align 1
          input section .rodata..L.str.96 from menus.o, size 7, align 1
          input section .rodata..L.str.77 from menus.o, size 7, align 1
          input section .rodata..L.str.37 from menus.o, size 7, align 1
          input section .rodata..L.str.35 from menus.o, size 7, align 1
          input section .rodata..L.str.31 from menus.o, size 7, align 1
          input section .rodata..L.str.10 from er9x.o, size 7, align 1
          input section .rodata..L.str.1 from menus.o, size 7, align 1
          input section .rodata.Str_Timer from menus.o, size 6, align 1
          input section .rodata.Str_Modes from menus.o, size 6, align 1
          input section .rodata.Str_Mixer from menus.o, size 6, align 1
          input section .rodata.Str_Curve from menus.o, size 6, align 1
          input section .rodata.Str_1_RETA from menus.o, size 6, align 1
          input section .rodata..L.str.98 from menus.o, size 6, align 1
          input section .rodata..L.str.41 from menus.o, size 6, align 1
          input section .rodata..L.str.16 from menus.o, size 6, align 1
          input section .rodata..L.str.15 from menus.o, size 6, align 1
          input section .rodata..L.str.108 from menus.o, size 6, align 1
          input section .rodata.Str_Name from menus.o, size 5, align 1
          input section .rodata.CROSSFIRE_PERIODS from crossfire.o, size 5, align 1
          input section .rodata.Str_Hyphens from er9x.o, size 5, align 1
          input section .rodata..L.str.89 from menus.o, size 5, align 1
          input section .rodata..L.str.73 from menus.o, size 5, align 1
          input section .rodata..L.str.51 from menus.o, size 5, align 1
          input section .rodata..L.str.49 from menus.o, size 5, align 1
          input section .rodata..L.str.48 from menus.o, size 5, align 1
          input section .rodata..L.str.42 from menus.o, size 5, align 1
          input section .rodata..L.str.3 from menus.o, size 5, align 1
          input section .rodata..L.str.22 from menus.o, size 5, align 1
          input section .rodata.menuProc0(unsigned char)::xt from menus.o, size 4, align 1
          input section .rodata.Str_ON from er9x.o, size 4, align 1
          input section .rodata.Str_OFF from er9x.o, size 4, align 1
          input section .rodata..L.str.81 from menus.o, size 4, align 1
          input section .rodata..L.str.76 from menus.o, size 4, align 1
          input section .rodata..L.str.53 from menus.o, size 4, align 1
          input section .rodata..L.str.52 from menus.o, size 4, align 1
          input section .rodata..L.str.47 from menus.o, size 4, align 1
          input section .rodata..L.str.46 from menus.o, size 4, align 1
          input section .rodata..L.str.30 from menus.o, size 4, align 1
          input section .rodata..L.str.136 from menus.o, size 4, align 1
          input section .rodata..L.str.111 from menus.o, size 4, align 1
          input section .rodata..L.str.1 from er9x.o, size 4, align 1
          input section .rodata.Str_SC from menus.o, size 3, align 1
          input section .rodata.Str_GV from menus.o, size 3, align 1
          input section .rodata..L.str.99 from menus.o, size 3, align 1
          input section .rodata..L.str.59 from menus.o, size 3, align 1
          input section .rodata..L.str.58 from menus.o, size 3, align 1
          input section .rodata..L.str.2 from menus.o, size 3, align 1
          input section .rodata..L.str.11 from menus.o, size 3, align 1
          input block exidx from [ Linker created ], size 0, align 1
          input block dtors from [ Linker created ], size 0, align 1
          input block ctors from [ Linker created ], size 12, align 4
      place in [0x00000000 to 0x0000ffff] with auto order
          input block tdata_load from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block tls from [ Linker created ], size 0, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o, size 8, align 8
          input section .bss.DisplayBuf from lcd.o, size 1024, align 4
          input section .bss.Output from menus.o, size 256, align 4
          input section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o, size 172, align 4
          input section .bss.Fade from menus.o, size 80, align 4
          input section .bss.eeFs from file.o, size 64, align 4
          input section .bss.Radio from ELRS.o, size 48, align 4
          input section .bss.packet from A7105_SPI.o, size 40, align 4
          input section .bss.g_menuStack from er9x.o, size 20, align 4
          input section .bss.WorkBuff from Vario.o, size 16, align 4
          input section .bss.MspSender from ELRS.o, size 16, align 4
          input section .bss.LoadBuff from Vario.o, size 16, align 4
          input section .bss.i2c_buffer from drivers.o, size 12, align 4
          input section .bss.moduleSyncStatus from crossfire.o, size 12, align 4
          input section .bss.TelemetryReceiver from ELRS.o, size 12, align 4
          input section .bss.LQCalc from ELRS.o, size 12, align 4
          input section .bss.telemetryErrors from crossfire.o, size 4, align 4
          input section .bss.hal from SX127x.o, size 4, align 4
          input section .bss.g_tmr10ms from drivers.o, size 4, align 4
          input section .bss.crossfireTelemetryCallback from crossfire.o, size 4, align 4
          input section .bss.perMain()::lastTMR from er9x.o, size 4, align 4
          input section .bss.Vario_driver()::toneCounter from Vario.o, size 4, align 4
          input section .bss.SX127xHal::instance from SX127xHal.o, size 4, align 4
          input section .bss.SX127xDriver::instance from SX127x.o, size 4, align 4
          input section .bss.g_crsf_read_callback from BoardI6.o, size 4, align 4
          input section .bss.SPI_BufferPtr from BoardI6.o, size 4, align 4
          input section .bss.ID from A7105_SPI.o, size 4, align 4
          input section .bss.AlertMessage from er9x.o, size 4, align 4
          input section .bss.ota_crc from ELRS.o, size 514, align 2
          input section .bss.pulses2MHz from pulses.o, size 144, align 2
          input section .bss.Xmem from menus.o, size 106, align 2
          input section .bss.Voice from audio.o, size 52, align 2
          input section .bss.s_timer from menus.o, size 32, align 2
          input section .bss.g_chans512 from menus.o, size 32, align 2
          input section .bss.Ex_chans from menus.o, size 32, align 2
          input section .bss.CsTimer from er9x.o, size 24, align 2
          input section .bss.s_anaFilt from er9x.o, size 16, align 2
          input section .bss.g_ppmIns from er9x.o, size 16, align 2
          input section .bss.Nvs_timer from er9x.o, size 16, align 2
          input section .bss.calibratedStick from menus.o, size 14, align 2
          input section .bss.theWriteFile from pers.o, size 10, align 2
          input section .bss.theFile from pers.o, size 10, align 2
          input section .bss.P1values from er9x.o, size 10, align 2
          input section .bss.TimeGlobals from menus.o, size 8, align 2
          input section .bss.Inactivity from er9x.o, size 6, align 2
          input section .bss.tmrEEPROM from er9x.o, size 2, align 2
          input section .bss.g_tmr16KHz from er9x.o, size 2, align 2
          input section .bss.g_latency from menus.o, size 2, align 2
          input section .bss.g_LightOffCounter from er9x.o, size 2, align 2
          input section .bss.trace()::s_time from menus.o, size 2, align 2
          input section .bss.ISR_TIMER3_CAPT_vect::lastCapt from er9x.o, size 2, align 2
          input section .bss.menuBackupRestore(unsigned char)::count from menus.o, size 2, align 2
          input section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.mainSequence()::timer from er9x.o, size 2, align 2
          input section .bss.s_eeDirtyTime10ms from pers.o, size 2, align 2
          input section .bss.SPI_Size from BoardI6.o, size 2, align 2
          input section .bss.GAltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.B3_comp_value from pulses.o, size 2, align 2
          input section .bss.AltOffset from AFHDS2A_a7105.o, size 2, align 2
          input section .bss.g_model from er9x.o, size 1000, align 1
          input section .bss.telemetryRxBuffer from crossfire.o, size 128, align 1
          input section .bss.g_eeGeneral from er9x.o, size 118, align 1
          input section .bss.g_crossfire from crossfire.o, size 65, align 1
          input section .bss.audio from er9x.o, size 56, align 1
          input section .bss.keys from drivers.o, size 45, align 1
          input section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o, size 43, align 1
          input section .bss.SvFifo from drivers.o, size 18, align 1
          input section .bss.outputTelemetryBuffer from crossfire.o, size 16, align 1
          input section .bss.hopping_frequency from A7105_SPI.o, size 16, align 1
          input section .bss.Last_switch from er9x.o, size 12, align 1
          input section .bss.TimerConfig from er9x.o, size 10, align 1
          input section .bss.Rotary from er9x.o, size 9, align 1
          input section .bss.Nvs_state from er9x.o, size 8, align 1
          input section .bss.phyStick from menus.o, size 4, align 1
          input section .bss.PopupData from menus.o, size 4, align 1
          input section .bss.g_crsf_config from crossfire.o, size 3, align 1
          input section .bss.MenuControl from menus.o, size 3, align 1
          input section .bss.tick10ms from er9x.o, size 1, align 1
          input section .bss.telemetryRxBufferCount from crossfire.o, size 1, align 1
          input section .bss.sysFlags from er9x.o, size 1, align 1
          input section .bss.stickMoved from er9x.o, size 1, align 1
          input section .bss.serialDat0 from pulses.o, size 1, align 1
          input section .bss.scroll_disabled from menus.o, size 1, align 1
          input section .bss.scrollUD from menus.o, size 1, align 1
          input section .bss.scrollLR from menus.o, size 1, align 1
          input section .bss.s_pgOfs from menus.o, size 1, align 1
          input section .bss.s_noHi from menus.o, size 1, align 1
          input section .bss.s_moveMode from menus.o, size 1, align 1
          input section .bss.s_mixMaxSel from menus.o, size 1, align 1
          input section .bss.s_evt from drivers.o, size 1, align 1
          input section .bss.s_editing from menus.o, size 1, align 1
          input section .bss.s_editMode from menus.o, size 1, align 1
          input section .bss.pxxFlag from pulses.o, size 1, align 1
          input section .bss.protocol_flags from A7105_SPI.o, size 1, align 1
          input section .bss.ppmInState from er9x.o, size 1, align 1
          input section .bss.ppmInAvailable from er9x.o, size 1, align 1
          input section .bss.plotType from lcd.o, size 1, align 1
          input section .bss.packet_count from A7105_SPI.o, size 1, align 1
          input section .bss.outputTelemetryBufferTrigger from crossfire.o, size 1, align 1
          input section .bss.outputTelemetryBufferSize from crossfire.o, size 1, align 1
          input section .bss.mixToDelete from menus.o, size 1, align 1
          input section .bss.hopping_frequency_no from A7105_SPI.o, size 1, align 1
          input section .bss.heartbeat from pulses.o, size 1, align 1
          input section .bss.g_vbat100mV from er9x.o, size 1, align 1
          input section .bss.g_posHorz from menus.o, size 1, align 1
          input section .bss.g_menuStackPtr from er9x.o, size 1, align 1
          input section .bss.g_blinkTmr10ms from drivers.o, size 1, align 1
          input section .bss.bpanaCenter from menus.o, size 1, align 1
          input section .bss.bind_phase from A7105_SPI.o, size 1, align 1
          input section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o, size 1, align 1
          input section .bss.audioQueue::driver()::toneCounter from er9x.o, size 1, align 1
          input section .bss.perMain()::repeater from er9x.o, size 1, align 1
          input section .bss.perMain()::alertKey from er9x.o, size 1, align 1
          input section .bss.perMain()::s_batCheck from er9x.o, size 1, align 1
          input section .bss.menuProc0(unsigned char)::trimSwLock from menus.o, size 1, align 1
          input section .bss.per10ms()::current from drivers.o, size 1, align 1
          input section .bss.perOut(short*, unsigned char)::sticky from menus.o, size 1, align 1
          input section .bss.check_backlight_voice()::tmr10ms from er9x.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o, size 1, align 1
          input section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuBackupRestore(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o, size 1, align 1
          input section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.A7105_AntSwitch()::sw from A7105_SPI.o, size 1, align 1
          input section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuRangeBind(unsigned char)::timer from menus.o, size 1, align 1
          input section .bss.menuProcIndex(unsigned char)::mstate from menus.o, size 1, align 1
          input section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o, size 1, align 1
          input section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o, size 1, align 1
          input section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.menuProcMix(unsigned char)::mstate2 from menus.o, size 1, align 1
          input section .bss.s_currIdx from menus.o, size 1, align 1
          input section .bss.Columns from menus.o, size 1, align 1
          input section .bss.inputs_subview from menus.o, size 1, align 1
          input section .bss.s_eeLongTimer from pers.o, size 1, align 1
          input section .bss.LongMenuTimer from er9x.o, size 1, align 1
          input section .bss.s_moveMixIdx from menus.o, size 1, align 1
          input section .bss.s_eeDirtyMsk from pers.o, size 1, align 1
          input section .bss.s_currMixIdx from menus.o, size 1, align 1
          input section .bss.s_currDestCh from menus.o, size 1, align 1
          input section .bss.s_curveChan from menus.o, size 1, align 1
          input section .bss.IlinesCount from menus.o, size 1, align 1
          input section .bss.s_expoChan from menus.o, size 1, align 1
          input section .bss.VarioPlay from Vario.o, size 1, align 1
          input section .bss.ThrottleStickyOn from menus.o, size 1, align 1
          input section .bss.Tevent from er9x.o, size 1, align 1
          input section .bss.SystemOptions from er9x.o, size 1, align 1
          input section .bss.StickScrollTimer from er9x.o, size 1, align 1
          input section .bss.StickScrollAllowed from er9x.o, size 1, align 1
          input section .bss.StepSize from er9x.o, size 1, align 1
          input section .bss.RotaryState from menus.o, size 1, align 1
          input section .bss.RadioState from A7105_SPI.o, size 1, align 1
          input section .bss.RadioActive from pulses.o, size 1, align 1
          input section .bss.PausePulses from pulses.o, size 1, align 1
          input section .bss.Main_running from er9x.o, size 1, align 1
          input section .bss.M_longMenuTimer from menus.o, size 1, align 1
          input section .bss.Lcd_lastPos from lcd.o, size 1, align 1
          input section .bss.LcdLock from lcd.o, size 1, align 1
          input section .bss.InverseBlink from menus.o, size 1, align 1
          input section .bss.EnterMenu from er9x.o, size 1, align 1
          input section .bss.EepromActive from lcd.o, size 1, align 1
          input section .bss.Ee_lock from pers.o, size 1, align 1
          input section .bss.EditType from menus.o, size 1, align 1
          input section .bss.EditColumns from menus.o, size 1, align 1
          input section .bss.DupSub from menus.o, size 1, align 1
          input section .bss.DupIfNonzero from menus.o, size 1, align 1
          input section .bss.Current_protocol from pulses.o, size 1, align 1
          input section .bss.CurrentVolume from er9x.o, size 1, align 1
          input section .bss.CurrentPhase from menus.o, size 1, align 1
          input section .bss.CalcScaleNest from menus.o, size 1, align 1
          input section .bss.Backup_RestoreRunning from er9x.o, size 1, align 1
          input section .data.g_crossfile_baudrate_index from crossfire.o, size 4, align 4
          input section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o, size 4, align 4
          input section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o, size 4, align 4
          input section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o, size 2, align 2
          input section .data.AlarmControl from er9x.o, size 4, align 1
          input section .data.prev_power from A7105_SPI.o, size 1, align 1
          input section .data.frskyUsrStreaming from A7105_SPI.o, size 1, align 1
      place in [0x1ffff800 to 0x200017ff] with auto order
          input block heap from [ Linker created ], size 256, align 8


***************************************************************************************
***                                                                                 ***
***                                    Placement                                    ***
***                                                                                 ***
***************************************************************************************

  Executing place at [0x00000000 to 0x000000bf] for 'place at start' block <#5> at line 97, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#5> at line 97, col 45
          Inputs to block vectors
              Allocate [0x00000000 to 0x000000bf] to section .vectors from MKL16Z4_Vectors.o
          Allocate [0x00000000 to 0x000000bf] to block vectors from [ Linker created ]
  Executing place at [0x00000400 to 0x0000040f] for 'place at start' block <#6> at line 98, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#6> at line 98, col 45
          Inputs to block cfm
              Allocate [0x00000400 to 0x0000040f] to section .cfm from MKL16Z4_Vectors.o
          Allocate [0x00000400 to 0x0000040f] to block cfm from [ Linker created ]
  Executing place at [0x1ffff800 size 0] for 'place at start' block <#10> at line 119, col 45 (1 inputs selected)
      Inputs to 'place at start' block <#10> at line 119, col 45
          Allocate [0x1ffff800 size 0] to block vectors_ram from [ Linker created ]
  Executing place at [0x20001700 to 0x200017ff] for 'place at end' block <#14> at line 129, col 45 (1 inputs selected)
      Inputs to 'place at end' block <#14> at line 129, col 45
          Allocate [0x20001700 to 0x200017ff] to block stack from [ Linker created ]
  Executing place in [0x000000c0 to 0x000003ff] + [0x00000410 to 0x0000ffff] (623 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x00000410 to 0x000014c3] to section .text.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x000014c4 to 0x00002153] to section .text.menuProcIndex(unsigned char) from menus.o
      Allocate [0x00002154 to 0x00002d1b] to section .text.perOut(short*, unsigned char) from menus.o
      Allocate [0x00002d1c to 0x000034fb] to section .text.mainSequence() from er9x.o
      Allocate [0x000034fc to 0x00003c63] to section .text.menuProc0(unsigned char) from menus.o
      Allocate [0x00003c64 to 0x00004133] to section .text.menuProcMixOne(unsigned char) from menus.o
      Allocate [0x00004134 to 0x000045ff] to section .text.menuProcProtocol(unsigned char) from menus.o
      Allocate [0x00004600 to 0x00004aa7] to section .text.menuProcMix(unsigned char) from menus.o
      Allocate [0x00004aa8 to 0x00004f0b] to section .text.menuProcVoiceOne(unsigned char) from menus.o
      Allocate [0x00004f0c to 0x000052e7] to section .text.ActionAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x000052e8 to 0x00005683] to section .text.HW_Init from BoardI6.o
      Allocate [0x000000c0 to 0x000003ff] to section .text.MState2::check_columns(unsigned char, unsigned char) from menus.o
      Allocate [0x00005684 to 0x000059c3] to section .text.menuProcModelSelect(unsigned char) from menus.o
      Allocate [0x000059c4 to 0x00005ce3] to section .text.timer() from menus.o
      Allocate [0x00005ce4 to 0x00005fef] to section .text.menuBackupRestore(unsigned char) from menus.o
      Allocate [0x00005ff0 to 0x000062e7] to section .text.audioQueue::event(unsigned char, unsigned char) from audio.o
      Allocate [0x000062e8 to 0x000065c3] to section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char) from er9x.o
      Allocate [0x000065c4 to 0x00006857] to section .text.menuScaleOne(unsigned char) from menus.o
      Allocate [0x00006858 to 0x00006a7f] to section .text.menuProcTelemetry(unsigned char) from menus.o
      Allocate [0x00006a80 to 0x00006c9f] to section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) from lcd.o
      Allocate [0x00006ca0 to 0x00006eb3] to section .text.mainER() from er9x.o
      Allocate [0x00006eb4 to 0x000070c7] to section .text.eeLoadModel(unsigned char) from pers.o
      Allocate [0x000070c8 to 0x000072af] to section .text.getSwitch(signed char, bool, unsigned char) from er9x.o
      Allocate [0x000072b0 to 0x00007497] to section .text.menuProcGlobals(unsigned char) from menus.o
      Allocate [0x00007498 to 0x0000767b] to section .text.menuPhaseOne(unsigned char) from menus.o
      Allocate [0x0000767c to 0x00007847] to section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) from menus.o
      Allocate [0x00007848 to 0x00007a0b] to section .text.menuSetFailsafe(unsigned char) from menus.o
      Allocate [0x00007a0c to 0x00007b9f] to section .text.processCrossfireTelemetryFrame() from crossfire.o
      Allocate [0x00007ba0 to 0x00007d27] to section .text.checkIncDec16(short, short, short, unsigned char) from er9x.o
      Allocate [0x00007d28 to 0x00007eaf] to section .text.perOutPhase(short*, unsigned char) from menus.o
      Allocate [0x00007eb0 to 0x0000800f] to section .text.i2c_master from BoardI6.o
      Allocate [0x00008010 to 0x0000816f] to section .text.eeCheck(bool) from pers.o
      Allocate [0x00008170 to 0x000082c7] to section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x000082c8 to 0x0000841b] to section .text.menuProcCurveOne(unsigned char) from menus.o
      Allocate [0x0000841c to 0x00008567] to section .text.processFlySkySensor(unsigned char const*, unsigned char) from AFHDS2A_a7105.o
      Allocate [0x00008568 to 0x000086af] to section .text.AFHDS2A_build_packet(unsigned char) from AFHDS2A_a7105.o
      Allocate [0x000086b0 to 0x000087f3] to section .text.doPopup(char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x000087f4 to 0x00008917] to section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) from lcd.o
      Allocate [0x00008918 to 0x00008a3b] to section .text.Vario_play(int, bool) from Vario.o
      Allocate [0x00008a3c to 0x00008b53] to section .text.menuProcVoiceAlarm(unsigned char) from menus.o
      Allocate [0x00008b54 to 0x00008c43] to section .text.menuModelPhases(unsigned char) from menus.o
      Allocate [0x00008c44 to 0x00008d2f] to section .text.setupPulsesPPM(unsigned char) from pulses.o
      Allocate [0x00008d30 to 0x00008e17] to section .text.per10ms() from drivers.o
      Allocate [0x00008e18 to 0x00008efb] to section .text.checkSwitches() from er9x.o
      Allocate [0x00008efc to 0x00008fd7] to section .text.voice_telem_item(unsigned char) from menus.o
      Allocate [0x00008fd8 to 0x000090af] to section .text.setStickCenter() from menus.o
      Allocate [0x000090b0 to 0x0000917b] to section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*) from menus.o
      Allocate [0x0000917c to 0x00009247] to section .text.A7105_Init() from A7105_SPI.o
      Allocate [0x00009248 to 0x0000930b] to section .text.EFile::write(unsigned char*, unsigned char) from file.o
      Allocate [0x0000930c to 0x000093cf] to section .text.Key::input(bool, EnumKeys) from drivers.o
      Allocate [0x000093d0 to 0x00009493] to section .text.setupPulses() from pulses.o
      Allocate [0x00009494 to 0x00009553] to section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) from audio.o
      Allocate [0x00009554 to 0x00009613] to section .text.menuProcStatistic(unsigned char) from menus.o
      Allocate [0x00009614 to 0x000096d3] to section .text.menuRXSetup(unsigned char) from menus.o
      Allocate [0x000096d4 to 0x0000978f] to section .text.calcExpo(unsigned char, short) from menus.o
      Allocate [0x00009790 to 0x00009847] to section .text.menuProcCurve(unsigned char) from menus.o
      Allocate [0x00009848 to 0x000098fb] to section .text.initAFHDS2A from AFHDS2A_a7105.o
      Allocate [0x000098fc to 0x000099af] to section .text.indexProcess(unsigned char, MState2*, unsigned char) from menus.o
      Allocate [0x000099b0 to 0x00009a5f] to section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) from menus.o
      Allocate [0x00009a60 to 0x00009b0f] to section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x00009b10 to 0x00009bbb] to section .text.ActionAFHDS from AFHDS.o
      Allocate [0x00009bbc to 0x00009c5f] to section .text.EeFsck() from file.o
      Allocate [0x00009c60 to 0x00009d03] to section .text.menuDeleteDupModel(unsigned char) from menus.o
      Allocate [0x00009d04 to 0x00009da7] to section .text.menuRangeBind(unsigned char) from menus.o
      Allocate [0x00009da8 to 0x00009e4b] to section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x00009e4c to 0x00009eeb] to section .text.drawFunction(unsigned char, unsigned char) from menus.o
      Allocate [0x00009eec to 0x00009f83] to section .text.ISR_TIMER3_CAPT_vect from er9x.o
      Allocate [0x00009f84 to 0x0000a017] to section .init.SystemInit from system_MKL16Z4.o
      Allocate [0x0000a018 to 0x0000a0a7] to section .text.initAFHDS from AFHDS.o
      Allocate [0x0000a0a8 to 0x0000a137] to section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char) from menus.o
      Allocate [0x0000a138 to 0x0000a1c3] to section .text.doMainScreenGrphics() from menus.o
      Allocate [0x0000a1c4 to 0x0000a24f] to section .text.refreshDiplay() from lcd.o
      Allocate [0x0000a250 to 0x0000a2db] to section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) from menus.o
      Allocate [0x0000a2dc to 0x0000a363] to section .text.singleBar(unsigned char, unsigned char, short) from menus.o
      Allocate [0x0000a364 to 0x0000a3eb] to section .text.drawCurve(unsigned char) from menus.o
      Allocate [0x0000a3ec to 0x0000a473] to section .text.keyState(EnumKeys) from drivers.o
      Allocate [0x0000a474 to 0x0000a4fb] to section .text.eeGeneralDefault() from pers.o
      Allocate [0x0000a4fc to 0x0000a583] to section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000a584 to 0x0000a603] to section .text.audioQueue::heartbeat() from audio.o
      Allocate [0x0000a604 to 0x0000a683] to section .text.createCrossfireChannelsFrame(unsigned char*, short*) from crossfire_output.o
      Allocate [0x0000a684 to 0x0000a703] to section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000a704 to 0x0000a77f] to section .text.scaleAnalog(short, unsigned char) from menus.o
      Allocate [0x0000a780 to 0x0000a7f7] to section .text.EFile::read(unsigned char*, unsigned short) from file.o
      Allocate [0x0000a7f8 to 0x0000a86f] to section .text.lcd_vline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000a870 to 0x0000a8e7] to section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000a8e8 to 0x0000a95f] to section .text.eeReadGeneral() from pers.o
      Allocate [0x0000a960 to 0x0000a9d3] to section .text.get_telemetry_value(unsigned char) from menus.o
      Allocate [0x0000a9d4 to 0x0000aa47] to section .text.getGvarSourceValue(unsigned char) from er9x.o
      Allocate [0x0000aa48 to 0x0000aab7] to section .text.insertMix(unsigned char, unsigned char) from menus.o
      Allocate [0x0000aab8 to 0x0000ab27] to section .text.getValue(unsigned char) from er9x.o
      Allocate [0x0000ab28 to 0x0000ab97] to section .text.alertx(char const*, bool) from er9x.o
      Allocate [0x0000ab98 to 0x0000ac07] to section .text.menuDeleteMix(unsigned char) from menus.o
      Allocate [0x0000ac08 to 0x0000ac73] to section .text.modelDefaultWrite(unsigned char) from pers.o
      Allocate [0x0000ac74 to 0x0000acdf] to section .text.SPI0_IRQHandler from BoardI6.o
      Allocate [0x0000ace0 to 0x0000ad47] to section .text.setup_crsf_serial_port from BoardI6.o
      Allocate [0x0000ad48 to 0x0000adaf] to section .text.eeDuplicateModel(unsigned char) from pers.o
      Allocate [0x0000adb0 to 0x0000ae17] to section .text.Vario_driver() from Vario.o
      Allocate [0x0000ae18 to 0x0000ae7b] to section .text.A7105_AdjustLOBaseFreq() from A7105_SPI.o
      Allocate [0x0000ae7c to 0x0000aedf] to section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) from lcd.o
      Allocate [0x0000aee0 to 0x0000af43] to section .text.setTrimValue(unsigned char, unsigned char, short) from er9x.o
      Allocate [0x0000af44 to 0x0000afa7] to section .text.PIND from BoardI6.o
      Allocate [0x0000afa8 to 0x0000b007] to section .text.getADC_osmp from BoardI6.o
      Allocate [0x0000b008 to 0x0000b067] to section .text.eeLoadModelName(unsigned char, char*, unsigned char) from pers.o
      Allocate [0x0000b068 to 0x0000b0c7] to section .text.PINB from BoardI6.o
      Allocate [0x0000b0c8 to 0x0000b123] to section .text.almess(char const*, unsigned char) from er9x.o
      Allocate [0x0000b124 to 0x0000b17f] to section .text.processCrossfireTelemetryData(unsigned char) from crossfire.o
      Allocate [0x0000b180 to 0x0000b1db] to section .text.doBackLightVoice(unsigned char) from er9x.o
      Allocate [0x0000b1dc to 0x0000b237] to section .text.calcStickScroll(unsigned char) from er9x.o
      Allocate [0x0000b238 to 0x0000b293] to section .text.applyTemplate() from templates.o
      Allocate [0x0000b294 to 0x0000b2eb] to section .text.EFile::closeTrunc() from file.o
      Allocate [0x0000b2ec to 0x0000b343] to section .text.lcd_init() from lcd.o
      Allocate [0x0000b344 to 0x0000b39b] to section .text.setMix(unsigned char, unsigned char) from templates.o
      Allocate [0x0000b39c to 0x0000b3f3] to section .text.dispInVExVDbl(unsigned char) from menus.o
      Allocate [0x0000b3f4 to 0x0000b44b] to section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) from menus.o
      Allocate [0x0000b44c to 0x0000b49f] to section .text.dispSignalQality(unsigned char) from menus.o
      Allocate [0x0000b4a0 to 0x0000b4f3] to section .text.eeWriteGeneral() from pers.o
      Allocate [0x0000b4f4 to 0x0000b547] to section .text.PINE from BoardI6.o
      Allocate [0x0000b548 to 0x0000b597] to section .text.A7105_WriteData(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000b598 to 0x0000b5e7] to section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000b5e8 to 0x0000b637] to section .text.TPM0_IRQHandler from BoardI6.o
      Allocate [0x0000b638 to 0x0000b687] to section .text.ISR_TIMER0_COMP_vect from er9x.o
      Allocate [0x0000b688 to 0x0000b6d3] to section .text.checkTHR() from er9x.o
      Allocate [0x0000b6d4 to 0x0000b71f] to section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) from lcd.o
      Allocate [0x0000b720 to 0x0000b76b] to section .text.checkThrottlePosition() from er9x.o
      Allocate [0x0000b76c to 0x0000b7b7] to section .text.SPI_RADIO_ReceiveBlock from BoardI6.o
      Allocate [0x0000b7b8 to 0x0000b7ff] to section .text.setupPulsesCrossfire() from crossfire_output.o
      Allocate [0x0000b800 to 0x0000b847] to section .text.SetStartPulsePol() from pulses.o
      Allocate [0x0000b848 to 0x0000b88f] to section .text.yesNoMenuExit(unsigned char, char const*) from menus.o
      Allocate [0x0000b890 to 0x0000b8d7] to section .text._GLOBAL__sub_I_ELRS.cpp from ELRS.o
      Allocate [0x0000b8d8 to 0x0000b91f] to section .text.PIT_IRQHandler from BoardI6.o
      Allocate [0x0000b920 to 0x0000b963] to section .text.ModuleSyncStatus::update(unsigned short, short) from crossfire.o
      Allocate [0x0000b964 to 0x0000b9a7] to section .text.check_backlight_voice() from er9x.o
      Allocate [0x0000b9a8 to 0x0000b9eb] to section .text.eeprom_read_block(void*, void const*, unsigned int) from drivers.o
      Allocate [0x0000b9ec to 0x0000ba2f] to section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int) from drivers.o
      Allocate [0x0000ba30 to 0x0000ba73] to section .text.ISR_TIMER1_COMPA_vect from pulses.o
      Allocate [0x0000ba74 to 0x0000bab7] to section .init from MKL16Z4_Vectors.o
      Allocate [0x0000bab8 to 0x0000baf7] to section .text.EFile::swap(unsigned char, unsigned char) from file.o
      Allocate [0x0000baf8 to 0x0000bb37] to section .text.audioQueue::getToneLength(unsigned char) from audio.o
      Allocate [0x0000bb38 to 0x0000bb73] to section .text.crsf_send_data from BoardI6.o
      Allocate [0x0000bb74 to 0x0000bbaf] to section .text.editSlowDelay(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000bbb0 to 0x0000bbeb] to section .text.anaIn(unsigned char) from er9x.o
      Allocate [0x0000bbec to 0x0000bc27] to section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000bc28 to 0x0000bc63] to section .text.rangeBindAction(unsigned char, unsigned char) from menus.o
      Allocate [0x0000bc64 to 0x0000bc9f] to section .text.getRawTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000bca0 to 0x0000bcdb] to section .text.EeFsFormat() from file.o
      Allocate [0x0000bcdc to 0x0000bd13] to section .text.audioQueue::driver() from er9x.o
      Allocate [0x0000bd14 to 0x0000bd4b] to section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000bd4c to 0x0000bd83] to section .text.REG(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000bd84 to 0x0000bdbb] to section .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&) from crossfire.o
      Allocate [0x0000bdbc to 0x0000bdf3] to section .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&) from crossfire.o
      Allocate [0x0000bdf4 to 0x0000be2b] to section .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&) from crossfire.o
      Allocate [0x0000be2c to 0x0000be63] to section .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&) from crossfire.o
      Allocate [0x0000be64 to 0x0000be9b] to section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000be9c to 0x0000bed3] to section .text.get_dr_state(unsigned char) from menus.o
      Allocate [0x0000bed4 to 0x0000bf0b] to section .text.resetTimern(unsigned char) from menus.o
      Allocate [0x0000bf0c to 0x0000bf43] to section .text.SetPRTTimPeriod from BoardI6.o
      Allocate [0x0000bf44 to 0x0000bf7b] to section .text.PORTC_PORTD_IRQHandler from BoardI6.o
      Allocate [0x0000bf7c to 0x0000bfb3] to section .rodata.menuProcModelIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000bfb4 to 0x0000bfeb] to section .rodata..Lswitch.table.menuProcModelIndex(unsigned char) from menus.o
      Allocate [0x0000bfec to 0x0000c01f] to section .text.pushMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000c020 to 0x0000c053] to section .text.lcd_write_bits(unsigned char*, unsigned char) from lcd.o
      Allocate [0x0000c054 to 0x0000c087] to section .text.getFlightPhase() from er9x.o
      Allocate [0x0000c088 to 0x0000c0bb] to section .text.A7105_SetPower() from A7105_SPI.o
      Allocate [0x0000c0bc to 0x0000c0ef] to section .text.SPI_RADIO_SendBlock from BoardI6.o
      Allocate [0x0000c0f0 to 0x0000c11f] to section .text.EFile::create(unsigned char, unsigned char, unsigned short) from file.o
      Allocate [0x0000c120 to 0x0000c14f] to section .text.EeFsFree(unsigned char) from file.o
      Allocate [0x0000c150 to 0x0000c17f] to section .text.modelSave(unsigned char) from pers.o
      Allocate [0x0000c180 to 0x0000c1af] to section .text.char2idx(char) from menus.o
      Allocate [0x0000c1b0 to 0x0000c1df] to section .text.EeFsOpen() from file.o
      Allocate [0x0000c1e0 to 0x0000c20f] to section .text.eeDirty(unsigned char) from pers.o
      Allocate [0x0000c210 to 0x0000c23f] to section .text.eeLoadModelForBackup(unsigned char) from pers.o
      Allocate [0x0000c240 to 0x0000c26f] to section .text.convert_failsafe_ppm(unsigned char) from A7105_SPI.o
      Allocate [0x0000c270 to 0x0000c29f] to section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c2a0 to 0x0000c2cf] to section .text.A7105_ReadData(unsigned char) from A7105_SPI.o
      Allocate [0x0000c2d0 to 0x0000c2ff] to section .text.TPM2_IRQHandler from BoardI6.o
      Allocate [0x0000c300 to 0x0000c32b] to section .text.SX127xDriver::SX127xDriver() from SX127x.o
      Allocate [0x0000c32c to 0x0000c357] to section .text.crsf_init() from crossfire.o
      Allocate [0x0000c358 to 0x0000c383] to section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c384 to 0x0000c3af] to section .text.popMenu(bool) from er9x.o
      Allocate [0x0000c3b0 to 0x0000c3db] to section .text.putVoiceQueueLong(unsigned short) from er9x.o
      Allocate [0x0000c3dc to 0x0000c407] to section .text.menuMixersLimit(unsigned char) from menus.o
      Allocate [0x0000c408 to 0x0000c433] to section .text.PING from BoardI6.o
      Allocate [0x0000c434 to 0x0000c45f] to section .rodata.menuProcIndex(unsigned char)::n_Strings from menus.o
      Allocate [0x0000c460 to 0x0000c487] to section .text.mDelay from BoardI6.o
      Allocate [0x0000c488 to 0x0000c4af] to section .text.EFile::rm(unsigned char) from file.o
      Allocate [0x0000c4b0 to 0x0000c4d7] to section .text.EeFsAlloc() from file.o
      Allocate [0x0000c4d8 to 0x0000c4ff] to section .text.putsVolts(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000c500 to 0x0000c527] to section .text.putsVBat(unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c528 to 0x0000c54f] to section .text.lcd_plot(unsigned char, unsigned char) from lcd.o
      Allocate [0x0000c550 to 0x0000c577] to section .text.A7105_AntSwitch() from A7105_SPI.o
      Allocate [0x0000c578 to 0x0000c59f] to section .text.eeWaitComplete() from pers.o
      Allocate [0x0000c5a0 to 0x0000c5c7] to section .text.switchDisplay(unsigned char, unsigned char) from menus.o
      Allocate [0x0000c5c8 to 0x0000c5ef] to section .text.startPulses() from pulses.o
      Allocate [0x0000c5f0 to 0x0000c617] to section .text.progressBar() from menus.o
      Allocate [0x0000c618 to 0x0000c63f] to section .text.evalOffset(signed char) from menus.o
      Allocate [0x0000c640 to 0x0000c667] to section .init from Kinetis_KL_Startup.o
      Allocate [0x0000c668 to 0x0000c68b] to section .text.EFile::openRd(unsigned char) from file.o
      Allocate [0x0000c68c to 0x0000c6af] to section .text.curveAddress(unsigned char) from menus.o
      Allocate [0x0000c6b0 to 0x0000c6d3] to section .text.getSvFifo() from drivers.o
      Allocate [0x0000c6d4 to 0x0000c6f7] to section .text.ee_waite() from drivers.o
      Allocate [0x0000c6f8 to 0x0000c71b] to section .text.reachMixerCountLimit() from menus.o
      Allocate [0x0000c71c to 0x0000c73f] to section .text.dispFlightModename(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c740 to 0x0000c763] to section .text.evalChkSum() from pers.o
      Allocate [0x0000c764 to 0x0000c787] to section .text.LCD_DATA from BoardI6.o
      Allocate [0x0000c788 to 0x0000c7ab] to section .rodata.processCrossfireTelemetryFrame()::power_values from crossfire.o
      Allocate [0x0000c7ac to 0x0000c7cb] to section .text.EFile::size() from file.o
      Allocate [0x0000c7cc to 0x0000c7eb] to section .text.chainMenu(void (*)(unsigned char)) from er9x.o
      Allocate [0x0000c7ec to 0x0000c80b] to section .text.crc8(unsigned char const*, unsigned int) from crc_crsf.o
      Allocate [0x0000c80c to 0x0000c82b] to section .text.checkCrossfireTelemetryFrameCRC() from crossfire.o
      Allocate [0x0000c82c to 0x0000c84b] to section .text.processVoiceAlarms() from er9x.o
      Allocate [0x0000c84c to 0x0000c86b] to section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) from menus.o
      Allocate [0x0000c86c to 0x0000c88b] to section .text.lcdSetRefVolt(unsigned char) from lcd.o
      Allocate [0x0000c88c to 0x0000c8ab] to section .text.backlightKey() from er9x.o
      Allocate [0x0000c8ac to 0x0000c8cb] to section .text.pauseEvents(unsigned char) from drivers.o
      Allocate [0x0000c8cc to 0x0000c8eb] to section .text.menuPressed() from drivers.o
      Allocate [0x0000c8ec to 0x0000c90b] to section .text.EeFsGetFree() from file.o
      Allocate [0x0000c90c to 0x0000c92b] to section .text.ISR_TIMER2_OVF_vect from er9x.o
      Allocate [0x0000c92c to 0x0000c947] to section .text.trace() from menus.o
      Allocate [0x0000c948 to 0x0000c963] to section .text.audioVoiceDefevent(unsigned char, unsigned char) from audio.o
      Allocate [0x0000c964 to 0x0000c97f] to section .text.throttleReversed() from er9x.o
      Allocate [0x0000c980 to 0x0000c99b] to section .text.putWarnSwitch(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000c99c to 0x0000c9b7] to section .text.modeFixValue(unsigned char) from er9x.o
      Allocate [0x0000c9b8 to 0x0000c9d3] to section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000c9d4 to 0x0000c9ef] to section .text.crsf_action() from crossfire.o
      Allocate [0x0000c9f0 to 0x0000ca0b] to section .text.killEvents(unsigned char) from drivers.o
      Allocate [0x0000ca0c to 0x0000ca27] to section .text.TPM1_IRQHandler from BoardI6.o
      Allocate [0x0000ca28 to 0x0000ca43] to section .text.EnableGIO from BoardI6.o
      Allocate [0x0000ca44 to 0x0000ca5b] to section .text.clearKeyEvents() from er9x.o
      Allocate [0x0000ca5c to 0x0000ca73] to section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000ca74 to 0x0000ca8b] to section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000ca8c to 0x0000caa3] to section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000caa4 to 0x0000cabb] to section .text.GetChipID from BoardI6.o
      Allocate [0x0000cabc to 0x0000cacf] to section .text.EFile::exists(unsigned char) from file.o
      Allocate [0x0000cad0 to 0x0000cae3] to section .text.EeFsFlush() from file.o
      Allocate [0x0000cae4 to 0x0000caf7] to section .text.EeFsFlushFreelist() from file.o
      Allocate [0x0000caf8 to 0x0000cb0b] to section .text.setVolume(unsigned char) from er9x.o
      Allocate [0x0000cb0c to 0x0000cb1f] to section .text.lcd_clear() from lcd.o
      Allocate [0x0000cb20 to 0x0000cb33] to section .text.idx2char(unsigned char) from menus.o
      Allocate [0x0000cb34 to 0x0000cb47] to section .text.crsf_current_period() from crossfire.o
      Allocate [0x0000cb48 to 0x0000cb5b] to section .text.startSerialVoice() from drivers.o
      Allocate [0x0000cb5c to 0x0000cb6f] to section .text.IS_EXPO_THROTTLE(unsigned char) from er9x.o
      Allocate [0x0000cb70 to 0x0000cb83] to section .text.checkIncDec_u0(short, unsigned char) from er9x.o
      Allocate [0x0000cb84 to 0x0000cb97] to section .text.checkIncDec_0(signed char, signed char) from er9x.o
      Allocate [0x0000cb98 to 0x0000cbab] to section .text.audioDefevent(unsigned char) from audio.o
      Allocate [0x0000cbac to 0x0000cbbf] to section .text.resetTimer1() from menus.o
      Allocate [0x0000cbc0 to 0x0000cbd3] to section .text.displayNext() from menus.o
      Allocate [0x0000cbd4 to 0x0000cbe7] to section .text.clearMixes() from templates.o
      Allocate [0x0000cbe8 to 0x0000cbfb] to section .text.audioEvent(unsigned char, unsigned short) from audio.o
      Allocate [0x0000cbfc to 0x0000cc0f] to section .text.DisableGIO from BoardI6.o
      Allocate [0x0000cc10 to 0x0000cc23] to section .rodata.CROSSFIRE_BAUDRATES from crossfire.o
      Allocate [0x0000cc24 to 0x0000cc37] to section .init._start from SEGGER_THUMB_Startup.o
      Allocate [0x0000cc38 to 0x0000cc47] to section .text.rw_0 from BoardI6.o
      Allocate [0x0000cc48 to 0x0000cc57] to section .text.rs_1 from BoardI6.o
      Allocate [0x0000cc58 to 0x0000cc67] to section .text.rs_0 from BoardI6.o
      Allocate [0x0000cc68 to 0x0000cc77] to section .text.rd_1 from BoardI6.o
      Allocate [0x0000cc78 to 0x0000cc87] to section .text.rd_0 from BoardI6.o
      Allocate [0x0000cc88 to 0x0000cc97] to section .text.CS_STATE(unsigned char) from er9x.o
      Allocate [0x0000cc98 to 0x0000cca7] to section .text.lcdSetContrast() from lcd.o
      Allocate [0x0000cca8 to 0x0000ccb7] to section .text.checkIncDec_i8(signed char, signed char, signed char) from er9x.o
      Allocate [0x0000ccb8 to 0x0000ccc7] to section .text.mixaddress(unsigned char) from er9x.o
      Allocate [0x0000ccc8 to 0x0000ccd7] to section .text._GLOBAL__sub_I_er9x.cpp from er9x.o
      Allocate [0x0000ccd8 to 0x0000cce7] to section .text._GLOBAL__sub_I_SX127x.cpp from SX127x.o
      Allocate [0x0000cce8 to 0x0000ccf7] to section .text.TX_RX_PutVal from BoardI6.o
      Allocate [0x0000ccf8 to 0x0000cd07] to section .text.GetPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000cd08 to 0x0000cd17] to section .text.GetPPMOutState from BoardI6.o
      Allocate [0x0000cd18 to 0x0000cd27] to section .text.ClearPPMTimCompareInterruptFlag from BoardI6.o
      Allocate [0x0000cd28 to 0x0000cd37] to section .text.Buzzer_SetVal from BoardI6.o
      Allocate [0x0000cd38 to 0x0000cd47] to section .text.Buzzer_ClrVal from BoardI6.o
      Allocate [0x0000cd48 to 0x0000cd53] to section .text.rst_1 from BoardI6.o
      Allocate [0x0000cd54 to 0x0000cd5f] to section .text.rst_0 from BoardI6.o
      Allocate [0x0000cd60 to 0x0000cd6b] to section .text.cs_0 from BoardI6.o
      Allocate [0x0000cd6c to 0x0000cd77] to section .text.backlight_on from BoardI6.o
      Allocate [0x0000cd78 to 0x0000cd83] to section .text.backlight_off from BoardI6.o
      Allocate [0x0000cd84 to 0x0000cd8f] to section .text.a7105_csn_on from BoardI6.o
      Allocate [0x0000cd90 to 0x0000cd9b] to section .text.a7105_csn_off from BoardI6.o
      Allocate [0x0000cd9c to 0x0000cda7] to section .text.SX127xHal::SX127xHal() from SX127xHal.o
      Allocate [0x0000cda8 to 0x0000cdb3] to section .text.get_tmr10ms() from er9x.o
      Allocate [0x0000cdb4 to 0x0000cdbf] to section .text.SetPPMTimCompare from BoardI6.o
      Allocate [0x0000cdc0 to 0x0000cdcb] to section .text.RF1_SetVal from BoardI6.o
      Allocate [0x0000cdcc to 0x0000cdd7] to section .text.RF1_ClrVal from BoardI6.o
      Allocate [0x0000cdd8 to 0x0000cde3] to section .text.RF0_SetVal from BoardI6.o
      Allocate [0x0000cde4 to 0x0000cdef] to section .text.RF0_ClrVal from BoardI6.o
      Allocate [0x0000cdf0 to 0x0000cdfb] to section .text.GetPPMTimCompare from BoardI6.o
      Allocate [0x0000cdfc to 0x0000ce07] to section .text.GetPPMTimCapture from BoardI6.o
      Allocate [0x0000ce08 to 0x0000ce13] to section .text.EnablePRTTim from BoardI6.o
      Allocate [0x0000ce14 to 0x0000ce1f] to section .text.EnablePPMTim from BoardI6.o
      Allocate [0x0000ce20 to 0x0000ce2b] to section .text.EnablePPMOut from BoardI6.o
      Allocate [0x0000ce2c to 0x0000ce37] to section .text.DisablePRTTim from BoardI6.o
      Allocate [0x0000ce38 to 0x0000ce43] to section .text.DisablePPMOut from BoardI6.o
      Allocate [0x0000ce44 to 0x0000cf45] to section .text.voice_numeric(short, unsigned char, unsigned char) from audio.o
      Allocate [0x0000cf46 to 0x0000d025] to section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) from file.o
      Allocate [0x0000d026 to 0x0000d0a9] to section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d0aa to 0x0000d11d] to section .text.intpol(short, unsigned char) from menus.o
      Allocate [0x0000d11e to 0x0000d18f] to section .text.EFile::readRlc(unsigned char*, unsigned short) from file.o
      Allocate [0x0000d190 to 0x0000d1fb] to section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d1fc to 0x0000d25f] to section .rodata.VarioTab from Vario.o
      Allocate [0x0000d260 to 0x0000d2b9] to section .text.telltale(unsigned char, signed char, signed char) from menus.o
      Allocate [0x0000d2ba to 0x0000d303] to section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d304 to 0x0000d349] to section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d34a to 0x0000d38b] to section .text.getTrimFlightPhase(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000d38c to 0x0000d3cd] to section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short) from lcd.o
      Allocate [0x0000d3ce to 0x0000d40d] to section .text.libc.__aeabi_idivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d40e to 0x0000d44b] to section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d44c to 0x0000d487] to section .text.libc.__int32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d488 to 0x0000d4c3] to section .text.expo(short, short) from menus.o
      Allocate [0x0000d4c4 to 0x0000d4fb] to section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d4fc to 0x0000d52f] to section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) from er9x.o
      Allocate [0x0000d530 to 0x0000d561] to section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000d562 to 0x0000d58f] to section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short) from crc.o
      Allocate [0x0000d590 to 0x0000d5bb] to section .text.A7105_WriteID(unsigned int) from A7105_SPI.o
      Allocate [0x0000d5bc to 0x0000d5e7] to section .text.A7105_ReadReg(unsigned char) from A7105_SPI.o
      Allocate [0x0000d5e8 to 0x0000d611] to section .text.libc.__aeabi_uidivmod from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d612 to 0x0000d63b] to section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d63c to 0x0000d663] to section .text.libc.__uint32_div from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d664 to 0x0000d68b] to section .text.doVoiceAlarmSource(t_voiceAlarm*) from er9x.o
      Allocate [0x0000d68c to 0x0000d6b3] to section .text.A7105_Reset() from A7105_SPI.o
      Allocate [0x0000d6b4 to 0x0000d6d9] to section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000d6da to 0x0000d6fd] to section .text.libc.div from libc2.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d6fe to 0x0000d721] to section .text.libc.__int64_lsr from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d722 to 0x0000d745] to section .text.libc.__int64_lsl from libc_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d746 to 0x0000d769] to section .text.scalerDecimal(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d76a to 0x0000d78b] to section .text.libc.memmove from libc2.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d78c to 0x0000d7ad] to section .text.expou(unsigned short, unsigned short) from menus.o
      Allocate [0x0000d7ae to 0x0000d7cf] to section .text.getCurrentSwitchStates() from er9x.o
      Allocate [0x0000d7d0 to 0x0000d7ef] to section .text.lcdSendCtl(unsigned char) from lcd.o
      Allocate [0x0000d7f0 to 0x0000d80f] to section .text.stickMoveValue() from er9x.o
      Allocate [0x0000d810 to 0x0000d82d] to section .text.libc.memcmp from libc2.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d82e to 0x0000d84b] to section .text.A7105_WriteReg(unsigned char, unsigned char) from A7105_SPI.o
      Allocate [0x0000d84c to 0x0000d867] to section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000d868 to 0x0000d883] to section .text.validateName(char*, unsigned char) from pers.o
      Allocate [0x0000d884 to 0x0000d89f] to section .text.voiceMinutes(short) from menus.o
      Allocate [0x0000d8a0 to 0x0000d8bb] to section .text.A7105_Strobe(unsigned char) from A7105_SPI.o
      Allocate [0x0000d8bc to 0x0000d8d5] to section .text.serialVoiceWaitByte(unsigned char) from menus.o
      Allocate [0x0000d8d6 to 0x0000d8ef] to section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d8f0 to 0x0000d907] to section .text.StubbornSender::ResetState() from stubborn_sender.o
      Allocate [0x0000d908 to 0x0000d91f] to section .text.EeFsRead(unsigned char, unsigned char) from file.o
      Allocate [0x0000d920 to 0x0000d935] to section .text.libc.memcpy from libc2_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d936 to 0x0000d94b] to section .text.EeFsSetLink(unsigned char, unsigned char) from file.o
      Allocate [0x0000d94c to 0x0000d961] to section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) from menus.o
      Allocate [0x0000d962 to 0x0000d977] to section .text.calc100toRESX(signed char) from er9x.o
      Allocate [0x0000d978 to 0x0000d98b] to section .text.libc.__aeabi_memset from libc2_asm.o (libc_v6m_t_le_eabi_small.a)
      Allocate [0x0000d98c to 0x0000d99f] to section .text.StubbornReceiver::StubbornReceiver(unsigned char) from stubborn_receiver.o
      Allocate [0x0000d9a0 to 0x0000d9b3] to section .text.setNameP(char*, char const*) from pers.o
      Allocate [0x0000d9b4 to 0x0000d9c7] to section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) from menus.o
      Allocate [0x0000d9c8 to 0x0000d9db] to section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) from lcd.o
      Allocate [0x0000d9dc to 0x0000d9ed] to section .text.onoffItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000d9ee to 0x0000d9ff] to section .text.offonItem(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000da00 to 0x0000da11] to section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) from menus.o
      Allocate [0x0000da12 to 0x0000da23] to section .text.putc_0_1(unsigned char, unsigned char, unsigned char) from menus.o
      Allocate [0x0000da24 to 0x0000da33] to section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char) from er9x.o
      Allocate [0x0000da34 to 0x0000da43] to section .text.TITLEP(char const*) from menus.o
      Allocate [0x0000da44 to 0x0000da53] to section .text.lcd_puts_Pleft(unsigned char, char const*) from lcd.o
      Allocate [0x0000da54 to 0x0000da63] to section .text.calc1000toRESX(short) from er9x.o
      Allocate [0x0000da64 to 0x0000da73] to section .text.putsTimeNoAtt(unsigned char, unsigned char, short) from menus.o
      Allocate [0x0000da74 to 0x0000da83] to section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) from lcd.o
      Allocate [0x0000da84 to 0x0000da93] to section .text.getTrimValue(unsigned char, unsigned char) from er9x.o
      Allocate [0x0000da94 to 0x0000daa3] to section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) from lcd.o
      Allocate [0x0000daa4 to 0x0000dab3] to section .text.A7105_Sleep() from A7105_SPI.o
      Allocate [0x0000dab4 to 0x0000dac1] to section .text.main from main.o
      Allocate [0x0000dac2 to 0x0000dacf] to section .text.StubbornSender::StubbornSender(unsigned char) from stubborn_sender.o
      Allocate [0x0000dad0 to 0x0000dadd] to section .text.brSubHead(char const*) from menus.o
      Allocate [0x0000dade to 0x0000daeb] to section .text.message(char const*) from er9x.o
      Allocate [0x0000daec to 0x0000daf9] to section .text.keyDown() from er9x.o
      Allocate [0x0000dafa to 0x0000db07] to section .text.putVoiceQueueUpper(unsigned char) from er9x.o
      Allocate [0x0000db08 to 0x0000db15] to section .text.REG100_100(signed char) from er9x.o
      Allocate [0x0000db16 to 0x0000db21] to section .text.switchPosition(unsigned char) from drivers.o
      Allocate [0x0000db22 to 0x0000db2d] to section .text.eeModelExists(unsigned char) from pers.o
      Allocate [0x0000db2e to 0x0000db39] to section .text.getSwitch00(signed char) from er9x.o
      Allocate [0x0000db3a to 0x0000db43] to section .text.EeFsGetLink(unsigned char) from file.o
      Allocate [0x0000db44 to 0x0000db4d] to section .text.lcd_hline(unsigned char, unsigned char, signed char) from lcd.o
      Allocate [0x0000db4e to 0x0000db57] to section .text.lcd_putc(unsigned char, unsigned char, char) from lcd.o
      Allocate [0x0000db58 to 0x0000db61] to section .text.alert(char const*) from er9x.o
      Allocate [0x0000db62 to 0x0000db6b] to section .text.resetTimer2() from menus.o
      Allocate [0x0000db6c to 0x0000db75] to section .text.checkIncDec(signed char, signed char, signed char, unsigned char) from er9x.o
      Allocate [0x0000db76 to 0x0000db7f] to section .text.lcd_puts_P(unsigned char, unsigned char, char const*) from lcd.o
      Allocate [0x0000db80 to 0x0000db89] to section .text.lcd_outdez(unsigned char, unsigned char, short) from lcd.o
      Allocate [0x0000db8a to 0x0000db91] to section .text.audioQueue::busy() from audio.o
      Allocate [0x0000db92 to 0x0000db99] to section .text.A7105_SetTxRxMode(unsigned char) from A7105_SPI.o
      Allocate [0x0000db9a to 0x0000dba1] to section .text.putVoiceQueue(unsigned char) from er9x.o
      Allocate [0x0000dba2 to 0x0000dba5] to section .text.sei from BoardI6.o
      Allocate [0x0000dba6 to 0x0000dba9] to section .text.cli from BoardI6.o
      Allocate [0x0000dbaa to 0x0000dbad] to section .text.telemItemValid(unsigned char) from menus.o
      Allocate [0x0000dbae to 0x0000dbaf] to section .text.audioQueue::audioQueue() from audio.o
      Allocate [0x0000dbb0 to 0x0000dbb1] to section .text.serialVoiceBlockSend(unsigned char*, unsigned char) from menus.o
      Allocate [0x0000dbb2 to 0x0000dbb3] to section .text.stopSerialVoice() from drivers.o
      Allocate [0x0000dbb4 to 0x0000e117] to section .rodata.font_dblsize from lcd.o
      Allocate [0x0000e118 to 0x0000e306] to section .rodata.font from lcd.o
      Allocate [0x0000e307 to 0x0000e406] to section .rodata.crc8tab from crc_crsf.o
      Allocate [0x0000e407 to 0x0000e4f4] to section .rodata.Str_telemItems from menus.o
      Allocate [0x0000e4f5 to 0x0000e59a] to section .rodata.Str_Chans_Gv from menus.o
      Allocate [0x0000e59b to 0x0000e617] to section .rodata..L.str.13 from menus.o
      Allocate [0x0000e618 to 0x0000e689] to section .rodata.Str_Cswitch from menus.o
      Allocate [0x0000e68a to 0x0000e6eb] to section .rodata.Str_Sounds from menus.o
      Allocate [0x0000e6ec to 0x0000e743] to section .rodata.AFHDS2A_tel from AFHDS2A_a7105.o
      Allocate [0x0000e744 to 0x0000e795] to section .rodata..L.str.68 from menus.o
      Allocate [0x0000e796 to 0x0000e7e1] to section .rodata..L.str.62 from menus.o
      Allocate [0x0000e7e2 to 0x0000e82c] to section .rodata.sticks from menus.o
      Allocate [0x0000e82d to 0x0000e877] to section .rodata..L.str.128 from menus.o
      Allocate [0x0000e878 to 0x0000e8c1] to section .rodata.Curve_Str from menus.o
      Allocate [0x0000e8c2 to 0x0000e908] to section .rodata..L.str.123 from menus.o
      Allocate [0x0000e909 to 0x0000e94b] to section .rodata.s_charTab from menus.o
      Allocate [0x0000e94c to 0x0000e98c] to section .rodata.Str_Switches from er9x.o
      Allocate [0x0000e98d to 0x0000e9cd] to section .rodata..L.str.4 from menus.o
      Allocate [0x0000e9ce to 0x0000ea0c] to section .rodata..L.str.8 from menus.o
      Allocate [0x0000ea0d to 0x0000ea46] to section .rodata.Str_Main_Popup from menus.o
      Allocate [0x0000ea47 to 0x0000ea80] to section .rodata.TelemIndex from menus.o
      Allocate [0x0000ea81 to 0x0000eab6] to section .rodata..L.str.65 from menus.o
      Allocate [0x0000eab7 to 0x0000eaeb] to section .rodata.ModelPopList from menus.o
      Allocate [0x0000eaec to 0x0000eb20] to section .rodata..L.str.121 from menus.o
      Allocate [0x0000eb21 to 0x0000eb54] to section .rodata..L.str.125 from menus.o
      Allocate [0x0000eb55 to 0x0000eb86] to section .rodata.AFHDS_A7105_regs from BoardI6.o
      Allocate [0x0000eb87 to 0x0000ebb8] to section .rodata.AFHDS2A_A7105_regs from BoardI6.o
      Allocate [0x0000ebb9 to 0x0000ebea] to section .rodata..L.str.118 from menus.o
      Allocate [0x0000ebeb to 0x0000ec18] to section .rodata..L.str.67 from menus.o
      Allocate [0x0000ec19 to 0x0000ec46] to section .rodata..L.str.64 from menus.o
      Allocate [0x0000ec47 to 0x0000ec74] to section .rodata..L.str.18 from menus.o
      Allocate [0x0000ec75 to 0x0000ec9f] to section .rodata..L.str.133 from menus.o
      Allocate [0x0000eca0 to 0x0000ecca] to section .rodata..L.str.13 from er9x.o
      Allocate [0x0000eccb to 0x0000ecf5] to section .rodata..L.str.109 from menus.o
      Allocate [0x0000ecf6 to 0x0000ed1f] to section .rodata.UnitsString from menus.o
      Allocate [0x0000ed20 to 0x0000ed49] to section .rodata.Stamps from stamp.o
      Allocate [0x0000ed4a to 0x0000ed72] to section .rodata.Str_Gv_Source from menus.o
      Allocate [0x0000ed73 to 0x0000ed9b] to section .rodata..L.str.87 from menus.o
      Allocate [0x0000ed9c to 0x0000edc3] to section .rodata..L.str.63 from menus.o
      Allocate [0x0000edc4 to 0x0000edea] to section .rodata.MixPopList from menus.o
      Allocate [0x0000edeb to 0x0000ee10] to section .rodata..L.str.115 from menus.o
      Allocate [0x0000ee11 to 0x0000ee35] to section .rodata..L.str.88 from menus.o
      Allocate [0x0000ee36 to 0x0000ee5a] to section .rodata..L.str.6 from er9x.o
      Allocate [0x0000ee5b to 0x0000ee7c] to section .rodata..L.str.126 from menus.o
      Allocate [0x0000ee7d to 0x0000ee9d] to section .rodata..L.str.5 from er9x.o
      Allocate [0x0000ee9e to 0x0000eebd] to section .rodata.AFHDS_tx_channels from AFHDS.o
      Allocate [0x0000eebe to 0x0000eedd] to section .rodata..L.str.91 from menus.o
      Allocate [0x0000eede to 0x0000eefd] to section .rodata..L.str.74 from menus.o
      Allocate [0x0000eefe to 0x0000ef1d] to section .rodata..L.str.131 from menus.o
      Allocate [0x0000ef1e to 0x0000ef3b] to section .rodata.SW_3_IDX from menus.o
      Allocate [0x0000ef3c to 0x0000ef59] to section .rodata..L.str.29 from menus.o
      Allocate [0x0000ef5a to 0x0000ef77] to section .rodata..L.str.119 from menus.o
      Allocate [0x0000ef78 to 0x0000ef95] to section .rodata..L.str.110 from menus.o
      Allocate [0x0000ef96 to 0x0000efb1] to section .rodata..L.str.7 from menus.o
      Allocate [0x0000efb2 to 0x0000efcd] to section .rodata..L.str.17 from menus.o
      Allocate [0x0000efce to 0x0000efe9] to section .rodata..L.str.122 from menus.o
      Allocate [0x0000efea to 0x0000f004] to section .rodata..L.str.102 from menus.o
      Allocate [0x0000f005 to 0x0000f01e] to section .rodata..L.str.70 from menus.o
      Allocate [0x0000f01f to 0x0000f037] to section .rodata..L.str.19 from menus.o
      Allocate [0x0000f038 to 0x0000f04f] to section .rodata.bchout_ar from er9x.o
      Allocate [0x0000f050 to 0x0000f067] to section .rodata..L.str.134 from menus.o
      Allocate [0x0000f068 to 0x0000f07f] to section .rodata..L.str.129 from menus.o
      Allocate [0x0000f080 to 0x0000f096] to section .rodata..L.str.45 from menus.o
      Allocate [0x0000f097 to 0x0000f0ac] to section .rodata.Str_On_Off_Both from menus.o
      Allocate [0x0000f0ad to 0x0000f0c2] to section .rodata..L.str.94 from menus.o
      Allocate [0x0000f0c3 to 0x0000f0d8] to section .rodata..L.str.92 from menus.o
      Allocate [0x0000f0d9 to 0x0000f0ee] to section .rodata..L.str.2 from er9x.o
      Allocate [0x0000f0ef to 0x0000f103] to section .rodata..L.str.2 from pers.o
      Allocate [0x0000f104 to 0x0000f117] to section .rodata..L.str.60 from menus.o
      Allocate [0x0000f118 to 0x0000f12b] to section .rodata..L.str.6 from menus.o
      Allocate [0x0000f12c to 0x0000f13f] to section .rodata..L.str.117 from menus.o
      Allocate [0x0000f140 to 0x0000f152] to section .rodata..L.str.55 from menus.o
      Allocate [0x0000f153 to 0x0000f165] to section .rodata..L.str.44 from menus.o
      Allocate [0x0000f166 to 0x0000f178] to section .rodata..L.str.3 from pers.o
      Allocate [0x0000f179 to 0x0000f18a] to section .rodata.modi12x3 from er9x.o
      Allocate [0x0000f18b to 0x0000f19c] to section .rodata..L.str.85 from menus.o
      Allocate [0x0000f19d to 0x0000f1ae] to section .rodata..L.str.5 from pers.o
      Allocate [0x0000f1af to 0x0000f1c0] to section .rodata..L.str.27 from menus.o
      Allocate [0x0000f1c1 to 0x0000f1d2] to section .rodata..L.str.25 from menus.o
      Allocate [0x0000f1d3 to 0x0000f1e3] to section .rodata.menuWhenDone from menus.o
      Allocate [0x0000f1e4 to 0x0000f1f4] to section .rodata..L.str.83 from menus.o
      Allocate [0x0000f1f5 to 0x0000f205] to section .rodata..L.str.66 from menus.o
      Allocate [0x0000f206 to 0x0000f216] to section .rodata..L.str.57 from menus.o
      Allocate [0x0000f217 to 0x0000f227] to section .rodata..L.str.54 from menus.o
      Allocate [0x0000f228 to 0x0000f238] to section .rodata..L.str.50 from menus.o
      Allocate [0x0000f239 to 0x0000f249] to section .rodata..L.str.20 from menus.o
      Allocate [0x0000f24a to 0x0000f25a] to section .rodata..L.str.137 from menus.o
      Allocate [0x0000f25b to 0x0000f26b] to section .rodata..L.str.135 from menus.o
      Allocate [0x0000f26c to 0x0000f27c] to section .rodata..L.str.120 from menus.o
      Allocate [0x0000f27d to 0x0000f28c] to section .rodata.stickScramble from er9x.o
      Allocate [0x0000f28d to 0x0000f29c] to section .rodata.Str_EEPROM_Overflow from pers.o
      Allocate [0x0000f29d to 0x0000f2ac] to section .rodata..L.str.90 from menus.o
      Allocate [0x0000f2ad to 0x0000f2bc] to section .rodata..L.str.78 from menus.o
      Allocate [0x0000f2bd to 0x0000f2cc] to section .rodata..L.str.4 from pers.o
      Allocate [0x0000f2cd to 0x0000f2dc] to section .rodata..L.str.23 from menus.o
      Allocate [0x0000f2dd to 0x0000f2ec] to section .rodata..L.str.139 from menus.o
      Allocate [0x0000f2ed to 0x0000f2fc] to section .rodata..L.str.138 from menus.o
      Allocate [0x0000f2fd to 0x0000f30c] to section .rodata..L.str.124 from menus.o
      Allocate [0x0000f30d to 0x0000f31c] to section .rodata..L.str.12 from er9x.o
      Allocate [0x0000f31d to 0x0000f32b] to section .rodata.Str_Beep_Countdown from menus.o
      Allocate [0x0000f32c to 0x0000f33a] to section .rodata.csTypeTable from er9x.o
      Allocate [0x0000f33b to 0x0000f349] to section .rodata..L.str.6 from pers.o
      Allocate [0x0000f34a to 0x0000f358] to section .rodata..L.str.5 from menus.o
      Allocate [0x0000f359 to 0x0000f367] to section .rodata..L.str.14 from menus.o
      Allocate [0x0000f368 to 0x0000f376] to section .rodata..L.str.132 from menus.o
      Allocate [0x0000f377 to 0x0000f385] to section .rodata..L.str.112 from menus.o
      Allocate [0x0000f386 to 0x0000f394] to section .rodata..L.str.11 from er9x.o
      Allocate [0x0000f395 to 0x0000f3a3] to section .rodata..L.str.106 from menus.o
      Allocate [0x0000f3a4 to 0x0000f3b1] to section .rodata..L.str.9 from menus.o
      Allocate [0x0000f3b2 to 0x0000f3bf] to section .rodata..L.str.84 from menus.o
      Allocate [0x0000f3c0 to 0x0000f3cd] to section .rodata..L.str.69 from menus.o
      Allocate [0x0000f3ce to 0x0000f3db] to section .rodata..L.str.3 from er9x.o
      Allocate [0x0000f3dc to 0x0000f3e9] to section .rodata..L.str.116 from menus.o
      Allocate [0x0000f3ea to 0x0000f3f7] to section .rodata..L.str.103 from menus.o
      Allocate [0x0000f3f8 to 0x0000f404] to section .rodata..L.str.79 from menus.o
      Allocate [0x0000f405 to 0x0000f411] to section .rodata..L.str.7 from er9x.o
      Allocate [0x0000f412 to 0x0000f41e] to section .rodata..L.str.24 from menus.o
      Allocate [0x0000f41f to 0x0000f42b] to section .rodata..L.str from er9x.o
      Allocate [0x0000f42c to 0x0000f437] to section .rodata.Lcdinit from lcd.o
      Allocate [0x0000f438 to 0x0000f443] to section .rodata.Str_minute_Beep from menus.o
      Allocate [0x0000f444 to 0x0000f44f] to section .rodata.Str_Calibration from menus.o
      Allocate [0x0000f450 to 0x0000f45b] to section .rodata.Str_AudioHaptic from menus.o
      Allocate [0x0000f45c to 0x0000f467] to section .rodata..L.str.93 from menus.o
      Allocate [0x0000f468 to 0x0000f473] to section .rodata..L.str.86 from menus.o
      Allocate [0x0000f474 to 0x0000f47f] to section .rodata..L.str.72 from menus.o
      Allocate [0x0000f480 to 0x0000f48b] to section .rodata..L.str.38 from menus.o
      Allocate [0x0000f48c to 0x0000f497] to section .rodata..L.str.21 from menus.o
      Allocate [0x0000f498 to 0x0000f4a3] to section .rodata..L.str.130 from menus.o
      Allocate [0x0000f4a4 to 0x0000f4ae] to section .rodata.Str_heli_setup from menus.o
      Allocate [0x0000f4af to 0x0000f4b9] to section .rodata.Str_Cswitches from menus.o
      Allocate [0x0000f4ba to 0x0000f4c4] to section .rodata.Str_Globals from menus.o
      Allocate [0x0000f4c5 to 0x0000f4cf] to section .rodata.Str_Safety from menus.o
      Allocate [0x0000f4d0 to 0x0000f4da] to section .rodata..L.str.95 from menus.o
      Allocate [0x0000f4db to 0x0000f4e5] to section .rodata..L.str.9 from er9x.o
      Allocate [0x0000f4e6 to 0x0000f4f0] to section .rodata..L.str.80 from menus.o
      Allocate [0x0000f4f1 to 0x0000f4fb] to section .rodata..L.str.56 from menus.o
      Allocate [0x0000f4fc to 0x0000f506] to section .rodata..L.str.107 from menus.o
      Allocate [0x0000f507 to 0x0000f511] to section .rodata..L.str.1 from pers.o
      Allocate [0x0000f512 to 0x0000f51c] to section .rodata..L.str from pers.o
      Allocate [0x0000f51d to 0x0000f526] to section .rodata.Str_Telemetry from menus.o
      Allocate [0x0000f527 to 0x0000f530] to section .rodata.Str_DiagSwtch from menus.o
      Allocate [0x0000f531 to 0x0000f53a] to section .rodata.Str_TRE012AG from menus.o
      Allocate [0x0000f53b to 0x0000f544] to section .rodata..L.str.97 from menus.o
      Allocate [0x0000f545 to 0x0000f54e] to section .rodata..L.str.71 from menus.o
      Allocate [0x0000f54f to 0x0000f558] to section .rodata..L.str.39 from menus.o
      Allocate [0x0000f559 to 0x0000f562] to section .rodata..L.str.34 from menus.o
      Allocate [0x0000f563 to 0x0000f56c] to section .rodata..L.str.12 from menus.o
      Allocate [0x0000f56d to 0x0000f576] to section .rodata..L.str.113 from menus.o
      Allocate [0x0000f577 to 0x0000f580] to section .rodata..L.str from menus.o
      Allocate [0x0000f581 to 0x0000f589] to section .rodata.Str_Protocol from menus.o
      Allocate [0x0000f58a to 0x0000f592] to section .rodata.Str_Hardware from menus.o
      Allocate [0x0000f593 to 0x0000f59b] to section .rodata.Str_Controls from menus.o
      Allocate [0x0000f59c to 0x0000f5a4] to section .rodata..L.str.8 from er9x.o
      Allocate [0x0000f5a5 to 0x0000f5ad] to section .rodata..L.str.61 from menus.o
      Allocate [0x0000f5ae to 0x0000f5b6] to section .rodata..L.str.43 from menus.o
      Allocate [0x0000f5b7 to 0x0000f5bf] to section .rodata..L.str.40 from menus.o
      Allocate [0x0000f5c0 to 0x0000f5c8] to section .rodata..L.str.36 from menus.o
      Allocate [0x0000f5c9 to 0x0000f5d1] to section .rodata..L.str.26 from menus.o
      Allocate [0x0000f5d2 to 0x0000f5da] to section .rodata..L.str.114 from menus.o
      Allocate [0x0000f5db to 0x0000f5e3] to section .rodata..L.str.105 from menus.o
      Allocate [0x0000f5e4 to 0x0000f5ec] to section .rodata..L.str.104 from menus.o
      Allocate [0x0000f5ed to 0x0000f5f5] to section .rodata..L.str.100 from menus.o
      Allocate [0x0000f5f6 to 0x0000f5fe] to section .rodata..L.str.10 from menus.o
      Allocate [0x0000f5ff to 0x0000f606] to section .rodata.per10ms()::crossTrim from drivers.o
      Allocate [0x0000f607 to 0x0000f60e] to section .rodata.UnitsText from menus.o
      Allocate [0x0000f60f to 0x0000f616] to section .rodata._bitmask from lcd.o
      Allocate [0x0000f617 to 0x0000f61e] to section .rodata.Str_Expo from menus.o
      Allocate [0x0000f61f to 0x0000f626] to section .rodata.rate from er9x.o
      Allocate [0x0000f627 to 0x0000f62e] to section .rodata.Str_Version from menus.o
      Allocate [0x0000f62f to 0x0000f636] to section .rodata.Str_Trainer from menus.o
      Allocate [0x0000f637 to 0x0000f63e] to section .rodata.Str_General from menus.o
      Allocate [0x0000f63f to 0x0000f646] to section .rodata.Str_Display from menus.o
      Allocate [0x0000f647 to 0x0000f64e] to section .rodata.Str_DiagAna from menus.o
      Allocate [0x0000f64f to 0x0000f656] to section .rodata.UnitsVoice from menus.o
      Allocate [0x0000f657 to 0x0000f65e] to section .rodata..L.str.82 from menus.o
      Allocate [0x0000f65f to 0x0000f666] to section .rodata..L.str.75 from menus.o
      Allocate [0x0000f667 to 0x0000f66e] to section .rodata..L.str.4 from er9x.o
      Allocate [0x0000f66f to 0x0000f676] to section .rodata..L.str.33 from menus.o
      Allocate [0x0000f677 to 0x0000f67e] to section .rodata..L.str.32 from menus.o
      Allocate [0x0000f67f to 0x0000f686] to section .rodata..L.str.28 from menus.o
      Allocate [0x0000f687 to 0x0000f68e] to section .rodata..L.str.127 from menus.o
      Allocate [0x0000f68f to 0x0000f696] to section .rodata..L.str.101 from menus.o
      Allocate [0x0000f697 to 0x0000f69d] to section .rodata.Str_Alert from er9x.o
      Allocate [0x0000f69e to 0x0000f6a4] to section .rodata.ChannelToPin from BoardI6.o
      Allocate [0x0000f6a5 to 0x0000f6ab] to section .rodata.Str_limits from menus.o
      Allocate [0x0000f6ac to 0x0000f6b2] to section .rodata.Str_Curves from menus.o
      Allocate [0x0000f6b3 to 0x0000f6b9] to section .rodata.Str_Alarms from menus.o
      Allocate [0x0000f6ba to 0x0000f6c0] to section .rodata..L.str.96 from menus.o
      Allocate [0x0000f6c1 to 0x0000f6c7] to section .rodata..L.str.77 from menus.o
      Allocate [0x0000f6c8 to 0x0000f6ce] to section .rodata..L.str.37 from menus.o
      Allocate [0x0000f6cf to 0x0000f6d5] to section .rodata..L.str.35 from menus.o
      Allocate [0x0000f6d6 to 0x0000f6dc] to section .rodata..L.str.31 from menus.o
      Allocate [0x0000f6dd to 0x0000f6e3] to section .rodata..L.str.10 from er9x.o
      Allocate [0x0000f6e4 to 0x0000f6ea] to section .rodata..L.str.1 from menus.o
      Allocate [0x0000f6eb to 0x0000f6f0] to section .rodata.Str_Timer from menus.o
      Allocate [0x0000f6f1 to 0x0000f6f6] to section .rodata.Str_Modes from menus.o
      Allocate [0x0000f6f7 to 0x0000f6fc] to section .rodata.Str_Mixer from menus.o
      Allocate [0x0000f6fd to 0x0000f702] to section .rodata.Str_Curve from menus.o
      Allocate [0x0000f703 to 0x0000f708] to section .rodata.Str_1_RETA from menus.o
      Allocate [0x0000f709 to 0x0000f70e] to section .rodata..L.str.98 from menus.o
      Allocate [0x0000f70f to 0x0000f714] to section .rodata..L.str.41 from menus.o
      Allocate [0x0000f715 to 0x0000f71a] to section .rodata..L.str.16 from menus.o
      Allocate [0x0000f71b to 0x0000f720] to section .rodata..L.str.15 from menus.o
      Allocate [0x0000f721 to 0x0000f726] to section .rodata..L.str.108 from menus.o
      Allocate [0x0000f727 to 0x0000f72b] to section .rodata.Str_Name from menus.o
      Allocate [0x0000f72c to 0x0000f730] to section .rodata.CROSSFIRE_PERIODS from crossfire.o
      Allocate [0x0000f731 to 0x0000f735] to section .rodata.Str_Hyphens from er9x.o
      Allocate [0x0000f736 to 0x0000f73a] to section .rodata..L.str.89 from menus.o
      Allocate [0x0000f73b to 0x0000f73f] to section .rodata..L.str.73 from menus.o
      Allocate [0x0000f740 to 0x0000f744] to section .rodata..L.str.51 from menus.o
      Allocate [0x0000f745 to 0x0000f749] to section .rodata..L.str.49 from menus.o
      Allocate [0x0000f74a to 0x0000f74e] to section .rodata..L.str.48 from menus.o
      Allocate [0x0000f74f to 0x0000f753] to section .rodata..L.str.42 from menus.o
      Allocate [0x0000f754 to 0x0000f758] to section .rodata..L.str.3 from menus.o
      Allocate [0x0000f759 to 0x0000f75d] to section .rodata..L.str.22 from menus.o
      Allocate [0x0000f75e to 0x0000f761] to section .rodata.menuProc0(unsigned char)::xt from menus.o
      Allocate [0x0000f762 to 0x0000f765] to section .rodata.Str_ON from er9x.o
      Allocate [0x0000f766 to 0x0000f769] to section .rodata.Str_OFF from er9x.o
      Allocate [0x0000f76a to 0x0000f76d] to section .rodata..L.str.81 from menus.o
      Allocate [0x0000f76e to 0x0000f771] to section .rodata..L.str.76 from menus.o
      Allocate [0x0000f772 to 0x0000f775] to section .rodata..L.str.53 from menus.o
      Allocate [0x0000f776 to 0x0000f779] to section .rodata..L.str.52 from menus.o
      Allocate [0x0000f77a to 0x0000f77d] to section .rodata..L.str.47 from menus.o
      Allocate [0x0000f77e to 0x0000f781] to section .rodata..L.str.46 from menus.o
      Allocate [0x0000f782 to 0x0000f785] to section .rodata..L.str.30 from menus.o
      Allocate [0x0000f786 to 0x0000f789] to section .rodata..L.str.136 from menus.o
      Allocate [0x0000f78a to 0x0000f78d] to section .rodata..L.str.111 from menus.o
      Allocate [0x0000f78e to 0x0000f791] to section .rodata..L.str.1 from er9x.o
      Allocate [0x0000f792 to 0x0000f794] to section .rodata.Str_SC from menus.o
      Allocate [0x0000f795 to 0x0000f797] to section .rodata.Str_GV from menus.o
      Allocate [0x0000f798 to 0x0000f79a] to section .rodata..L.str.99 from menus.o
      Allocate [0x0000f79b to 0x0000f79d] to section .rodata..L.str.59 from menus.o
      Allocate [0x0000f79e to 0x0000f7a0] to section .rodata..L.str.58 from menus.o
      Allocate [0x0000f7a1 to 0x0000f7a3] to section .rodata..L.str.2 from menus.o
      Allocate [0x0000f7a4 to 0x0000f7a6] to section .rodata..L.str.11 from menus.o
      Allocate [0x0000f7a7 size 0] to block exidx from [ Linker created ]
      Allocate [0x0000f7a7 size 0] to block dtors from [ Linker created ]
      Inputs to block dtors
          Allocate [0x0000f7a7 size 0] to inline block <#2> at line 62, col 85 from [ Linker created ]
      Allocate [0x0000f7a8 to 0x0000f7b3] to block ctors from [ Linker created ]
      Inputs to block ctors
          Inputs to inline block <#1> at line 61, col 85
              Allocate [0x0000f7a8 to 0x0000f7ab] to section .init_array from er9x.o
              Allocate [0x0000f7ac to 0x0000f7af] to section .init_array from SX127x.o
              Allocate [0x0000f7b0 to 0x0000f7b3] to section .init_array from ELRS.o
          Allocate [0x0000f7a8 to 0x0000f7b3] to inline block <#1> at line 61, col 85 from [ Linker created ]
  Executing place in [0x0000f7a7 to 0x0000f7a7] + [0x0000f7b4 to 0x0000ffff] (1 inputs selected)
      Candidate regions: [0x00000000 to 0x0000ffff]
      Allocate [0x0000f7a7 size 0] to block tdata_load from [ Linker created ]
      Inputs to block tdata_load
          Allocate [0x0000f7a7 size 0] to copy of block tdata from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 size 0] to block tls from [ Linker created ]
      Inputs to block tls
          Allocate [0x1ffff800 size 0] to block tdata from [ Linker created ]
          Allocate [0x1ffff800 size 0] to block tbss from [ Linker created ]
  Executing place in [0x1ffff800 to 0x200016ff] (189 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x1ffff800 to 0x1ffff807] to section .bss.AFHDS2A_tel_status from AFHDS2A_a7105.o
      Allocate [0x1ffff808 to 0x1ffffc07] to section .bss.DisplayBuf from lcd.o
      Allocate [0x1ffffc08 to 0x1ffffd07] to section .bss.Output from menus.o
      Allocate [0x1ffffd08 to 0x1ffffdb3] to section .bss.AFHDS2A_tel_data from AFHDS2A_a7105.o
      Allocate [0x1ffffdb4 to 0x1ffffe03] to section .bss.Fade from menus.o
      Allocate [0x1ffffe04 to 0x1ffffe43] to section .bss.eeFs from file.o
      Allocate [0x1ffffe44 to 0x1ffffe73] to section .bss.Radio from ELRS.o
      Allocate [0x1ffffe74 to 0x1ffffe9b] to section .bss.packet from A7105_SPI.o
      Allocate [0x1ffffe9c to 0x1ffffeaf] to section .bss.g_menuStack from er9x.o
      Allocate [0x1ffffeb0 to 0x1ffffebf] to section .bss.WorkBuff from Vario.o
      Allocate [0x1ffffec0 to 0x1ffffecf] to section .bss.MspSender from ELRS.o
      Allocate [0x1ffffed0 to 0x1ffffedf] to section .bss.LoadBuff from Vario.o
      Allocate [0x1ffffee0 to 0x1ffffeeb] to section .bss.i2c_buffer from drivers.o
      Allocate [0x1ffffeec to 0x1ffffef7] to section .bss.moduleSyncStatus from crossfire.o
      Allocate [0x1ffffef8 to 0x1fffff03] to section .bss.TelemetryReceiver from ELRS.o
      Allocate [0x1fffff04 to 0x1fffff0f] to section .bss.LQCalc from ELRS.o
      Allocate [0x1fffff10 to 0x1fffff13] to section .bss.telemetryErrors from crossfire.o
      Allocate [0x1fffff14 to 0x1fffff17] to section .bss.hal from SX127x.o
      Allocate [0x1fffff18 to 0x1fffff1b] to section .bss.g_tmr10ms from drivers.o
      Allocate [0x1fffff1c to 0x1fffff1f] to section .bss.crossfireTelemetryCallback from crossfire.o
      Allocate [0x1fffff20 to 0x1fffff23] to section .bss.perMain()::lastTMR from er9x.o
      Allocate [0x1fffff24 to 0x1fffff27] to section .bss.Vario_driver()::toneCounter from Vario.o
      Allocate [0x1fffff28 to 0x1fffff2b] to section .bss.SX127xHal::instance from SX127xHal.o
      Allocate [0x1fffff2c to 0x1fffff2f] to section .bss.SX127xDriver::instance from SX127x.o
      Allocate [0x1fffff30 to 0x1fffff33] to section .bss.g_crsf_read_callback from BoardI6.o
      Allocate [0x1fffff34 to 0x1fffff37] to section .bss.SPI_BufferPtr from BoardI6.o
      Allocate [0x1fffff38 to 0x1fffff3b] to section .bss.ID from A7105_SPI.o
      Allocate [0x1fffff3c to 0x1fffff3f] to section .bss.AlertMessage from er9x.o
      Allocate [0x1fffff40 to 0x20000141] to section .bss.ota_crc from ELRS.o
      Allocate [0x20000142 to 0x200001d1] to section .bss.pulses2MHz from pulses.o
      Allocate [0x200001d2 to 0x2000023b] to section .bss.Xmem from menus.o
      Allocate [0x2000023c to 0x2000026f] to section .bss.Voice from audio.o
      Allocate [0x20000270 to 0x2000028f] to section .bss.s_timer from menus.o
      Allocate [0x20000290 to 0x200002af] to section .bss.g_chans512 from menus.o
      Allocate [0x200002b0 to 0x200002cf] to section .bss.Ex_chans from menus.o
      Allocate [0x200002d0 to 0x200002e7] to section .bss.CsTimer from er9x.o
      Allocate [0x200002e8 to 0x200002f7] to section .bss.s_anaFilt from er9x.o
      Allocate [0x200002f8 to 0x20000307] to section .bss.g_ppmIns from er9x.o
      Allocate [0x20000308 to 0x20000317] to section .bss.Nvs_timer from er9x.o
      Allocate [0x20000318 to 0x20000325] to section .bss.calibratedStick from menus.o
      Allocate [0x20000326 to 0x2000032f] to section .bss.theWriteFile from pers.o
      Allocate [0x20000330 to 0x20000339] to section .bss.theFile from pers.o
      Allocate [0x2000033a to 0x20000343] to section .bss.P1values from er9x.o
      Allocate [0x20000344 to 0x2000034b] to section .bss.TimeGlobals from menus.o
      Allocate [0x2000034c to 0x20000351] to section .bss.Inactivity from er9x.o
      Allocate [0x20000352 to 0x20000353] to section .bss.tmrEEPROM from er9x.o
      Allocate [0x20000354 to 0x20000355] to section .bss.g_tmr16KHz from er9x.o
      Allocate [0x20000356 to 0x20000357] to section .bss.g_latency from menus.o
      Allocate [0x20000358 to 0x20000359] to section .bss.g_LightOffCounter from er9x.o
      Allocate [0x2000035a to 0x2000035b] to section .bss.trace()::s_time from menus.o
      Allocate [0x2000035c to 0x2000035d] to section .bss.ISR_TIMER3_CAPT_vect::lastCapt from er9x.o
      Allocate [0x2000035e to 0x2000035f] to section .bss.menuBackupRestore(unsigned char)::count from menus.o
      Allocate [0x20000360 to 0x20000361] to section .bss.ActionAFHDS2A::packet_counter from AFHDS2A_a7105.o
      Allocate [0x20000362 to 0x20000363] to section .bss.mainSequence()::timer from er9x.o
      Allocate [0x20000364 to 0x20000365] to section .bss.s_eeDirtyTime10ms from pers.o
      Allocate [0x20000366 to 0x20000367] to section .bss.SPI_Size from BoardI6.o
      Allocate [0x20000368 to 0x20000369] to section .bss.GAltOffset from AFHDS2A_a7105.o
      Allocate [0x2000036a to 0x2000036b] to section .bss.B3_comp_value from pulses.o
      Allocate [0x2000036c to 0x2000036d] to section .bss.AltOffset from AFHDS2A_a7105.o
      Allocate [0x2000036e to 0x20000755] to section .bss.g_model from er9x.o
      Allocate [0x20000756 to 0x200007d5] to section .bss.telemetryRxBuffer from crossfire.o
      Allocate [0x200007d6 to 0x2000084b] to section .bss.g_eeGeneral from er9x.o
      Allocate [0x2000084c to 0x2000088c] to section .bss.g_crossfire from crossfire.o
      Allocate [0x2000088d to 0x200008c4] to section .bss.audio from er9x.o
      Allocate [0x200008c5 to 0x200008f1] to section .bss.keys from drivers.o
      Allocate [0x200008f2 to 0x2000091c] to section .bss.AFHDS2A_tel_res_cnt from AFHDS2A_a7105.o
      Allocate [0x2000091d to 0x2000092e] to section .bss.SvFifo from drivers.o
      Allocate [0x2000092f to 0x2000093e] to section .bss.outputTelemetryBuffer from crossfire.o
      Allocate [0x2000093f to 0x2000094e] to section .bss.hopping_frequency from A7105_SPI.o
      Allocate [0x2000094f to 0x2000095a] to section .bss.Last_switch from er9x.o
      Allocate [0x2000095b to 0x20000964] to section .bss.TimerConfig from er9x.o
      Allocate [0x20000965 to 0x2000096d] to section .bss.Rotary from er9x.o
      Allocate [0x2000096e to 0x20000975] to section .bss.Nvs_state from er9x.o
      Allocate [0x20000976 to 0x20000979] to section .bss.phyStick from menus.o
      Allocate [0x2000097a to 0x2000097d] to section .bss.PopupData from menus.o
      Allocate [0x2000097e to 0x20000980] to section .bss.g_crsf_config from crossfire.o
      Allocate [0x20000981 to 0x20000983] to section .bss.MenuControl from menus.o
      Allocate [0x20000984 to 0x20000984] to section .bss.tick10ms from er9x.o
      Allocate [0x20000985 to 0x20000985] to section .bss.telemetryRxBufferCount from crossfire.o
      Allocate [0x20000986 to 0x20000986] to section .bss.sysFlags from er9x.o
      Allocate [0x20000987 to 0x20000987] to section .bss.stickMoved from er9x.o
      Allocate [0x20000988 to 0x20000988] to section .bss.serialDat0 from pulses.o
      Allocate [0x20000989 to 0x20000989] to section .bss.scroll_disabled from menus.o
      Allocate [0x2000098a to 0x2000098a] to section .bss.scrollUD from menus.o
      Allocate [0x2000098b to 0x2000098b] to section .bss.scrollLR from menus.o
      Allocate [0x2000098c to 0x2000098c] to section .bss.s_pgOfs from menus.o
      Allocate [0x2000098d to 0x2000098d] to section .bss.s_noHi from menus.o
      Allocate [0x2000098e to 0x2000098e] to section .bss.s_moveMode from menus.o
      Allocate [0x2000098f to 0x2000098f] to section .bss.s_mixMaxSel from menus.o
      Allocate [0x20000990 to 0x20000990] to section .bss.s_evt from drivers.o
      Allocate [0x20000991 to 0x20000991] to section .bss.s_editing from menus.o
      Allocate [0x20000992 to 0x20000992] to section .bss.s_editMode from menus.o
      Allocate [0x20000993 to 0x20000993] to section .bss.pxxFlag from pulses.o
      Allocate [0x20000994 to 0x20000994] to section .bss.protocol_flags from A7105_SPI.o
      Allocate [0x20000995 to 0x20000995] to section .bss.ppmInState from er9x.o
      Allocate [0x20000996 to 0x20000996] to section .bss.ppmInAvailable from er9x.o
      Allocate [0x20000997 to 0x20000997] to section .bss.plotType from lcd.o
      Allocate [0x20000998 to 0x20000998] to section .bss.packet_count from A7105_SPI.o
      Allocate [0x20000999 to 0x20000999] to section .bss.outputTelemetryBufferTrigger from crossfire.o
      Allocate [0x2000099a to 0x2000099a] to section .bss.outputTelemetryBufferSize from crossfire.o
      Allocate [0x2000099b to 0x2000099b] to section .bss.mixToDelete from menus.o
      Allocate [0x2000099c to 0x2000099c] to section .bss.hopping_frequency_no from A7105_SPI.o
      Allocate [0x2000099d to 0x2000099d] to section .bss.heartbeat from pulses.o
      Allocate [0x2000099e to 0x2000099e] to section .bss.g_vbat100mV from er9x.o
      Allocate [0x2000099f to 0x2000099f] to section .bss.g_posHorz from menus.o
      Allocate [0x200009a0 to 0x200009a0] to section .bss.g_menuStackPtr from er9x.o
      Allocate [0x200009a1 to 0x200009a1] to section .bss.g_blinkTmr10ms from drivers.o
      Allocate [0x200009a2 to 0x200009a2] to section .bss.bpanaCenter from menus.o
      Allocate [0x200009a3 to 0x200009a3] to section .bss.bind_phase from A7105_SPI.o
      Allocate [0x200009a4 to 0x200009a4] to section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp from menus.o
      Allocate [0x200009a5 to 0x200009a5] to section .bss.audioQueue::driver()::toneCounter from er9x.o
      Allocate [0x200009a6 to 0x200009a6] to section .bss.perMain()::repeater from er9x.o
      Allocate [0x200009a7 to 0x200009a7] to section .bss.perMain()::alertKey from er9x.o
      Allocate [0x200009a8 to 0x200009a8] to section .bss.perMain()::s_batCheck from er9x.o
      Allocate [0x200009a9 to 0x200009a9] to section .bss.menuProc0(unsigned char)::trimSwLock from menus.o
      Allocate [0x200009aa to 0x200009aa] to section .bss.per10ms()::current from drivers.o
      Allocate [0x200009ab to 0x200009ab] to section .bss.perOut(short*, unsigned char)::sticky from menus.o
      Allocate [0x200009ac to 0x200009ac] to section .bss.check_backlight_voice()::tmr10ms from er9x.o
      Allocate [0x200009ad to 0x200009ad] to section .bss.menuProcModelSelect(unsigned char)::mstate2 from menus.o
      Allocate [0x200009ae to 0x200009ae] to section .bss.menuProcModelSelect(unsigned char)::sel_editMode from menus.o
      Allocate [0x200009af to 0x200009af] to section .bss.menuProcVoiceAlarm(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b0 to 0x200009b0] to section .bss.menuProcModelIndex(unsigned char)::mstate from menus.o
      Allocate [0x200009b1 to 0x200009b1] to section .bss.menuProcTelemetry(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b2 to 0x200009b2] to section .bss.menuBackupRestore(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b3 to 0x200009b3] to section .bss.menuProcVoiceOne(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b4 to 0x200009b4] to section .bss.menuProcProtocol(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b5 to 0x200009b5] to section .bss.menuProcCurveOne(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b6 to 0x200009b6] to section .bss.menuProcCurveOne(unsigned char)::dfltCrv from menus.o
      Allocate [0x200009b7 to 0x200009b7] to section .bss.menuSetFailsafe(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b8 to 0x200009b8] to section .bss.menuProcGlobals(unsigned char)::mstate2 from menus.o
      Allocate [0x200009b9 to 0x200009b9] to section .bss.menuModelPhases(unsigned char)::mstate2 from menus.o
      Allocate [0x200009ba to 0x200009ba] to section .bss.A7105_AntSwitch()::sw from A7105_SPI.o
      Allocate [0x200009bb to 0x200009bb] to section .bss.menuProcMixOne(unsigned char)::mstate2 from menus.o
      Allocate [0x200009bc to 0x200009bc] to section .bss.menuRangeBind(unsigned char)::timer from menus.o
      Allocate [0x200009bd to 0x200009bd] to section .bss.menuProcIndex(unsigned char)::mstate from menus.o
      Allocate [0x200009be to 0x200009be] to section .bss.menuProcCurve(unsigned char)::mstate2 from menus.o
      Allocate [0x200009bf to 0x200009bf] to section .bss.ActionAFHDS2A::packet_type from AFHDS2A_a7105.o
      Allocate [0x200009c0 to 0x200009c0] to section .bss.menuScaleOne(unsigned char)::mstate2 from menus.o
      Allocate [0x200009c1 to 0x200009c1] to section .bss.menuPhaseOne(unsigned char)::mstate2 from menus.o
      Allocate [0x200009c2 to 0x200009c2] to section .bss.perOutPhase(short*, unsigned char)::lastPhase from menus.o
      Allocate [0x200009c3 to 0x200009c3] to section .bss.menuRXSetup(unsigned char)::mstate2 from menus.o
      Allocate [0x200009c4 to 0x200009c4] to section .bss.menuProcMix(unsigned char)::mstate2 from menus.o
      Allocate [0x200009c5 to 0x200009c5] to section .bss.s_currIdx from menus.o
      Allocate [0x200009c6 to 0x200009c6] to section .bss.Columns from menus.o
      Allocate [0x200009c7 to 0x200009c7] to section .bss.inputs_subview from menus.o
      Allocate [0x200009c8 to 0x200009c8] to section .bss.s_eeLongTimer from pers.o
      Allocate [0x200009c9 to 0x200009c9] to section .bss.LongMenuTimer from er9x.o
      Allocate [0x200009ca to 0x200009ca] to section .bss.s_moveMixIdx from menus.o
      Allocate [0x200009cb to 0x200009cb] to section .bss.s_eeDirtyMsk from pers.o
      Allocate [0x200009cc to 0x200009cc] to section .bss.s_currMixIdx from menus.o
      Allocate [0x200009cd to 0x200009cd] to section .bss.s_currDestCh from menus.o
      Allocate [0x200009ce to 0x200009ce] to section .bss.s_curveChan from menus.o
      Allocate [0x200009cf to 0x200009cf] to section .bss.IlinesCount from menus.o
      Allocate [0x200009d0 to 0x200009d0] to section .bss.s_expoChan from menus.o
      Allocate [0x200009d1 to 0x200009d1] to section .bss.VarioPlay from Vario.o
      Allocate [0x200009d2 to 0x200009d2] to section .bss.ThrottleStickyOn from menus.o
      Allocate [0x200009d3 to 0x200009d3] to section .bss.Tevent from er9x.o
      Allocate [0x200009d4 to 0x200009d4] to section .bss.SystemOptions from er9x.o
      Allocate [0x200009d5 to 0x200009d5] to section .bss.StickScrollTimer from er9x.o
      Allocate [0x200009d6 to 0x200009d6] to section .bss.StickScrollAllowed from er9x.o
      Allocate [0x200009d7 to 0x200009d7] to section .bss.StepSize from er9x.o
      Allocate [0x200009d8 to 0x200009d8] to section .bss.RotaryState from menus.o
      Allocate [0x200009d9 to 0x200009d9] to section .bss.RadioState from A7105_SPI.o
      Allocate [0x200009da to 0x200009da] to section .bss.RadioActive from pulses.o
      Allocate [0x200009db to 0x200009db] to section .bss.PausePulses from pulses.o
      Allocate [0x200009dc to 0x200009dc] to section .bss.Main_running from er9x.o
      Allocate [0x200009dd to 0x200009dd] to section .bss.M_longMenuTimer from menus.o
      Allocate [0x200009de to 0x200009de] to section .bss.Lcd_lastPos from lcd.o
      Allocate [0x200009df to 0x200009df] to section .bss.LcdLock from lcd.o
      Allocate [0x200009e0 to 0x200009e0] to section .bss.InverseBlink from menus.o
      Allocate [0x200009e1 to 0x200009e1] to section .bss.EnterMenu from er9x.o
      Allocate [0x200009e2 to 0x200009e2] to section .bss.EepromActive from lcd.o
      Allocate [0x200009e3 to 0x200009e3] to section .bss.Ee_lock from pers.o
      Allocate [0x200009e4 to 0x200009e4] to section .bss.EditType from menus.o
      Allocate [0x200009e5 to 0x200009e5] to section .bss.EditColumns from menus.o
      Allocate [0x200009e6 to 0x200009e6] to section .bss.DupSub from menus.o
      Allocate [0x200009e7 to 0x200009e7] to section .bss.DupIfNonzero from menus.o
      Allocate [0x200009e8 to 0x200009e8] to section .bss.Current_protocol from pulses.o
      Allocate [0x200009e9 to 0x200009e9] to section .bss.CurrentVolume from er9x.o
      Allocate [0x200009ea to 0x200009ea] to section .bss.CurrentPhase from menus.o
      Allocate [0x200009eb to 0x200009eb] to section .bss.CalcScaleNest from menus.o
      Allocate [0x200009ec to 0x200009ec] to section .bss.Backup_RestoreRunning from er9x.o
      Allocate [0x200009f0 to 0x200009f3] to section .data.g_crossfile_baudrate_index from crossfire.o
      Allocate [0x200009f4 to 0x200009f7] to section .data.AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      Allocate [0x200009f8 to 0x200009fb] to section .data.ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      Allocate [0x200009ee to 0x200009ef] to section .data.A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      Allocate [0x200009fc to 0x200009ff] to section .data.AlarmControl from er9x.o
      Allocate [0x200009ed to 0x200009ed] to section .data.prev_power from A7105_SPI.o
      Allocate [0x20000a00 to 0x20000a00] to section .data.frskyUsrStreaming from A7105_SPI.o
  Executing place in [0x20000a01 to 0x200016ff] (1 inputs selected)
      Candidate regions: [0x1ffff800 to 0x200017ff]
      Allocate [0x20000a08 to 0x20000b07] to block heap from [ Linker created ]


***************************************************************************************
***                                                                                 ***
***                              Normalize relocations                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                Construct veneers                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMTimCapture
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating sei
  Relocating cli
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating crsf_send_data
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating putVoiceQueue(unsigned char)
  Relocating setVolume(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating ISR_TIMER3_CAPT_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating Backup_RestoreRunning
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating ppmInState
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating ISR_TIMER3_CAPT_vect::lastCapt
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating frskyUsrStreaming
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating audioQueue::audioQueue()
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating Voice
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating startSerialVoice()
  Relocating stopSerialVoice()
  Relocating getSvFifo()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating SvFifo
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating telemItemValid(unsigned char)
  Relocating singleBar(unsigned char, unsigned char, short)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating serialVoiceBlockSend(unsigned char*, unsigned char)
  Relocating serialVoiceWaitByte(unsigned char)
  Relocating progressBar()
  Relocating brSubHead(char const*)
  Relocating menuBackupRestore(unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispInVExVDbl(unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.8]
  Relocating UnitsString
  Relocating [.rodata..L.str.9]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.10]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.11]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating [.rodata..L.str.16]
  Relocating [.rodata..L.str.17]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.18]
  Relocating mixToDelete
  Relocating [.rodata..L.str.19]
  Relocating [.rodata..L.str.20]
  Relocating [.rodata..L.str.21]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.22]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.23]
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.26]
  Relocating [.rodata..L.str.27]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.28]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating [.rodata..L.str.30]
  Relocating menuBackupRestore(unsigned char)::mstate2
  Relocating [.rodata..L.str.31]
  Relocating [.rodata..L.str.32]
  Relocating menuBackupRestore(unsigned char)::count
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.36]
  Relocating [.rodata..L.str.37]
  Relocating [.rodata..L.str.38]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.39]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.40]
  Relocating [.rodata..L.str.41]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.50]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.67]
  Relocating sticks
  Relocating [.rodata..L.str.68]
  Relocating [.rodata..L.str.69]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.85]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.86]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.99]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating Str_Protocol
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.122]
  Relocating [.rodata..L.str.123]
  Relocating [.rodata..L.str.124]
  Relocating [.rodata..L.str.125]
  Relocating [.rodata..L.str.126]
  Relocating [.rodata..L.str.127]
  Relocating [.rodata..L.str.128]
  Relocating [.rodata..L.str.129]
  Relocating [.rodata..L.str.130]
  Relocating [.rodata..L.str.131]
  Relocating [.rodata..L.str.132]
  Relocating MixPopList
  Relocating [.rodata..L.str.133]
  Relocating [.rodata..L.str.134]
  Relocating [.rodata..L.str.135]
  Relocating [.rodata..L.str.136]
  Relocating [.rodata..L.str.137]
  Relocating [.rodata..L.str.138]
  Relocating [.rodata..L.str.139]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating Vario_play(int, bool)
  Relocating Vario_driver()
  Relocating WorkBuff
  Relocating LoadBuff
  Relocating VarioPlay
  Relocating VarioTab
  Relocating Vario_driver()::toneCounter
  Relocating ActionAFHDS
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating ModuleSyncStatus::update(unsigned short, short)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating bool getCrossfireTelemetryValue<2>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<4>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<1>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<3>(unsigned char, int&)
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crsf_current_period()
  Relocating crsf_init()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_crossfile_baudrate_index
  Relocating g_crsf_config
  Relocating moduleSyncStatus
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating crossfireTelemetryCallback
  Relocating CROSSFIRE_PERIODS
  Relocating CROSSFIRE_BAUDRATES
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __ashldi3
  Relocating __lshrdi3
  Relocating __divsi3
  Relocating __udivsi3
  Relocating __aeabi_uidivmod
  Relocating __aeabi_idivmod
  Relocating div
  Relocating memcmp
  Relocating memmove
  Relocating memcpy
  Relocating __aeabi_memclr8


***************************************************************************************
***                                                                                 ***
***                               Synthetic sections                                ***
***                                                                                 ***
***************************************************************************************

  Create copy of block tdata:
      [0x0000f7a7 size 0]
  Create placeholder section for block heap
  Create placeholder section for block stack


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMTimCapture
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating sei
  Relocating cli
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating crsf_send_data
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating putVoiceQueue(unsigned char)
  Relocating setVolume(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating ISR_TIMER3_CAPT_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating Backup_RestoreRunning
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating ppmInState
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating ISR_TIMER3_CAPT_vect::lastCapt
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating frskyUsrStreaming
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating audioQueue::audioQueue()
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating Voice
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating startSerialVoice()
  Relocating stopSerialVoice()
  Relocating getSvFifo()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating SvFifo
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating telemItemValid(unsigned char)
  Relocating singleBar(unsigned char, unsigned char, short)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating serialVoiceBlockSend(unsigned char*, unsigned char)
  Relocating serialVoiceWaitByte(unsigned char)
  Relocating progressBar()
  Relocating brSubHead(char const*)
  Relocating menuBackupRestore(unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispInVExVDbl(unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.8]
  Relocating UnitsString
  Relocating [.rodata..L.str.9]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.10]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.11]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating [.rodata..L.str.16]
  Relocating [.rodata..L.str.17]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.18]
  Relocating mixToDelete
  Relocating [.rodata..L.str.19]
  Relocating [.rodata..L.str.20]
  Relocating [.rodata..L.str.21]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.22]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.23]
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.26]
  Relocating [.rodata..L.str.27]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.28]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating [.rodata..L.str.30]
  Relocating menuBackupRestore(unsigned char)::mstate2
  Relocating [.rodata..L.str.31]
  Relocating [.rodata..L.str.32]
  Relocating menuBackupRestore(unsigned char)::count
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.36]
  Relocating [.rodata..L.str.37]
  Relocating [.rodata..L.str.38]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.39]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.40]
  Relocating [.rodata..L.str.41]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.50]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.67]
  Relocating sticks
  Relocating [.rodata..L.str.68]
  Relocating [.rodata..L.str.69]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.85]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.86]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.99]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating Str_Protocol
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.122]
  Relocating [.rodata..L.str.123]
  Relocating [.rodata..L.str.124]
  Relocating [.rodata..L.str.125]
  Relocating [.rodata..L.str.126]
  Relocating [.rodata..L.str.127]
  Relocating [.rodata..L.str.128]
  Relocating [.rodata..L.str.129]
  Relocating [.rodata..L.str.130]
  Relocating [.rodata..L.str.131]
  Relocating [.rodata..L.str.132]
  Relocating MixPopList
  Relocating [.rodata..L.str.133]
  Relocating [.rodata..L.str.134]
  Relocating [.rodata..L.str.135]
  Relocating [.rodata..L.str.136]
  Relocating [.rodata..L.str.137]
  Relocating [.rodata..L.str.138]
  Relocating [.rodata..L.str.139]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating Vario_play(int, bool)
  Relocating Vario_driver()
  Relocating WorkBuff
  Relocating LoadBuff
  Relocating VarioPlay
  Relocating VarioTab
  Relocating Vario_driver()::toneCounter
  Relocating ActionAFHDS
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating ModuleSyncStatus::update(unsigned short, short)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating bool getCrossfireTelemetryValue<2>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<4>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<1>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<3>(unsigned char, int&)
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crsf_current_period()
  Relocating crsf_init()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_crossfile_baudrate_index
  Relocating g_crsf_config
  Relocating moduleSyncStatus
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating crossfireTelemetryCallback
  Relocating CROSSFIRE_PERIODS
  Relocating CROSSFIRE_BAUDRATES
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __ashldi3
  Relocating __lshrdi3
  Relocating __divsi3
  Relocating __udivsi3
  Relocating __aeabi_uidivmod
  Relocating __aeabi_idivmod
  Relocating div
  Relocating memcmp
  Relocating memmove
  Relocating memcpy
  Relocating __aeabi_memclr8
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                              Create block symbols                               ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
  Creating symbols for block stack
      Define global symbol __stack_end__ = 0x20001800
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                              Thread-local storage                               ***
***                                                                                 ***
***************************************************************************************

  Total size (excluding padding and alignment): 0 bytes
  Define global symbol __thread_pointer$ = 0x00000000


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMTimCapture
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating sei
  Relocating cli
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating crsf_send_data
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating putVoiceQueue(unsigned char)
  Relocating setVolume(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating ISR_TIMER3_CAPT_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating Backup_RestoreRunning
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating ppmInState
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating ISR_TIMER3_CAPT_vect::lastCapt
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating frskyUsrStreaming
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating audioQueue::audioQueue()
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating Voice
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating startSerialVoice()
  Relocating stopSerialVoice()
  Relocating getSvFifo()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating SvFifo
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating telemItemValid(unsigned char)
  Relocating singleBar(unsigned char, unsigned char, short)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating serialVoiceBlockSend(unsigned char*, unsigned char)
  Relocating serialVoiceWaitByte(unsigned char)
  Relocating progressBar()
  Relocating brSubHead(char const*)
  Relocating menuBackupRestore(unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispInVExVDbl(unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.8]
  Relocating UnitsString
  Relocating [.rodata..L.str.9]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.10]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.11]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating [.rodata..L.str.16]
  Relocating [.rodata..L.str.17]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.18]
  Relocating mixToDelete
  Relocating [.rodata..L.str.19]
  Relocating [.rodata..L.str.20]
  Relocating [.rodata..L.str.21]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.22]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.23]
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.26]
  Relocating [.rodata..L.str.27]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.28]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating [.rodata..L.str.30]
  Relocating menuBackupRestore(unsigned char)::mstate2
  Relocating [.rodata..L.str.31]
  Relocating [.rodata..L.str.32]
  Relocating menuBackupRestore(unsigned char)::count
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.36]
  Relocating [.rodata..L.str.37]
  Relocating [.rodata..L.str.38]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.39]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.40]
  Relocating [.rodata..L.str.41]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.50]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.67]
  Relocating sticks
  Relocating [.rodata..L.str.68]
  Relocating [.rodata..L.str.69]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.85]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.86]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.99]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating Str_Protocol
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.122]
  Relocating [.rodata..L.str.123]
  Relocating [.rodata..L.str.124]
  Relocating [.rodata..L.str.125]
  Relocating [.rodata..L.str.126]
  Relocating [.rodata..L.str.127]
  Relocating [.rodata..L.str.128]
  Relocating [.rodata..L.str.129]
  Relocating [.rodata..L.str.130]
  Relocating [.rodata..L.str.131]
  Relocating [.rodata..L.str.132]
  Relocating MixPopList
  Relocating [.rodata..L.str.133]
  Relocating [.rodata..L.str.134]
  Relocating [.rodata..L.str.135]
  Relocating [.rodata..L.str.136]
  Relocating [.rodata..L.str.137]
  Relocating [.rodata..L.str.138]
  Relocating [.rodata..L.str.139]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating Vario_play(int, bool)
  Relocating Vario_driver()
  Relocating WorkBuff
  Relocating LoadBuff
  Relocating VarioPlay
  Relocating VarioTab
  Relocating Vario_driver()::toneCounter
  Relocating ActionAFHDS
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating ModuleSyncStatus::update(unsigned short, short)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating bool getCrossfireTelemetryValue<2>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<4>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<1>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<3>(unsigned char, int&)
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crsf_current_period()
  Relocating crsf_init()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_crossfile_baudrate_index
  Relocating g_crsf_config
  Relocating moduleSyncStatus
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating crossfireTelemetryCallback
  Relocating CROSSFIRE_PERIODS
  Relocating CROSSFIRE_BAUDRATES
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __ashldi3
  Relocating __lshrdi3
  Relocating __divsi3
  Relocating __udivsi3
  Relocating __aeabi_uidivmod
  Relocating __aeabi_idivmod
  Relocating div
  Relocating memcmp
  Relocating memmove
  Relocating memcpy
  Relocating __aeabi_memclr8
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]


***************************************************************************************
***                                                                                 ***
***                             Warn unintended double                              ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Make inittab                                   ***
***                                                                                 ***
***************************************************************************************

  Applying default initialization methods for mapped sections
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
  Applying user initialization 'auto': (65 inputs)
      SystemCoreClock from system_MKL16Z4.o
      TX_name from BoardI6.o
      AlarmControl from er9x.o
      prev_power from A7105_SPI.o
      frskyUsrStreaming from A7105_SPI.o
      A7105_AdjustLOBaseFreq()::old_offset from A7105_SPI.o
      AFHDS2A_update_telemetry()::Dacc from AFHDS2A_a7105.o
      pulses2MHzptr from pulses.o
      ISR_TIMER1_COMPA_vect::pulsePtr from pulses.o
      ExpressLRS_AirRateConfig from common.o
      ExpressLRS_AirRateRFperf from common.o
      connectionState from common.o
      connectionStatePrev from common.o
      BindingUID from common.o
      SX127xDriver::RXdoneCallback from SX127x.o
      SX127xDriver::TXdoneCallback from SX127x.o
      SX127xDriver::TXtimeout from SX127x.o
      SX127xDriver::RXtimeout from SX127x.o
      connectionHasModelMatch from ELRS.o
      POWERMGNT::CurrentPower from POWERMGNT.o
      POWERMGNT::FanEnableThreshold from POWERMGNT.o
      g_crossfile_baudrate_index from crossfire.o
      __RAL_global_locale from libc2.o (libc_v6m_t_le_eabi_small.a)
      __RAL_rand_next from libc2.o (libc_v6m_t_le_eabi_small.a)
      __ungot from libc2.o (libc_v6m_t_le_eabi_small.a)
      heap from libc2.o (libc_v6m_t_le_eabi_small.a)
      stderr from libc2.o (libc_v6m_t_le_eabi_small.a)
      stdout from libc2.o (libc_v6m_t_le_eabi_small.a)
      streams from libc2.o (libc_v6m_t_le_eabi_small.a)
  Applying user initialization 'auto': (0 inputs)
  Applying user initialization 'do not initialize': (1 inputs)
      [heap] from [ Linker created ]
  Applying user initialization 'do not initialize': (1 inputs)
      [stack] from [ Linker created ]
  Initialize by auto:
      [0x200009ed to 0x200009ed] .data.prev_power [from A7105_SPI.o]
      [0x200009ee to 0x200009ef] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x200009f0 to 0x200009f3] .data.g_crossfile_baudrate_index [from crossfire.o]
      [0x200009f4 to 0x200009f7] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x200009f8 to 0x200009fb] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x200009fc to 0x200009ff] .data.AlarmControl [from er9x.o]
      [0x20000a00 to 0x20000a00] .data.frskyUsrStreaming [from A7105_SPI.o]
  Selecting best packing for [0x200009ed to 0x20000a00], size=20
      Algorithms:
          Copy with packing=none:     image size=20 + algorithm code=26 for 46 total bytes
          Copy with packing=packbits: image size=24 + algorithm code=52 for 76 total bytes, 30 worse than plain copy
          Copy with packing=lzss:     image size=22 + algorithm code=74 for 96 total bytes, 50 worse than plain copy
          Copy with packing=zpak:     image size=16 + algorithm code=40 for 56 total bytes, 10 worse than plain copy
      Selected packing=copy
  Initialize by zero:
      [0x1ffff800 to 0x1ffff807] .bss.AFHDS2A_tel_status [from AFHDS2A_a7105.o]
      [0x1ffff808 to 0x1ffffc07] .bss.DisplayBuf [from lcd.o]
      [0x1ffffc08 to 0x1ffffd07] .bss.Output [from menus.o]
      [0x1ffffd08 to 0x1ffffdb3] .bss.AFHDS2A_tel_data [from AFHDS2A_a7105.o]
      [0x1ffffdb4 to 0x1ffffe03] .bss.Fade [from menus.o]
      [0x1ffffe04 to 0x1ffffe43] .bss.eeFs [from file.o]
      [0x1ffffe44 to 0x1ffffe73] .bss.Radio [from ELRS.o]
      [0x1ffffe74 to 0x1ffffe9b] .bss.packet [from A7105_SPI.o]
      [0x1ffffe9c to 0x1ffffeaf] .bss.g_menuStack [from er9x.o]
      [0x1ffffeb0 to 0x1ffffebf] .bss.WorkBuff [from Vario.o]
      [0x1ffffec0 to 0x1ffffecf] .bss.MspSender [from ELRS.o]
      [0x1ffffed0 to 0x1ffffedf] .bss.LoadBuff [from Vario.o]
      [0x1ffffee0 to 0x1ffffeeb] .bss.i2c_buffer [from drivers.o]
      [0x1ffffeec to 0x1ffffef7] .bss._ZL16moduleSyncStatus [from crossfire.o]
      [0x1ffffef8 to 0x1fffff03] .bss.TelemetryReceiver [from ELRS.o]
      [0x1fffff04 to 0x1fffff0f] .bss.LQCalc [from ELRS.o]
      [0x1fffff10 to 0x1fffff13] .bss.telemetryErrors [from crossfire.o]
      [0x1fffff14 to 0x1fffff17] .bss.hal [from SX127x.o]
      [0x1fffff18 to 0x1fffff1b] .bss.g_tmr10ms [from drivers.o]
      [0x1fffff1c to 0x1fffff1f] .bss.crossfireTelemetryCallback [from crossfire.o]
      [0x1fffff20 to 0x1fffff23] .bss._ZZL7perMainvE7lastTMR [from er9x.o]
      [0x1fffff24 to 0x1fffff27] .bss._ZZ12Vario_drivervE11toneCounter [from Vario.o]
      [0x1fffff28 to 0x1fffff2b] .bss._ZN9SX127xHal8instanceE [from SX127xHal.o]
      [0x1fffff2c to 0x1fffff2f] .bss._ZN12SX127xDriver8instanceE [from SX127x.o]
      [0x1fffff30 to 0x1fffff33] .bss._ZL20g_crsf_read_callback [from BoardI6.o]
      [0x1fffff34 to 0x1fffff37] .bss.SPI_BufferPtr [from BoardI6.o]
      [0x1fffff38 to 0x1fffff3b] .bss.ID [from A7105_SPI.o]
      [0x1fffff3c to 0x1fffff3f] .bss.AlertMessage [from er9x.o]
      [0x1fffff40 to 0x20000141] .bss.ota_crc [from ELRS.o]
      [0x20000142 to 0x200001d1] .bss.pulses2MHz [from pulses.o]
      [0x200001d2 to 0x2000023b] .bss.Xmem [from menus.o]
      [0x2000023c to 0x2000026f] .bss.Voice [from audio.o]
      [0x20000270 to 0x2000028f] .bss.s_timer [from menus.o]
      [0x20000290 to 0x200002af] .bss.g_chans512 [from menus.o]
      [0x200002b0 to 0x200002cf] .bss.Ex_chans [from menus.o]
      [0x200002d0 to 0x200002e7] .bss.CsTimer [from er9x.o]
      [0x200002e8 to 0x200002f7] .bss.s_anaFilt [from er9x.o]
      [0x200002f8 to 0x20000307] .bss.g_ppmIns [from er9x.o]
      [0x20000308 to 0x20000317] .bss.Nvs_timer [from er9x.o]
      [0x20000318 to 0x20000325] .bss.calibratedStick [from menus.o]
      [0x20000326 to 0x2000032f] .bss.theWriteFile [from pers.o]
      [0x20000330 to 0x20000339] .bss.theFile [from pers.o]
      [0x2000033a to 0x20000343] .bss.P1values [from er9x.o]
      [0x20000344 to 0x2000034b] .bss.TimeGlobals [from menus.o]
      [0x2000034c to 0x20000351] .bss.Inactivity [from er9x.o]
      [0x20000352 to 0x20000353] .bss.tmrEEPROM [from er9x.o]
      [0x20000354 to 0x20000355] .bss.g_tmr16KHz [from er9x.o]
      [0x20000356 to 0x20000357] .bss.g_latency [from menus.o]
      [0x20000358 to 0x20000359] .bss.g_LightOffCounter [from er9x.o]
      [0x2000035a to 0x2000035b] .bss._ZZ5tracevE6s_time [from menus.o]
      [0x2000035c to 0x2000035d] .bss._ZZ20ISR_TIMER3_CAPT_vectE8lastCapt [from er9x.o]
      [0x2000035e to 0x2000035f] .bss._ZZ17menuBackupRestorehE5count [from menus.o]
      [0x20000360 to 0x20000361] .bss._ZZ13ActionAFHDS2AE14packet_counter [from AFHDS2A_a7105.o]
      [0x20000362 to 0x20000363] .bss._ZZ12mainSequencevE5timer [from er9x.o]
      [0x20000364 to 0x20000365] .bss._ZL17s_eeDirtyTime10ms [from pers.o]
      [0x20000366 to 0x20000367] .bss.SPI_Size [from BoardI6.o]
      [0x20000368 to 0x20000369] .bss.GAltOffset [from AFHDS2A_a7105.o]
      [0x2000036a to 0x2000036b] .bss.B3_comp_value [from pulses.o]
      [0x2000036c to 0x2000036d] .bss.AltOffset [from AFHDS2A_a7105.o]
      [0x2000036e to 0x20000755] .bss.g_model [from er9x.o]
      [0x20000756 to 0x200007d5] .bss.telemetryRxBuffer [from crossfire.o]
      [0x200007d6 to 0x2000084b] .bss.g_eeGeneral [from er9x.o]
      [0x2000084c to 0x2000088c] .bss.g_crossfire [from crossfire.o]
      [0x2000088d to 0x200008c4] .bss.audio [from er9x.o]
      [0x200008c5 to 0x200008f1] .bss.keys [from drivers.o]
      [0x200008f2 to 0x2000091c] .bss.AFHDS2A_tel_res_cnt [from AFHDS2A_a7105.o]
      [0x2000091d to 0x2000092e] .bss.SvFifo [from drivers.o]
      [0x2000092f to 0x2000093e] .bss.outputTelemetryBuffer [from crossfire.o]
      [0x2000093f to 0x2000094e] .bss.hopping_frequency [from A7105_SPI.o]
      [0x2000094f to 0x2000095a] .bss.Last_switch [from er9x.o]
      [0x2000095b to 0x20000964] .bss.TimerConfig [from er9x.o]
      [0x20000965 to 0x2000096d] .bss.Rotary [from er9x.o]
      [0x2000096e to 0x20000975] .bss.Nvs_state [from er9x.o]
      [0x20000976 to 0x20000979] .bss.phyStick [from menus.o]
      [0x2000097a to 0x2000097d] .bss.PopupData [from menus.o]
      [0x2000097e to 0x20000980] .bss.g_crsf_config [from crossfire.o]
      [0x20000981 to 0x20000983] .bss.MenuControl [from menus.o]
      [0x20000984 to 0x20000984] .bss.tick10ms [from er9x.o]
      [0x20000985 to 0x20000985] .bss.telemetryRxBufferCount [from crossfire.o]
      [0x20000986 to 0x20000986] .bss.sysFlags [from er9x.o]
      [0x20000987 to 0x20000987] .bss.stickMoved [from er9x.o]
      [0x20000988 to 0x20000988] .bss.serialDat0 [from pulses.o]
      [0x20000989 to 0x20000989] .bss.scroll_disabled [from menus.o]
      [0x2000098a to 0x2000098a] .bss.scrollUD [from menus.o]
      [0x2000098b to 0x2000098b] .bss.scrollLR [from menus.o]
      [0x2000098c to 0x2000098c] .bss.s_pgOfs [from menus.o]
      [0x2000098d to 0x2000098d] .bss.s_noHi [from menus.o]
      [0x2000098e to 0x2000098e] .bss.s_moveMode [from menus.o]
      [0x2000098f to 0x2000098f] .bss.s_mixMaxSel [from menus.o]
      [0x20000990 to 0x20000990] .bss.s_evt [from drivers.o]
      [0x20000991 to 0x20000991] .bss.s_editing [from menus.o]
      [0x20000992 to 0x20000992] .bss.s_editMode [from menus.o]
      [0x20000993 to 0x20000993] .bss.pxxFlag [from pulses.o]
      [0x20000994 to 0x20000994] .bss.protocol_flags [from A7105_SPI.o]
      [0x20000995 to 0x20000995] .bss.ppmInState [from er9x.o]
      [0x20000996 to 0x20000996] .bss.ppmInAvailable [from er9x.o]
      [0x20000997 to 0x20000997] .bss.plotType [from lcd.o]
      [0x20000998 to 0x20000998] .bss.packet_count [from A7105_SPI.o]
      [0x20000999 to 0x20000999] .bss.outputTelemetryBufferTrigger [from crossfire.o]
      [0x2000099a to 0x2000099a] .bss.outputTelemetryBufferSize [from crossfire.o]
      [0x2000099b to 0x2000099b] .bss.mixToDelete [from menus.o]
      [0x2000099c to 0x2000099c] .bss.hopping_frequency_no [from A7105_SPI.o]
      [0x2000099d to 0x2000099d] .bss.heartbeat [from pulses.o]
      [0x2000099e to 0x2000099e] .bss.g_vbat100mV [from er9x.o]
      [0x2000099f to 0x2000099f] .bss.g_posHorz [from menus.o]
      [0x200009a0 to 0x200009a0] .bss.g_menuStackPtr [from er9x.o]
      [0x200009a1 to 0x200009a1] .bss.g_blinkTmr10ms [from drivers.o]
      [0x200009a2 to 0x200009a2] .bss.bpanaCenter [from menus.o]
      [0x200009a3 to 0x200009a3] .bss.bind_phase [from A7105_SPI.o]
      [0x200009a4 to 0x200009a4] .bss._ZZN7MState213check_columnsEhhE6lateUp [from menus.o]
      [0x200009a5 to 0x200009a5] .bss._ZZN10audioQueue6driverEvE11toneCounter [from er9x.o]
      [0x200009a6 to 0x200009a6] .bss._ZZL7perMainvE8repeater [from er9x.o]
      [0x200009a7 to 0x200009a7] .bss._ZZL7perMainvE8alertKey [from er9x.o]
      [0x200009a8 to 0x200009a8] .bss._ZZL7perMainvE10s_batCheck [from er9x.o]
      [0x200009a9 to 0x200009a9] .bss._ZZ9menuProc0hE10trimSwLock [from menus.o]
      [0x200009aa to 0x200009aa] .bss._ZZ7per10msvE7current [from drivers.o]
      [0x200009ab to 0x200009ab] .bss._ZZ6perOutPshE6sticky [from menus.o]
      [0x200009ac to 0x200009ac] .bss._ZZ21check_backlight_voicevE7tmr10ms [from er9x.o]
      [0x200009ad to 0x200009ad] .bss._ZZ19menuProcModelSelecthE7mstate2 [from menus.o]
      [0x200009ae to 0x200009ae] .bss._ZZ19menuProcModelSelecthE12sel_editMode [from menus.o]
      [0x200009af to 0x200009af] .bss._ZZ18menuProcVoiceAlarmhE7mstate2 [from menus.o]
      [0x200009b0 to 0x200009b0] .bss._ZZ18menuProcModelIndexhE6mstate [from menus.o]
      [0x200009b1 to 0x200009b1] .bss._ZZ17menuProcTelemetryhE7mstate2 [from menus.o]
      [0x200009b2 to 0x200009b2] .bss._ZZ17menuBackupRestorehE7mstate2 [from menus.o]
      [0x200009b3 to 0x200009b3] .bss._ZZ16menuProcVoiceOnehE7mstate2 [from menus.o]
      [0x200009b4 to 0x200009b4] .bss._ZZ16menuProcProtocolhE7mstate2 [from menus.o]
      [0x200009b5 to 0x200009b5] .bss._ZZ16menuProcCurveOnehE7mstate2 [from menus.o]
      [0x200009b6 to 0x200009b6] .bss._ZZ16menuProcCurveOnehE7dfltCrv [from menus.o]
      [0x200009b7 to 0x200009b7] .bss._ZZ15menuSetFailsafehE7mstate2 [from menus.o]
      [0x200009b8 to 0x200009b8] .bss._ZZ15menuProcGlobalshE7mstate2 [from menus.o]
      [0x200009b9 to 0x200009b9] .bss._ZZ15menuModelPhaseshE7mstate2 [from menus.o]
      [0x200009ba to 0x200009ba] .bss._ZZ15A7105_AntSwitchvE2sw [from A7105_SPI.o]
      [0x200009bb to 0x200009bb] .bss._ZZ14menuProcMixOnehE7mstate2 [from menus.o]
      [0x200009bc to 0x200009bc] .bss._ZZ13menuRangeBindhE5timer [from menus.o]
      [0x200009bd to 0x200009bd] .bss._ZZ13menuProcIndexhE6mstate [from menus.o]
      [0x200009be to 0x200009be] .bss._ZZ13menuProcCurvehE7mstate2 [from menus.o]
      [0x200009bf to 0x200009bf] .bss._ZZ13ActionAFHDS2AE11packet_type [from AFHDS2A_a7105.o]
      [0x200009c0 to 0x200009c0] .bss._ZZ12menuScaleOnehE7mstate2 [from menus.o]
      [0x200009c1 to 0x200009c1] .bss._ZZ12menuPhaseOnehE7mstate2 [from menus.o]
      [0x200009c2 to 0x200009c2] .bss._ZZ11perOutPhasePshE9lastPhase [from menus.o]
      [0x200009c3 to 0x200009c3] .bss._ZZ11menuRXSetuphE7mstate2 [from menus.o]
      [0x200009c4 to 0x200009c4] .bss._ZZ11menuProcMixhE7mstate2 [from menus.o]
      [0x200009c5 to 0x200009c5] .bss._ZL9s_currIdx [from menus.o]
      [0x200009c6 to 0x200009c6] .bss._ZL7Columns [from menus.o]
      [0x200009c7 to 0x200009c7] .bss._ZL14inputs_subview [from menus.o]
      [0x200009c8 to 0x200009c8] .bss._ZL13s_eeLongTimer [from pers.o]
      [0x200009c9 to 0x200009c9] .bss._ZL13LongMenuTimer [from er9x.o]
      [0x200009ca to 0x200009ca] .bss._ZL12s_moveMixIdx [from menus.o]
      [0x200009cb to 0x200009cb] .bss._ZL12s_eeDirtyMsk [from pers.o]
      [0x200009cc to 0x200009cc] .bss._ZL12s_currMixIdx [from menus.o]
      [0x200009cd to 0x200009cd] .bss._ZL12s_currDestCh [from menus.o]
      [0x200009ce to 0x200009ce] .bss._ZL11s_curveChan [from menus.o]
      [0x200009cf to 0x200009cf] .bss._ZL11IlinesCount [from menus.o]
      [0x200009d0 to 0x200009d0] .bss._ZL10s_expoChan [from menus.o]
      [0x200009d1 to 0x200009d1] .bss.VarioPlay [from Vario.o]
      [0x200009d2 to 0x200009d2] .bss.ThrottleStickyOn [from menus.o]
      [0x200009d3 to 0x200009d3] .bss.Tevent [from er9x.o]
      [0x200009d4 to 0x200009d4] .bss.SystemOptions [from er9x.o]
      [0x200009d5 to 0x200009d5] .bss.StickScrollTimer [from er9x.o]
      [0x200009d6 to 0x200009d6] .bss.StickScrollAllowed [from er9x.o]
      [0x200009d7 to 0x200009d7] .bss.StepSize [from er9x.o]
      [0x200009d8 to 0x200009d8] .bss.RotaryState [from menus.o]
      [0x200009d9 to 0x200009d9] .bss.RadioState [from A7105_SPI.o]
      [0x200009da to 0x200009da] .bss.RadioActive [from pulses.o]
      [0x200009db to 0x200009db] .bss.PausePulses [from pulses.o]
      [0x200009dc to 0x200009dc] .bss.Main_running [from er9x.o]
      [0x200009dd to 0x200009dd] .bss.M_longMenuTimer [from menus.o]
      [0x200009de to 0x200009de] .bss.Lcd_lastPos [from lcd.o]
      [0x200009df to 0x200009df] .bss.LcdLock [from lcd.o]
      [0x200009e0 to 0x200009e0] .bss.InverseBlink [from menus.o]
      [0x200009e1 to 0x200009e1] .bss.EnterMenu [from er9x.o]
      [0x200009e2 to 0x200009e2] .bss.EepromActive [from lcd.o]
      [0x200009e3 to 0x200009e3] .bss.Ee_lock [from pers.o]
      [0x200009e4 to 0x200009e4] .bss.EditType [from menus.o]
      [0x200009e5 to 0x200009e5] .bss.EditColumns [from menus.o]
      [0x200009e6 to 0x200009e6] .bss.DupSub [from menus.o]
      [0x200009e7 to 0x200009e7] .bss.DupIfNonzero [from menus.o]
      [0x200009e8 to 0x200009e8] .bss.Current_protocol [from pulses.o]
      [0x200009e9 to 0x200009e9] .bss.CurrentVolume [from er9x.o]
      [0x200009ea to 0x200009ea] .bss.CurrentPhase [from menus.o]
      [0x200009eb to 0x200009eb] .bss.CalcScaleNest [from menus.o]
      [0x200009ec to 0x200009ec] .bss.Backup_RestoreRunning [from er9x.o]
  Initialize by copy:
      [0x200009ed to 0x200009ed] .data.prev_power [from A7105_SPI.o]
      [0x200009ee to 0x200009ef] .data._ZZ22A7105_AdjustLOBaseFreqvE10old_offset [from A7105_SPI.o]
      [0x200009f0 to 0x200009f3] .data.g_crossfile_baudrate_index [from crossfire.o]
      [0x200009f4 to 0x200009f7] .data._ZZL24AFHDS2A_update_telemetryvE4Dacc [from AFHDS2A_a7105.o]
      [0x200009f8 to 0x200009fb] .data._ZZ21ISR_TIMER1_COMPA_vectE8pulsePtr [from pulses.o]
      [0x200009fc to 0x200009ff] .data.AlarmControl [from er9x.o]
      [0x20000a00 to 0x20000a00] .data.frskyUsrStreaming [from A7105_SPI.o]
  Initialize by lzss:
  Initialize by packbits:
  Initialize by zpak:
  Testing input sections to see if nonzero selected size
      Locatable heap has size 256
  Including call to __SEGGER_init_heap in initialization table as selectors have nonzero size
  Testing input sections to see if nonzero selected size
      Locatable ctors has size 12
  Including call to __SEGGER_init_ctors in initialization table as selectors have nonzero size
  Short-circuit initialization table is supported by startup code
  Find and place additional sections required by initialization table
      Defining any required ES block symbols
      
      Selecting [ Linker created ] to define __SEGGER_init_table__
          Definition:     __SEGGER_init_table__
          Pushing section .segger.init.table to worklist [originates from symbol __SEGGER_init_table__]
      
      Processing section: .segger.init.table from [ Linker created ]
          Reference:      __SEGGER_init_zero
          Reference:      __SEGGER_init_copy
          Local section:  .segger.init.data from [ Linker created ] using relocation R_ARM_ABS32
          Reference:      __SEGGER_init_heap
          Reference:      __SEGGER_init_ctors
          Reference:      __SEGGER_init_done
      
      Processing section: .segger.init.data from [ Linker created ]
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_copy
          Definition:     __SEGGER_init_copy
          Pushing section .segger.init.__SEGGER_init_copy to worklist [originates from symbol __SEGGER_init_copy]
      
      Processing section: .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_ctors
          Definition:     __SEGGER_init_ctors
          Pushing section .segger.init.__SEGGER_init_ctors to worklist [originates from symbol __SEGGER_init_ctors]
      
      Processing section: .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Load REL relocations for .segger.init.__SEGGER_init_ctors (SEGGER_crtinit_v6m_little.o)
          Reference:      __ctors_start__
          Reference:      __ctors_end__
      
      Selecting SEGGER_THUMB_Startup.o to define __SEGGER_init_done
          Definition:     __SEGGER_init_done
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_heap
          Definition:     __SEGGER_init_heap
          Pushing section .segger.init.__SEGGER_init_heap to worklist [originates from symbol __SEGGER_init_heap]
      
      Processing section: .segger.init.__SEGGER_init_heap from SEGGER_crtinit_v6m_little.o
          Load REL relocations for .segger.init.__SEGGER_init_heap (SEGGER_crtinit_v6m_little.o)
          Reference:      __heap_start__
          Reference:      __heap_end__
      
      Selecting SEGGER_crtinit_v6m_little.o to define __SEGGER_init_zero
          Definition:     __SEGGER_init_zero
          Pushing section .segger.init.__SEGGER_init_zero to worklist [originates from symbol __SEGGER_init_zero]
      
      Processing section: .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      
      Selecting [ Linker created ] to define __stack_end__
          Definition:     __stack_end__
          Pushing section [ Linker absolute ] to worklist [originates from symbol __stack_end__]
      Defining any required ES block symbols
      Select inputs for block vectors
      Select inputs for block vectors_ram
      Select inputs for inline block <#1> at line 61, col 85
      Select inputs for block ctors
      Select inputs for inline block <#2> at line 62, col 85
      Select inputs for block dtors
      Select inputs for block exidx
      Select inputs for block tbss
      Select inputs for block tdata
      Select inputs for block tls
      Select inputs for block tdata_load
      Select inputs for block heap
      Select inputs for block stack
      Select inputs for block cfm
      Select inputs for 'place at start' block <#5> at line 97, col 45
      Select inputs for 'place at start' block <#6> at line 98, col 45
      Select inputs for 'place at start' block <#10> at line 119, col 45
      Select inputs for 'place at end' block <#14> at line 129, col 45
      Select inputs for 'place in' block <#3> at line 90, col 44
      Select inputs for 'place in' block <#4> at line 91, col 44
      Select inputs for 'place in' block <#7> at line 99, col 45
          Select section .rodata.block.tdata.copy ([.rodata.block.tdata.copy]) from [ Linker created ] using wildcard
          Select section .segger.init.__SEGGER_init_zero (__SEGGER_init_zero) from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_copy (__SEGGER_init_copy) from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_heap (__SEGGER_init_heap) from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.__SEGGER_init_ctors (__SEGGER_init_ctors) from SEGGER_crtinit_v6m_little.o using wildcard
          Select section .segger.init.table (__SEGGER_init_table__) from [ Linker created ] using wildcard
          Select section .segger.init.data (__SEGGER_init_data__) from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#8> at line 108, col 45
      Select inputs for 'place in' block <#9> at line 115, col 44
      Select inputs for 'place in' block <#11> at line 120, col 45
      Select inputs for 'place in' block <#12> at line 124, col 45
          Select section .bss.block.heap ([.bss.block.heap]) from [ Linker created ] using wildcard
          Select section .bss.block.stack ([.bss.block.stack]) from [ Linker created ] using wildcard
      Select inputs for 'place in' block <#13> at line 128, col 45
      Executing place in [0x0000f7a7 to 0x0000f7a7] + [0x0000f7b4 to 0x0000ffff] (630 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
          Allocate [0x0000f7b4 to 0x0000f7db] to section .segger.init.table from [ Linker created ]
          Allocate [0x0000f7dc to 0x0000f7fb] to section .segger.init.__SEGGER_init_ctors from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000f7fc to 0x0000f817] to section .segger.init.__SEGGER_init_heap from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000f818 to 0x0000f82b] to section .segger.init.data from [ Linker created ]
          Allocate [0x0000f82c to 0x0000f83f] to section .segger.init.__SEGGER_init_copy from SEGGER_crtinit_v6m_little.o
          Allocate [0x0000f840 to 0x0000f851] to section .segger.init.__SEGGER_init_zero from SEGGER_crtinit_v6m_little.o
      Executing place in [0x0000f7a7 to 0x0000f7a7] + [0x0000f852 to 0x0000ffff] (1 inputs selected)
          Candidate regions: [0x00000000 to 0x0000ffff]
      Executing place in [0x20000a01 to 0x20000a07] + [0x20000b08 to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000a01 to 0x20000a07] + [0x20000b08 to 0x200016ff] (191 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]
      Executing place in [0x20000a01 to 0x20000a07] + [0x20000b08 to 0x200016ff] (1 inputs selected)
          Candidate regions: [0x1ffff800 to 0x200017ff]


***************************************************************************************
***                                                                                 ***
***                               Make block symbols                                ***
***                                                                                 ***
***************************************************************************************

  Creating symbols for block vectors
  Creating symbols for block vectors_ram
  Creating symbols for block ctors
      Define global symbol __ctors_start__ = 0x0000f7a8
      Define global symbol __ctors_end__ = 0x0000f7b4
  Creating symbols for block dtors
  Creating symbols for block exidx
  Creating symbols for block tbss
  Creating symbols for block tdata
  Creating symbols for block tls
  Creating symbols for block tdata_load
  Creating symbols for block heap
      Define global symbol __heap_start__ = 0x20000a08
      Define global symbol __heap_end__ = 0x20000b08
  Creating symbols for block stack
  Creating symbols for block cfm


***************************************************************************************
***                                                                                 ***
***                                 Relocate image                                  ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMTimCapture
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating sei
  Relocating cli
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating crsf_send_data
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating putVoiceQueue(unsigned char)
  Relocating setVolume(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating ISR_TIMER3_CAPT_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating Backup_RestoreRunning
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating ppmInState
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating ISR_TIMER3_CAPT_vect::lastCapt
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating frskyUsrStreaming
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating audioQueue::audioQueue()
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating Voice
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating startSerialVoice()
  Relocating stopSerialVoice()
  Relocating getSvFifo()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating SvFifo
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating telemItemValid(unsigned char)
  Relocating singleBar(unsigned char, unsigned char, short)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating serialVoiceBlockSend(unsigned char*, unsigned char)
  Relocating serialVoiceWaitByte(unsigned char)
  Relocating progressBar()
  Relocating brSubHead(char const*)
  Relocating menuBackupRestore(unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispInVExVDbl(unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.8]
  Relocating UnitsString
  Relocating [.rodata..L.str.9]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.10]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.11]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating [.rodata..L.str.16]
  Relocating [.rodata..L.str.17]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.18]
  Relocating mixToDelete
  Relocating [.rodata..L.str.19]
  Relocating [.rodata..L.str.20]
  Relocating [.rodata..L.str.21]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.22]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.23]
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.26]
  Relocating [.rodata..L.str.27]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.28]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating [.rodata..L.str.30]
  Relocating menuBackupRestore(unsigned char)::mstate2
  Relocating [.rodata..L.str.31]
  Relocating [.rodata..L.str.32]
  Relocating menuBackupRestore(unsigned char)::count
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.36]
  Relocating [.rodata..L.str.37]
  Relocating [.rodata..L.str.38]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.39]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.40]
  Relocating [.rodata..L.str.41]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.50]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.67]
  Relocating sticks
  Relocating [.rodata..L.str.68]
  Relocating [.rodata..L.str.69]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.85]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.86]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.99]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating Str_Protocol
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.122]
  Relocating [.rodata..L.str.123]
  Relocating [.rodata..L.str.124]
  Relocating [.rodata..L.str.125]
  Relocating [.rodata..L.str.126]
  Relocating [.rodata..L.str.127]
  Relocating [.rodata..L.str.128]
  Relocating [.rodata..L.str.129]
  Relocating [.rodata..L.str.130]
  Relocating [.rodata..L.str.131]
  Relocating [.rodata..L.str.132]
  Relocating MixPopList
  Relocating [.rodata..L.str.133]
  Relocating [.rodata..L.str.134]
  Relocating [.rodata..L.str.135]
  Relocating [.rodata..L.str.136]
  Relocating [.rodata..L.str.137]
  Relocating [.rodata..L.str.138]
  Relocating [.rodata..L.str.139]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating Vario_play(int, bool)
  Relocating Vario_driver()
  Relocating WorkBuff
  Relocating LoadBuff
  Relocating VarioPlay
  Relocating VarioTab
  Relocating Vario_driver()::toneCounter
  Relocating ActionAFHDS
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating ModuleSyncStatus::update(unsigned short, short)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating bool getCrossfireTelemetryValue<2>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<4>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<1>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<3>(unsigned char, int&)
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crsf_current_period()
  Relocating crsf_init()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_crossfile_baudrate_index
  Relocating g_crsf_config
  Relocating moduleSyncStatus
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating crossfireTelemetryCallback
  Relocating CROSSFIRE_PERIODS
  Relocating CROSSFIRE_BAUDRATES
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __ashldi3
  Relocating __lshrdi3
  Relocating __divsi3
  Relocating __udivsi3
  Relocating __aeabi_uidivmod
  Relocating __aeabi_idivmod
  Relocating div
  Relocating memcmp
  Relocating memmove
  Relocating memcpy
  Relocating __aeabi_memclr8
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_init_ctors
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                 Region symbols                                  ***
***                                                                                 ***
***************************************************************************************

  Define region symbols for CFM
  Define region symbols for FLASH
  Define region symbols for RAM


***************************************************************************************
***                                                                                 ***
***                              Final relocate image                               ***
***                                                                                 ***
***************************************************************************************

  Relocating [.rodata.block.tdata.copy]
  Relocating SystemInit
  Relocating lcdSetRefVolt(unsigned char)
  Relocating lcdSendCtl(unsigned char)
  Relocating lcdSetContrast()
  Relocating lcd_clear()
  Relocating lcd_init()
  Relocating lcd_putcAtt(unsigned char, unsigned char, char, unsigned char)
  Relocating lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char)
  Relocating lcd_putc(unsigned char, unsigned char, char)
  Relocating lcd_puts_Pleft(unsigned char, char const*)
  Relocating lcd_puts_Pskip(unsigned char, char const*, unsigned char)
  Relocating lcd_puts_P(unsigned char, unsigned char, char const*)
  Relocating lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char)
  Relocating lcd_outhex4(unsigned char, unsigned char, unsigned short)
  Relocating lcd_write_bits(unsigned char*, unsigned char)
  Relocating lcd_plot(unsigned char, unsigned char)
  Relocating lcd_vline(unsigned char, unsigned char, signed char)
  Relocating lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char)
  Relocating lcd_hline(unsigned char, unsigned char, signed char)
  Relocating lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char)
  Relocating lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char)
  Relocating lcd_outdez(unsigned char, unsigned char, short)
  Relocating lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating refreshDiplay()
  Relocating lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char)
  Relocating putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char)
  Relocating putsVolts(unsigned char, unsigned char, short, unsigned char)
  Relocating putsVBat(unsigned char, unsigned char, unsigned char)
  Relocating LcdLock
  Relocating Lcd_lastPos
  Relocating DisplayBuf
  Relocating EepromActive
  Relocating Lcdinit
  Relocating font
  Relocating font_dblsize
  Relocating plotType
  Relocating _bitmask
  Relocating HW_Init
  Relocating mDelay
  Relocating getADC_osmp
  Relocating backlight_on
  Relocating backlight_off
  Relocating rd_1
  Relocating rd_0
  Relocating cs_0
  Relocating rw_0
  Relocating rs_1
  Relocating rs_0
  Relocating rst_1
  Relocating rst_0
  Relocating PINB
  Relocating PIND
  Relocating PINE
  Relocating PING
  Relocating LCD_DATA
  Relocating Buzzer_SetVal
  Relocating Buzzer_ClrVal
  Relocating SPI_RADIO_SendBlock
  Relocating SPI_RADIO_ReceiveBlock
  Relocating a7105_csn_on
  Relocating a7105_csn_off
  Relocating RF0_SetVal
  Relocating RF0_ClrVal
  Relocating RF1_SetVal
  Relocating RF1_ClrVal
  Relocating TX_RX_PutVal
  Relocating EnableGIO
  Relocating DisableGIO
  Relocating i2c_master
  Relocating GetPPMTimCapture
  Relocating GetPPMOutState
  Relocating SetPPMTimCompare
  Relocating GetPPMTimCompare
  Relocating GetPPMTimCompareInterruptFlag
  Relocating ClearPPMTimCompareInterruptFlag
  Relocating EnablePPMTim
  Relocating EnablePPMOut
  Relocating DisablePPMOut
  Relocating EnablePRTTim
  Relocating DisablePRTTim
  Relocating SetPRTTimPeriod
  Relocating GetChipID
  Relocating sei
  Relocating cli
  Relocating PIT_IRQHandler
  Relocating TPM1_IRQHandler
  Relocating SPI0_IRQHandler
  Relocating PORTC_PORTD_IRQHandler
  Relocating TPM0_IRQHandler
  Relocating TPM2_IRQHandler
  Relocating setup_crsf_serial_port
  Relocating crsf_send_data
  Relocating ChannelToPin
  Relocating AFHDS2A_A7105_regs
  Relocating AFHDS_A7105_regs
  Relocating SPI_BufferPtr
  Relocating SPI_Size
  Relocating g_crsf_read_callback
  Relocating modeFixValue(unsigned char)
  Relocating get_tmr10ms()
  Relocating CS_STATE(unsigned char)
  Relocating mixaddress(unsigned char)
  Relocating throttleReversed()
  Relocating putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsChn(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char)
  Relocating putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char)
  Relocating getValue(unsigned char)
  Relocating getSwitch00(signed char)
  Relocating getSwitch(signed char, bool, unsigned char)
  Relocating calc100toRESX(signed char)
  Relocating check_backlight_voice()
  Relocating stickMoveValue()
  Relocating anaIn(unsigned char)
  Relocating almess(char const*, unsigned char)
  Relocating message(char const*)
  Relocating alert(char const*)
  Relocating alertx(char const*, bool)
  Relocating clearKeyEvents()
  Relocating keyDown()
  Relocating checkThrottlePosition()
  Relocating checkTHR()
  Relocating putWarnSwitch(unsigned char, unsigned char)
  Relocating getCurrentSwitchStates()
  Relocating checkSwitches()
  Relocating getFlightPhase()
  Relocating getRawTrimValue(unsigned char, unsigned char)
  Relocating getTrimFlightPhase(unsigned char, unsigned char)
  Relocating getTrimValue(unsigned char, unsigned char)
  Relocating setTrimValue(unsigned char, unsigned char, short)
  Relocating checkIncDec16(short, short, short, unsigned char)
  Relocating checkIncDec(signed char, signed char, signed char, unsigned char)
  Relocating checkIncDec_i8(signed char, signed char, signed char)
  Relocating checkIncDec_0(signed char, signed char)
  Relocating checkIncDec_u0(short, unsigned char)
  Relocating popMenu(bool)
  Relocating chainMenu(void (*)(unsigned char))
  Relocating pushMenu(void (*)(unsigned char))
  Relocating backlightKey()
  Relocating doBackLightVoice(unsigned char)
  Relocating putVoiceQueueUpper(unsigned char)
  Relocating putVoiceQueueLong(unsigned short)
  Relocating putVoiceQueue(unsigned char)
  Relocating setVolume(unsigned char)
  Relocating calcStickScroll(unsigned char)
  Relocating getGvarSourceValue(unsigned char)
  Relocating ISR_TIMER2_OVF_vect
  Relocating audioQueue::driver()
  Relocating ISR_TIMER0_COMP_vect
  Relocating ISR_TIMER3_CAPT_vect
  Relocating mainER()
  Relocating mainSequence()
  Relocating doVoiceAlarmSource(t_voiceAlarm*)
  Relocating procOneVoiceAlarm(t_voiceAlarm*, unsigned char)
  Relocating processVoiceAlarms()
  Relocating calc1000toRESX(short)
  Relocating REG100_100(signed char)
  Relocating REG(signed char, signed char, signed char)
  Relocating IS_EXPO_THROTTLE(unsigned char)
  Relocating _GLOBAL__sub_I_er9x.cpp
  Relocating Last_switch
  Relocating g_eeGeneral
  Relocating g_model
  Relocating AlertMessage
  Relocating Main_running
  Relocating Nvs_state
  Relocating Nvs_timer
  Relocating CurrentVolume
  Relocating ppmInAvailable
  Relocating Rotary
  Relocating Tevent
  Relocating Backup_RestoreRunning
  Relocating TimerConfig
  Relocating bchout_ar
  Relocating audio
  Relocating sysFlags
  Relocating SystemOptions
  Relocating AlarmControl
  Relocating CsTimer
  Relocating Str_Switches
  Relocating Str_OFF
  Relocating Str_ON
  Relocating modi12x3
  Relocating stickScramble
  Relocating csTypeTable
  Relocating Str_Hyphens
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating g_ppmIns
  Relocating check_backlight_voice()::tmr10ms
  Relocating g_LightOffCounter
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating Str_Alert
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating StickScrollAllowed
  Relocating StickScrollTimer
  Relocating g_menuStack
  Relocating g_menuStackPtr
  Relocating EnterMenu
  Relocating P1values
  Relocating StepSize
  Relocating LongMenuTimer
  Relocating [.rodata..L.str.7]
  Relocating g_vbat100mV
  Relocating tick10ms
  Relocating stickMoved
  Relocating rate
  Relocating Inactivity
  Relocating ppmInState
  Relocating s_anaFilt
  Relocating g_tmr16KHz
  Relocating tmrEEPROM
  Relocating ISR_TIMER3_CAPT_vect::lastCapt
  Relocating [.rodata..L.str.8]
  Relocating mainSequence()::timer
  Relocating audioQueue::driver()::toneCounter
  Relocating [.rodata..L.str.9]
  Relocating [.rodata..L.str.10]
  Relocating [.rodata..L.str.11]
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating perMain()::lastTMR
  Relocating perMain()::repeater
  Relocating perMain()::alertKey
  Relocating perMain()::s_batCheck
  Relocating [.init_array]
  Relocating A7105_AntSwitch()
  Relocating A7105_SetTxRxMode(unsigned char)
  Relocating A7105_Strobe(unsigned char)
  Relocating A7105_WriteReg(unsigned char, unsigned char)
  Relocating A7105_WriteData(unsigned char, unsigned char)
  Relocating A7105_ReadData(unsigned char)
  Relocating A7105_ReadReg(unsigned char)
  Relocating A7105_Reset()
  Relocating A7105_WriteID(unsigned int)
  Relocating A7105_SetPower()
  Relocating A7105_AdjustLOBaseFreq()
  Relocating A7105_Sleep()
  Relocating A7105_Init()
  Relocating convert_failsafe_ppm(unsigned char)
  Relocating RadioState
  Relocating protocol_flags
  Relocating prev_power
  Relocating frskyUsrStreaming
  Relocating packet
  Relocating ID
  Relocating packet_count
  Relocating bind_phase
  Relocating hopping_frequency
  Relocating hopping_frequency_no
  Relocating A7105_AntSwitch()::sw
  Relocating A7105_AdjustLOBaseFreq()::old_offset
  Relocating AFHDS2A_build_packet(unsigned char)
  Relocating ActionAFHDS2A
  Relocating initAFHDS2A
  Relocating processFlySkySensor(unsigned char const*, unsigned char)
  Relocating AFHDS2A_tel
  Relocating AFHDS2A_tel_data
  Relocating AFHDS2A_tel_status
  Relocating AFHDS2A_tel_res_cnt
  Relocating AltOffset
  Relocating GAltOffset
  Relocating ActionAFHDS2A::packet_type
  Relocating ActionAFHDS2A::packet_counter
  Relocating AFHDS2A_update_telemetry()::Dacc
  Relocating audioQueue::audioQueue()
  Relocating audioQueue::busy()
  Relocating audioQueue::heartbeat()
  Relocating audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating audioQueue::getToneLength(unsigned char)
  Relocating audioQueue::event(unsigned char, unsigned char)
  Relocating audioDefevent(unsigned char)
  Relocating audioEvent(unsigned char, unsigned short)
  Relocating audioVoiceDefevent(unsigned char, unsigned char)
  Relocating voice_numeric(short, unsigned char, unsigned char)
  Relocating Voice
  Relocating ee_waite()
  Relocating eeprom_read_block(void*, void const*, unsigned int)
  Relocating eeprom_write_page_cmp(char const*, unsigned short, unsigned int)
  Relocating eeWriteBlockCmp(void const*, unsigned short, unsigned int)
  Relocating Key::input(bool, EnumKeys)
  Relocating menuPressed()
  Relocating switchPosition(unsigned char)
  Relocating keyState(EnumKeys)
  Relocating pauseEvents(unsigned char)
  Relocating killEvents(unsigned char)
  Relocating per10ms()
  Relocating startSerialVoice()
  Relocating stopSerialVoice()
  Relocating getSvFifo()
  Relocating i2c_buffer
  Relocating s_evt
  Relocating keys
  Relocating g_tmr10ms
  Relocating g_blinkTmr10ms
  Relocating per10ms()::current
  Relocating per10ms()::crossTrim
  Relocating SvFifo
  Relocating EeFsGetFree()
  Relocating EeFsGetLink(unsigned char)
  Relocating EeFsck()
  Relocating EeFsSetLink(unsigned char, unsigned char)
  Relocating EeFsFlush()
  Relocating EeFsFlushFreelist()
  Relocating EeFsFormat()
  Relocating EeFsOpen()
  Relocating EFile::exists(unsigned char)
  Relocating EFile::swap(unsigned char, unsigned char)
  Relocating EFile::rm(unsigned char)
  Relocating EeFsFree(unsigned char)
  Relocating EFile::size()
  Relocating EFile::openRd(unsigned char)
  Relocating EFile::read(unsigned char*, unsigned short)
  Relocating EFile::readRlc(unsigned char*, unsigned short)
  Relocating EFile::write(unsigned char*, unsigned char)
  Relocating EeFsAlloc()
  Relocating EFile::create(unsigned char, unsigned char, unsigned short)
  Relocating EFile::closeTrunc()
  Relocating EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char)
  Relocating EeFsRead(unsigned char, unsigned char)
  Relocating eeFs
  Relocating putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating calc_scaler(unsigned char, unsigned char*, unsigned char*)
  Relocating telemItemValid(unsigned char)
  Relocating singleBar(unsigned char, unsigned char, short)
  Relocating voiceMinutes(short)
  Relocating voice_telem_item(unsigned char)
  Relocating get_telemetry_value(unsigned char)
  Relocating displayTimer(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char)
  Relocating dispGvar(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char)
  Relocating gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char)
  Relocating get_dr_state(unsigned char)
  Relocating editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char)
  Relocating char2idx(char)
  Relocating idx2char(unsigned char)
  Relocating TITLEP(char const*)
  Relocating lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*)
  Relocating checkIndexed(unsigned char, char const*, unsigned char, unsigned char)
  Relocating hyphinvMenuItem(unsigned char, unsigned char, unsigned char)
  Relocating putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char)
  Relocating MState2::check_columns(unsigned char, unsigned char)
  Relocating telltale(unsigned char, signed char, signed char)
  Relocating doMainScreenGrphics()
  Relocating drawFunction(unsigned char, unsigned char)
  Relocating intpol(short, unsigned char)
  Relocating calcExpo(unsigned char, short)
  Relocating drawCurve(unsigned char)
  Relocating curveAddress(unsigned char)
  Relocating menuProcCurveOne(unsigned char)
  Relocating menuProcCurve(unsigned char)
  Relocating evalOffset(signed char)
  Relocating setStickCenter()
  Relocating perOut(short*, unsigned char)
  Relocating displayNext()
  Relocating menuProcTelemetry(unsigned char)
  Relocating edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char)
  Relocating put_curve(unsigned char, unsigned char, signed char, unsigned char)
  Relocating scalerDecimal(unsigned char, unsigned char, unsigned char)
  Relocating menuScaleOne(unsigned char)
  Relocating menuProcGlobals(unsigned char)
  Relocating putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char)
  Relocating menuProcMixOne(unsigned char)
  Relocating onoffItem(unsigned char, unsigned char, unsigned char)
  Relocating offonItem(unsigned char, unsigned char, unsigned char)
  Relocating onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating editSlowDelay(unsigned char, unsigned char, unsigned char)
  Relocating menuMixersLimit(unsigned char)
  Relocating menuProcMix(unsigned char)
  Relocating reachMixerCountLimit()
  Relocating yesNoMenuExit(unsigned char, char const*)
  Relocating menuDeleteMix(unsigned char)
  Relocating doPopup(char const*, unsigned char, unsigned char)
  Relocating insertMix(unsigned char, unsigned char)
  Relocating expou(unsigned short, unsigned short)
  Relocating expo(short, short)
  Relocating editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuDeleteDupModel(unsigned char)
  Relocating menuProcModelSelect(unsigned char)
  Relocating menuRangeBind(unsigned char)
  Relocating putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuPhaseOne(unsigned char)
  Relocating dispFlightModename(unsigned char, unsigned char, unsigned char)
  Relocating serialVoiceBlockSend(unsigned char*, unsigned char)
  Relocating serialVoiceWaitByte(unsigned char)
  Relocating progressBar()
  Relocating brSubHead(char const*)
  Relocating menuBackupRestore(unsigned char)
  Relocating menuModelPhases(unsigned char)
  Relocating menuProcModelIndex(unsigned char)
  Relocating putc_0_1(unsigned char, unsigned char, unsigned char)
  Relocating timer()
  Relocating resetTimer1()
  Relocating resetTimer2()
  Relocating trace()
  Relocating putsTimeNoAtt(unsigned char, unsigned char, short)
  Relocating menuProcStatistic(unsigned char)
  Relocating resetTimern(unsigned char)
  Relocating displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char)
  Relocating displayOneSwitch(unsigned char, unsigned char, unsigned char)
  Relocating switchDisplay(unsigned char, unsigned char)
  Relocating dispInVExVDbl(unsigned char)
  Relocating dispSignalQality(unsigned char)
  Relocating menuProc0(unsigned char)
  Relocating menuProcIndex(unsigned char)
  Relocating perOutPhase(short*, unsigned char)
  Relocating scaleAnalog(short, unsigned char)
  Relocating indexProcess(unsigned char, MState2*, unsigned char)
  Relocating displayIndex(char const* const*, unsigned char, unsigned char, unsigned char)
  Relocating offonMenuItem(unsigned char, unsigned char, char const*, unsigned char)
  Relocating displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char)
  Relocating menuProcVoiceOne(unsigned char)
  Relocating menuProcVoiceAlarm(unsigned char)
  Relocating rangeBindAction(unsigned char, unsigned char)
  Relocating menuRXSetup(unsigned char)
  Relocating menuSetFailsafe(unsigned char)
  Relocating menuProcProtocol(unsigned char)
  Relocating Xmem
  Relocating PopupData
  Relocating MenuControl
  Relocating s_timer
  Relocating RotaryState
  Relocating CalcScaleNest
  Relocating ThrottleStickyOn
  Relocating Str_Chans_Gv
  Relocating Curve_Str
  Relocating phyStick
  Relocating Str_telemItems
  Relocating TelemIndex
  Relocating UnitsVoice
  Relocating UnitsText
  Relocating Str_GV
  Relocating calibratedStick
  Relocating Ex_chans
  Relocating s_pgOfs
  Relocating s_editMode
  Relocating s_editing
  Relocating s_noHi
  Relocating scrollLR
  Relocating scroll_disabled
  Relocating scrollUD
  Relocating InverseBlink
  Relocating EditType
  Relocating EditColumns
  Relocating g_chans512
  Relocating Str_Name
  Relocating [.rodata..L.str]
  Relocating g_posHorz
  Relocating M_longMenuTimer
  Relocating Columns
  Relocating MState2::check_columns(unsigned char, unsigned char)::lateUp
  Relocating s_curveChan
  Relocating s_expoChan
  Relocating menuProcCurveOne(unsigned char)::dfltCrv
  Relocating Str_Curve
  Relocating menuProcCurveOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.1]
  Relocating Str_Curves
  Relocating menuProcCurve(unsigned char)::mstate2
  Relocating [.rodata..L.str.2]
  Relocating CurrentPhase
  Relocating [.rodata..L.str.3]
  Relocating menuProcTelemetry(unsigned char)::mstate2
  Relocating Str_Telemetry
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating [.rodata..L.str.7]
  Relocating menuScaleOne(unsigned char)::mstate2
  Relocating Str_SC
  Relocating s_currIdx
  Relocating [.rodata..L.str.8]
  Relocating UnitsString
  Relocating [.rodata..L.str.9]
  Relocating Str_Globals
  Relocating menuProcGlobals(unsigned char)::mstate2
  Relocating Str_Gv_Source
  Relocating [.rodata..L.str.10]
  Relocating SW_3_IDX
  Relocating [.rodata..L.str.11]
  Relocating s_currMixIdx
  Relocating menuProcMixOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.12]
  Relocating [.rodata..L.str.13]
  Relocating [.rodata..L.str.14]
  Relocating [.rodata..L.str.15]
  Relocating [.rodata..L.str.16]
  Relocating [.rodata..L.str.17]
  Relocating s_mixMaxSel
  Relocating [.rodata..L.str.18]
  Relocating mixToDelete
  Relocating [.rodata..L.str.19]
  Relocating [.rodata..L.str.20]
  Relocating [.rodata..L.str.21]
  Relocating s_moveMode
  Relocating Str_Mixer
  Relocating menuProcMix(unsigned char)::mstate2
  Relocating s_currDestCh
  Relocating [.rodata..L.str.22]
  Relocating s_moveMixIdx
  Relocating s_charTab
  Relocating DupIfNonzero
  Relocating DupSub
  Relocating [.rodata..L.str.23]
  Relocating [.rodata..L.str.24]
  Relocating [.rodata..L.str.25]
  Relocating menuRangeBind(unsigned char)::timer
  Relocating [.rodata..L.str.26]
  Relocating [.rodata..L.str.27]
  Relocating Str_1_RETA
  Relocating [.rodata..L.str.28]
  Relocating menuPhaseOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.29]
  Relocating [.rodata..L.str.30]
  Relocating menuBackupRestore(unsigned char)::mstate2
  Relocating [.rodata..L.str.31]
  Relocating [.rodata..L.str.32]
  Relocating menuBackupRestore(unsigned char)::count
  Relocating [.rodata..L.str.33]
  Relocating [.rodata..L.str.34]
  Relocating [.rodata..L.str.35]
  Relocating [.rodata..L.str.36]
  Relocating [.rodata..L.str.37]
  Relocating [.rodata..L.str.38]
  Relocating Str_Modes
  Relocating menuModelPhases(unsigned char)::mstate2
  Relocating [.rodata..L.str.39]
  Relocating menuProcModelSelect(unsigned char)::mstate2
  Relocating [.rodata..L.str.40]
  Relocating [.rodata..L.str.41]
  Relocating menuProcModelSelect(unsigned char)::sel_editMode
  Relocating ModelPopList
  Relocating TimeGlobals
  Relocating trace()::s_time
  Relocating g_latency
  Relocating [.rodata..L.str.42]
  Relocating [.rodata..L.str.43]
  Relocating [.rodata..L.str.44]
  Relocating [.rodata..L.str.45]
  Relocating [.rodata..L.str.46]
  Relocating [.rodata..L.str.47]
  Relocating [.rodata..L.str.48]
  Relocating [.rodata..L.str.49]
  Relocating menuProc0(unsigned char)::trimSwLock
  Relocating inputs_subview
  Relocating [.rodata..L.str.50]
  Relocating menuProc0(unsigned char)::xt
  Relocating [.rodata..L.str.51]
  Relocating [.rodata..L.str.52]
  Relocating [.rodata..L.str.53]
  Relocating [.rodata..L.str.54]
  Relocating [.rodata..L.str.55]
  Relocating [.rodata..L.str.56]
  Relocating [.rodata..L.str.57]
  Relocating [.rodata..L.str.58]
  Relocating [.rodata..L.str.59]
  Relocating [.rodata..L.str.60]
  Relocating Str_Main_Popup
  Relocating bpanaCenter
  Relocating Output
  Relocating Fade
  Relocating perOutPhase(short*, unsigned char)::lastPhase
  Relocating perOut(short*, unsigned char)::sticky
  Relocating menuProcIndex(unsigned char)::mstate
  Relocating IlinesCount
  Relocating menuProcIndex(unsigned char)::n_Strings
  Relocating Str_Display
  Relocating Str_AudioHaptic
  Relocating Str_Alarms
  Relocating Str_General
  Relocating Str_Controls
  Relocating Str_Calibration
  Relocating Str_Trainer
  Relocating Str_Version
  Relocating Str_DiagSwtch
  Relocating Str_DiagAna
  Relocating Str_Hardware
  Relocating [.rodata..L.str.61]
  Relocating [.rodata..L.str.62]
  Relocating [.rodata..L.str.63]
  Relocating [.rodata..L.str.64]
  Relocating [.rodata..L.str.65]
  Relocating [.rodata..L.str.66]
  Relocating Str_minute_Beep
  Relocating [.rodata..L.str.67]
  Relocating sticks
  Relocating [.rodata..L.str.68]
  Relocating [.rodata..L.str.69]
  Relocating Str_Beep_Countdown
  Relocating [.rodata..L.str.70]
  Relocating [.rodata..L.str.71]
  Relocating [.rodata..L.str.72]
  Relocating [.rodata..L.str.73]
  Relocating [.rodata..L.str.74]
  Relocating [.rodata..L.str.75]
  Relocating [.rodata..L.str.76]
  Relocating [.rodata..L.str.77]
  Relocating [.rodata..L.str.78]
  Relocating [.rodata..L.str.79]
  Relocating [.rodata..L.str.80]
  Relocating [.rodata..L.str.81]
  Relocating [.rodata..L.str.82]
  Relocating [.rodata..L.str.83]
  Relocating [.rodata..L.str.84]
  Relocating menuWhenDone
  Relocating [.rodata..L.str.85]
  Relocating Str_On_Off_Both
  Relocating [.rodata..L.str.86]
  Relocating menuProcVoiceOne(unsigned char)::mstate2
  Relocating [.rodata..L.str.87]
  Relocating [.rodata..L.str.88]
  Relocating [.rodata..L.str.89]
  Relocating Str_Cswitch
  Relocating [.rodata..L.str.90]
  Relocating [.rodata..L.str.91]
  Relocating [.rodata..L.str.92]
  Relocating [.rodata..L.str.93]
  Relocating [.rodata..L.str.94]
  Relocating [.rodata..L.str.95]
  Relocating Str_Sounds
  Relocating [.rodata..L.str.96]
  Relocating [.rodata..L.str.97]
  Relocating [.rodata..L.str.98]
  Relocating menuProcVoiceAlarm(unsigned char)::mstate2
  Relocating [.rodata..L.str.99]
  Relocating menuRXSetup(unsigned char)::mstate2
  Relocating [.rodata..L.str.100]
  Relocating [.rodata..L.str.101]
  Relocating [.rodata..L.str.102]
  Relocating [.rodata..L.str.103]
  Relocating menuSetFailsafe(unsigned char)::mstate2
  Relocating [.rodata..L.str.104]
  Relocating [.rodata..L.str.105]
  Relocating [.rodata..L.str.106]
  Relocating [.rodata..L.str.107]
  Relocating Str_Protocol
  Relocating menuProcProtocol(unsigned char)::mstate2
  Relocating [.rodata..L.str.108]
  Relocating [.rodata..L.str.109]
  Relocating [.rodata..L.str.110]
  Relocating [.rodata..L.str.111]
  Relocating [.rodata..L.str.112]
  Relocating [.rodata..L.str.113]
  Relocating [.rodata..L.str.114]
  Relocating [.rodata..L.str.115]
  Relocating [.rodata..L.str.116]
  Relocating [.rodata..L.str.117]
  Relocating [.rodata..L.str.118]
  Relocating [.rodata..L.str.119]
  Relocating menuProcModelIndex(unsigned char)::mstate
  Relocating menuProcModelIndex(unsigned char)::n_Strings
  Relocating Str_heli_setup
  Relocating Str_limits
  Relocating Str_Expo
  Relocating Str_Cswitches
  Relocating Str_Safety
  Relocating Str_Timer
  Relocating [.rodata..L.str.120]
  Relocating [.rodata..L.str.121]
  Relocating Str_TRE012AG
  Relocating [.rodata..L.str.122]
  Relocating [.rodata..L.str.123]
  Relocating [.rodata..L.str.124]
  Relocating [.rodata..L.str.125]
  Relocating [.rodata..L.str.126]
  Relocating [.rodata..L.str.127]
  Relocating [.rodata..L.str.128]
  Relocating [.rodata..L.str.129]
  Relocating [.rodata..L.str.130]
  Relocating [.rodata..L.str.131]
  Relocating [.rodata..L.str.132]
  Relocating MixPopList
  Relocating [.rodata..L.str.133]
  Relocating [.rodata..L.str.134]
  Relocating [.rodata..L.str.135]
  Relocating [.rodata..L.str.136]
  Relocating [.rodata..L.str.137]
  Relocating [.rodata..L.str.138]
  Relocating [.rodata..L.str.139]
  Relocating [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)]
  Relocating evalChkSum()
  Relocating setNameP(char*, char const*)
  Relocating eeGeneralDefault()
  Relocating modelSave(unsigned char)
  Relocating modelDefaultWrite(unsigned char)
  Relocating eeLoadModelName(unsigned char, char*, unsigned char)
  Relocating eeModelExists(unsigned char)
  Relocating eeLoadModelForBackup(unsigned char)
  Relocating eeLoadModel(unsigned char)
  Relocating validateName(char*, unsigned char)
  Relocating eeDirty(unsigned char)
  Relocating eeWaitComplete()
  Relocating eeDuplicateModel(unsigned char)
  Relocating eeReadGeneral()
  Relocating eeWriteGeneral()
  Relocating eeCheck(bool)
  Relocating theFile
  Relocating theWriteFile
  Relocating [.rodata..L.str]
  Relocating [.rodata..L.str.1]
  Relocating [.rodata..L.str.2]
  Relocating [.rodata..L.str.3]
  Relocating [.rodata..L.str.4]
  Relocating [.rodata..L.str.5]
  Relocating [.rodata..L.str.6]
  Relocating s_eeDirtyMsk
  Relocating s_eeDirtyTime10ms
  Relocating s_eeLongTimer
  Relocating Ee_lock
  Relocating Str_EEPROM_Overflow
  Relocating SetStartPulsePol()
  Relocating ISR_TIMER1_COMPA_vect
  Relocating setupPulses()
  Relocating startPulses()
  Relocating setupPulsesPPM(unsigned char)
  Relocating pulses2MHz
  Relocating heartbeat
  Relocating Current_protocol
  Relocating pxxFlag
  Relocating PausePulses
  Relocating serialDat0
  Relocating ISR_TIMER1_COMPA_vect::pulsePtr
  Relocating RadioActive
  Relocating B3_comp_value
  Relocating Stamps
  Relocating clearMixes()
  Relocating setMix(unsigned char, unsigned char)
  Relocating applyTemplate()
  Relocating main
  Relocating Vario_play(int, bool)
  Relocating Vario_driver()
  Relocating WorkBuff
  Relocating LoadBuff
  Relocating VarioPlay
  Relocating VarioTab
  Relocating Vario_driver()::toneCounter
  Relocating ActionAFHDS
  Relocating initAFHDS
  Relocating AFHDS_tx_channels
  Relocating SX127xDriver::SX127xDriver()
  Relocating _GLOBAL__sub_I_SX127x.cpp
  Relocating hal
  Relocating SX127xDriver::instance
  Relocating [.init_array]
  Relocating SX127xHal::SX127xHal()
  Relocating SX127xHal::instance
  Relocating _GLOBAL__sub_I_ELRS.cpp
  Relocating Radio
  Relocating ota_crc
  Relocating LQCalc
  Relocating TelemetryReceiver
  Relocating MspSender
  Relocating [.init_array]
  Relocating StubbornReceiver::StubbornReceiver(unsigned char)
  Relocating StubbornSender::StubbornSender(unsigned char)
  Relocating StubbornSender::ResetState()
  Relocating GENERIC_CRC14::GENERIC_CRC14(unsigned short)
  Relocating createCrossfireChannelsFrame(unsigned char*, short*)
  Relocating setupPulsesCrossfire()
  Relocating ModuleSyncStatus::update(unsigned short, short)
  Relocating checkCrossfireTelemetryFrameCRC()
  Relocating processCrossfireTelemetryFrame()
  Relocating bool getCrossfireTelemetryValue<2>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<4>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<1>(unsigned char, int&)
  Relocating bool getCrossfireTelemetryValue<3>(unsigned char, int&)
  Relocating processCrossfireTelemetryData(unsigned char)
  Relocating crsf_current_period()
  Relocating crsf_init()
  Relocating crsf_action()
  Relocating outputTelemetryBuffer
  Relocating outputTelemetryBufferSize
  Relocating outputTelemetryBufferTrigger
  Relocating telemetryRxBuffer
  Relocating telemetryRxBufferCount
  Relocating g_crossfire
  Relocating telemetryErrors
  Relocating g_crossfile_baudrate_index
  Relocating g_crsf_config
  Relocating moduleSyncStatus
  Relocating processCrossfireTelemetryFrame()::power_values
  Relocating crossfireTelemetryCallback
  Relocating CROSSFIRE_PERIODS
  Relocating CROSSFIRE_BAUDRATES
  Relocating crc8(unsigned char const*, unsigned int)
  Relocating crc8tab
  Relocating Reset_Handler
  Relocating NMI_Handler
  Relocating _vectors
  Relocating BackDoorKey
  Relocating _start
  Relocating __ashldi3
  Relocating __lshrdi3
  Relocating __divsi3
  Relocating __udivsi3
  Relocating __aeabi_uidivmod
  Relocating __aeabi_idivmod
  Relocating div
  Relocating memcmp
  Relocating memmove
  Relocating memcpy
  Relocating __aeabi_memclr8
  Relocating __SEGGER_init_zero
  Relocating __SEGGER_init_copy
  Relocating __SEGGER_init_heap
  Relocating __SEGGER_init_ctors
  Relocating [.bss.block.heap]
  Relocating [.bss.block.stack]
  Relocating __SEGGER_init_table__
  Relocating __SEGGER_init_data__


***************************************************************************************
***                                                                                 ***
***                                  Fill regions                                   ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                  Combine debug                                  ***
***                                                                                 ***
***************************************************************************************

  Load REL relocations for .debug_aranges (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_aranges (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_aranges (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_aranges (system_MKL16Z4.o)
  Load REL relocations for .debug_frame (system_MKL16Z4.o)
  Load REL relocations for .debug_info (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_info (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_info (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_info (system_MKL16Z4.o)
  Load REL relocations for .debug_line (Kinetis_KL_Startup.o)
  Load REL relocations for .debug_line (MKL16Z4_Vectors.o)
  Load REL relocations for .debug_line (SEGGER_THUMB_Startup.o)
  Load REL relocations for .debug_line (system_MKL16Z4.o)
  Load REL relocations for .debug_loc (system_MKL16Z4.o)
  Load REL relocations for .debug_pubnames (system_MKL16Z4.o)
  Load REL relocations for .debug_pubtypes (system_MKL16Z4.o)
  Load REL relocations for .debug_ranges (system_MKL16Z4.o)


***************************************************************************************
***                                                                                 ***
***                                Create attributes                                ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                    Print map                                    ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                 Run assertions                                  ***
***                                                                                 ***
***************************************************************************************



***************************************************************************************
***                                                                                 ***
***                                   Write image                                   ***
***                                                                                 ***
***************************************************************************************

  Create program sections
      Start program header at 0x00000000
        [0x00000000 to 0x000000bf] - _vectors (section .vectors)
        [0x000000c0 to 0x000003ff] - MState2::check_columns(unsigned char, unsigned char) (section .text.MState2::check_columns(unsigned char, unsigned char))
        [0x00000400 to 0x0000040f] - BackDoorKey (section .cfm)
        [0x00000410 to 0x000014c3] - menuProcModelIndex(unsigned char) (section .text.menuProcModelIndex(unsigned char))
        [0x000014c4 to 0x00002153] - menuProcIndex(unsigned char) (section .text.menuProcIndex(unsigned char))
        [0x00002154 to 0x00002d1b] - perOut(short*, unsigned char) (section .text.perOut(short*, unsigned char))
        [0x00002d1c to 0x000034fb] - mainSequence() (section .text.mainSequence())
        [0x000034fc to 0x00003c63] - menuProc0(unsigned char) (section .text.menuProc0(unsigned char))
        [0x00003c64 to 0x00004133] - menuProcMixOne(unsigned char) (section .text.menuProcMixOne(unsigned char))
        [0x00004134 to 0x000045ff] - menuProcProtocol(unsigned char) (section .text.menuProcProtocol(unsigned char))
        [0x00004600 to 0x00004aa7] - menuProcMix(unsigned char) (section .text.menuProcMix(unsigned char))
        [0x00004aa8 to 0x00004f0b] - menuProcVoiceOne(unsigned char) (section .text.menuProcVoiceOne(unsigned char))
        [0x00004f0c to 0x000052e7] - ActionAFHDS2A (section .text.ActionAFHDS2A)
        [0x000052e8 to 0x00005683] - HW_Init (section .text.HW_Init)
        [0x00005684 to 0x000059c3] - menuProcModelSelect(unsigned char) (section .text.menuProcModelSelect(unsigned char))
        [0x000059c4 to 0x00005ce3] - timer() (section .text.timer())
        [0x00005ce4 to 0x00005fef] - menuBackupRestore(unsigned char) (section .text.menuBackupRestore(unsigned char))
        [0x00005ff0 to 0x000062e7] - audioQueue::event(unsigned char, unsigned char) (section .text.audioQueue::event(unsigned char, unsigned char))
        [0x000062e8 to 0x000065c3] - procOneVoiceAlarm(t_voiceAlarm*, unsigned char) (section .text.procOneVoiceAlarm(t_voiceAlarm*, unsigned char))
        [0x000065c4 to 0x00006857] - menuScaleOne(unsigned char) (section .text.menuScaleOne(unsigned char))
        [0x00006858 to 0x00006a7f] - menuProcTelemetry(unsigned char) (section .text.menuProcTelemetry(unsigned char))
        [0x00006a80 to 0x00006c9f] - lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char) (section .text.lcd_outdezNAtt(unsigned char, unsigned char, int, unsigned char, signed char))
        [0x00006ca0 to 0x00006eb3] - mainER() (section .text.mainER())
        [0x00006eb4 to 0x000070c7] - eeLoadModel(unsigned char) (section .text.eeLoadModel(unsigned char))
        [0x000070c8 to 0x000072af] - getSwitch(signed char, bool, unsigned char) (section .text.getSwitch(signed char, bool, unsigned char))
        [0x000072b0 to 0x00007497] - menuProcGlobals(unsigned char) (section .text.menuProcGlobals(unsigned char))
        [0x00007498 to 0x0000767b] - menuPhaseOne(unsigned char) (section .text.menuPhaseOne(unsigned char))
        [0x0000767c to 0x00007847] - putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char) (section .text.putsTelemetryChannel(unsigned char, unsigned char, signed char, int, unsigned char, unsigned char))
        [0x00007848 to 0x00007a0b] - menuSetFailsafe(unsigned char) (section .text.menuSetFailsafe(unsigned char))
        [0x00007a0c to 0x00007b9f] - processCrossfireTelemetryFrame() (section .text.processCrossfireTelemetryFrame())
        [0x00007ba0 to 0x00007d27] - checkIncDec16(short, short, short, unsigned char) (section .text.checkIncDec16(short, short, short, unsigned char))
        [0x00007d28 to 0x00007eaf] - perOutPhase(short*, unsigned char) (section .text.perOutPhase(short*, unsigned char))
        [0x00007eb0 to 0x0000800f] - i2c_master (section .text.i2c_master)
        [0x00008010 to 0x0000816f] - eeCheck(bool) (section .text.eeCheck(bool))
        [0x00008170 to 0x000082c7] - eeprom_write_page_cmp(char const*, unsigned short, unsigned int) (section .text.eeprom_write_page_cmp(char const*, unsigned short, unsigned int))
        [0x000082c8 to 0x0000841b] - menuProcCurveOne(unsigned char) (section .text.menuProcCurveOne(unsigned char))
        [0x0000841c to 0x00008567] - processFlySkySensor(unsigned char const*, unsigned char) (section .text.processFlySkySensor(unsigned char const*, unsigned char))
        [0x00008568 to 0x000086af] - AFHDS2A_build_packet(unsigned char) (section .text.AFHDS2A_build_packet(unsigned char))
        [0x000086b0 to 0x000087f3] - doPopup(char const*, unsigned char, unsigned char) (section .text.doPopup(char const*, unsigned char, unsigned char))
        [0x000087f4 to 0x00008917] - lcd_putcAtt(unsigned char, unsigned char, char, unsigned char) (section .text.lcd_putcAtt(unsigned char, unsigned char, char, unsigned char))
        [0x00008918 to 0x00008a3b] - Vario_play(int, bool) (section .text.Vario_play(int, bool))
        [0x00008a3c to 0x00008b53] - menuProcVoiceAlarm(unsigned char) (section .text.menuProcVoiceAlarm(unsigned char))
        [0x00008b54 to 0x00008c43] - menuModelPhases(unsigned char) (section .text.menuModelPhases(unsigned char))
        [0x00008c44 to 0x00008d2f] - setupPulsesPPM(unsigned char) (section .text.setupPulsesPPM(unsigned char))
        [0x00008d30 to 0x00008e17] - per10ms() (section .text.per10ms())
        [0x00008e18 to 0x00008efb] - checkSwitches() (section .text.checkSwitches())
        [0x00008efc to 0x00008fd7] - voice_telem_item(unsigned char) (section .text.voice_telem_item(unsigned char))
        [0x00008fd8 to 0x000090af] - setStickCenter() (section .text.setStickCenter())
        [0x000090b0 to 0x0000917b] - calc_scaler(unsigned char, unsigned char*, unsigned char*) (section .text.calc_scaler(unsigned char, unsigned char*, unsigned char*))
        [0x0000917c to 0x00009247] - A7105_Init() (section .text.A7105_Init())
        [0x00009248 to 0x0000930b] - EFile::write(unsigned char*, unsigned char) (section .text.EFile::write(unsigned char*, unsigned char))
        [0x0000930c to 0x000093cf] - Key::input(bool, EnumKeys) (section .text.Key::input(bool, EnumKeys))
        [0x000093d0 to 0x00009493] - setupPulses() (section .text.setupPulses())
        [0x00009494 to 0x00009553] - audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.audioQueue::play(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009554 to 0x00009613] - menuProcStatistic(unsigned char) (section .text.menuProcStatistic(unsigned char))
        [0x00009614 to 0x000096d3] - menuRXSetup(unsigned char) (section .text.menuRXSetup(unsigned char))
        [0x000096d4 to 0x0000978f] - calcExpo(unsigned char, short) (section .text.calcExpo(unsigned char, short))
        [0x00009790 to 0x00009847] - menuProcCurve(unsigned char) (section .text.menuProcCurve(unsigned char))
        [0x00009848 to 0x000098fb] - initAFHDS2A (section .text.initAFHDS2A)
        [0x000098fc to 0x000099af] - indexProcess(unsigned char, MState2*, unsigned char) (section .text.indexProcess(unsigned char, MState2*, unsigned char))
        [0x000099b0 to 0x00009a5f] - editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char) (section .text.editName(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char))
        [0x00009a60 to 0x00009b0f] - editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.editExpoVals(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009b10 to 0x00009bbb] - ActionAFHDS (section .text.ActionAFHDS)
        [0x00009bbc to 0x00009c5f] - EeFsck() (section .text.EeFsck())
        [0x00009c60 to 0x00009d03] - menuDeleteDupModel(unsigned char) (section .text.menuDeleteDupModel(unsigned char))
        [0x00009d04 to 0x00009da7] - menuRangeBind(unsigned char) (section .text.menuRangeBind(unsigned char))
        [0x00009da8 to 0x00009e4b] - putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTmrMode(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x00009e4c to 0x00009eeb] - drawFunction(unsigned char, unsigned char) (section .text.drawFunction(unsigned char, unsigned char))
        [0x00009eec to 0x00009f83] - ISR_TIMER3_CAPT_vect (section .text.ISR_TIMER3_CAPT_vect)
        [0x00009f84 to 0x0000a017] - SystemInit (section .init.SystemInit)
        [0x0000a018 to 0x0000a0a7] - initAFHDS (section .text.initAFHDS)
        [0x0000a0a8 to 0x0000a137] - checkIndexed(unsigned char, char const*, unsigned char, unsigned char) (section .text.checkIndexed(unsigned char, char const*, unsigned char, unsigned char))
        [0x0000a138 to 0x0000a1c3] - doMainScreenGrphics() (section .text.doMainScreenGrphics())
        [0x0000a1c4 to 0x0000a24f] - refreshDiplay() (section .text.refreshDiplay())
        [0x0000a250 to 0x0000a2db] - gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char) (section .text.gvarMenuItem(unsigned char, unsigned char, signed char, signed char, signed char, unsigned char))
        [0x0000a2dc to 0x0000a363] - singleBar(unsigned char, unsigned char, short) (section .text.singleBar(unsigned char, unsigned char, short))
        [0x0000a364 to 0x0000a3eb] - drawCurve(unsigned char) (section .text.drawCurve(unsigned char))
        [0x0000a3ec to 0x0000a473] - keyState(EnumKeys) (section .text.keyState(EnumKeys))
        [0x0000a474 to 0x0000a4fb] - eeGeneralDefault() (section .text.eeGeneralDefault())
        [0x0000a4fc to 0x0000a583] - putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChnRaw(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000a584 to 0x0000a603] - audioQueue::heartbeat() (section .text.audioQueue::heartbeat())
        [0x0000a604 to 0x0000a683] - createCrossfireChannelsFrame(unsigned char*, short*) (section .text.createCrossfireChannelsFrame(unsigned char*, short*))
        [0x0000a684 to 0x0000a703] - putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000a704 to 0x0000a77f] - scaleAnalog(short, unsigned char) (section .text.scaleAnalog(short, unsigned char))
        [0x0000a780 to 0x0000a7f7] - EFile::read(unsigned char*, unsigned short) (section .text.EFile::read(unsigned char*, unsigned short))
        [0x0000a7f8 to 0x0000a86f] - lcd_vline(unsigned char, unsigned char, signed char) (section .text.lcd_vline(unsigned char, unsigned char, signed char))
        [0x0000a870 to 0x0000a8e7] - putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char) (section .text.putsTelemValue(unsigned char, unsigned char, int, unsigned char, unsigned char, unsigned char))
        [0x0000a8e8 to 0x0000a95f] - eeReadGeneral() (section .text.eeReadGeneral())
        [0x0000a960 to 0x0000a9d3] - get_telemetry_value(unsigned char) (section .text.get_telemetry_value(unsigned char))
        [0x0000a9d4 to 0x0000aa47] - getGvarSourceValue(unsigned char) (section .text.getGvarSourceValue(unsigned char))
        [0x0000aa48 to 0x0000aab7] - insertMix(unsigned char, unsigned char) (section .text.insertMix(unsigned char, unsigned char))
        [0x0000aab8 to 0x0000ab27] - getValue(unsigned char) (section .text.getValue(unsigned char))
        [0x0000ab28 to 0x0000ab97] - alertx(char const*, bool) (section .text.alertx(char const*, bool))
        [0x0000ab98 to 0x0000ac07] - menuDeleteMix(unsigned char) (section .text.menuDeleteMix(unsigned char))
        [0x0000ac08 to 0x0000ac73] - modelDefaultWrite(unsigned char) (section .text.modelDefaultWrite(unsigned char))
        [0x0000ac74 to 0x0000acdf] - SPI0_IRQHandler (section .text.SPI0_IRQHandler)
        [0x0000ace0 to 0x0000ad47] - setup_crsf_serial_port (section .text.setup_crsf_serial_port)
        [0x0000ad48 to 0x0000adaf] - eeDuplicateModel(unsigned char) (section .text.eeDuplicateModel(unsigned char))
        [0x0000adb0 to 0x0000ae17] - Vario_driver() (section .text.Vario_driver())
        [0x0000ae18 to 0x0000ae7b] - A7105_AdjustLOBaseFreq() (section .text.A7105_AdjustLOBaseFreq())
        [0x0000ae7c to 0x0000aedf] - lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char) (section .text.lcd_hlineStip(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000aee0 to 0x0000af43] - setTrimValue(unsigned char, unsigned char, short) (section .text.setTrimValue(unsigned char, unsigned char, short))
        [0x0000af44 to 0x0000afa7] - PIND (section .text.PIND)
        [0x0000afa8 to 0x0000b007] - getADC_osmp (section .text.getADC_osmp)
        [0x0000b008 to 0x0000b067] - eeLoadModelName(unsigned char, char*, unsigned char) (section .text.eeLoadModelName(unsigned char, char*, unsigned char))
        [0x0000b068 to 0x0000b0c7] - PINB (section .text.PINB)
        [0x0000b0c8 to 0x0000b123] - almess(char const*, unsigned char) (section .text.almess(char const*, unsigned char))
        [0x0000b124 to 0x0000b17f] - processCrossfireTelemetryData(unsigned char) (section .text.processCrossfireTelemetryData(unsigned char))
        [0x0000b180 to 0x0000b1db] - doBackLightVoice(unsigned char) (section .text.doBackLightVoice(unsigned char))
        [0x0000b1dc to 0x0000b237] - calcStickScroll(unsigned char) (section .text.calcStickScroll(unsigned char))
        [0x0000b238 to 0x0000b293] - applyTemplate() (section .text.applyTemplate())
        [0x0000b294 to 0x0000b2eb] - EFile::closeTrunc() (section .text.EFile::closeTrunc())
        [0x0000b2ec to 0x0000b343] - lcd_init() (section .text.lcd_init())
        [0x0000b344 to 0x0000b39b] - setMix(unsigned char, unsigned char) (section .text.setMix(unsigned char, unsigned char))
        [0x0000b39c to 0x0000b3f3] - dispInVExVDbl(unsigned char) (section .text.dispInVExVDbl(unsigned char))
        [0x0000b3f4 to 0x0000b44b] - putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char) (section .text.putsChnOpRaw(unsigned char, unsigned char, t_MixData*, unsigned char))
        [0x0000b44c to 0x0000b49f] - dispSignalQality(unsigned char) (section .text.dispSignalQality(unsigned char))
        [0x0000b4a0 to 0x0000b4f3] - eeWriteGeneral() (section .text.eeWriteGeneral())
        [0x0000b4f4 to 0x0000b547] - PINE (section .text.PINE)
        [0x0000b548 to 0x0000b597] - A7105_WriteData(unsigned char, unsigned char) (section .text.A7105_WriteData(unsigned char, unsigned char))
        [0x0000b598 to 0x0000b5e7] - putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsTrimMode(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000b5e8 to 0x0000b637] - TPM0_IRQHandler (section .text.TPM0_IRQHandler)
        [0x0000b638 to 0x0000b687] - ISR_TIMER0_COMP_vect (section .text.ISR_TIMER0_COMP_vect)
        [0x0000b688 to 0x0000b6d3] - checkTHR() (section .text.checkTHR())
        [0x0000b6d4 to 0x0000b71f] - lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char) (section .text.lcd_img(unsigned char, unsigned char, unsigned char const*, unsigned char))
        [0x0000b720 to 0x0000b76b] - checkThrottlePosition() (section .text.checkThrottlePosition())
        [0x0000b76c to 0x0000b7b7] - SPI_RADIO_ReceiveBlock (section .text.SPI_RADIO_ReceiveBlock)
        [0x0000b7b8 to 0x0000b7ff] - setupPulsesCrossfire() (section .text.setupPulsesCrossfire())
        [0x0000b800 to 0x0000b847] - SetStartPulsePol() (section .text.SetStartPulsePol())
        [0x0000b848 to 0x0000b88f] - yesNoMenuExit(unsigned char, char const*) (section .text.yesNoMenuExit(unsigned char, char const*))
        [0x0000b890 to 0x0000b8d7] - _GLOBAL__sub_I_ELRS.cpp (section .text._GLOBAL__sub_I_ELRS.cpp)
        [0x0000b8d8 to 0x0000b91f] - PIT_IRQHandler (section .text.PIT_IRQHandler)
        [0x0000b920 to 0x0000b963] - ModuleSyncStatus::update(unsigned short, short) (section .text.ModuleSyncStatus::update(unsigned short, short))
        [0x0000b964 to 0x0000b9a7] - check_backlight_voice() (section .text.check_backlight_voice())
        [0x0000b9a8 to 0x0000b9eb] - eeprom_read_block(void*, void const*, unsigned int) (section .text.eeprom_read_block(void*, void const*, unsigned int))
        [0x0000b9ec to 0x0000ba2f] - eeWriteBlockCmp(void const*, unsigned short, unsigned int) (section .text.eeWriteBlockCmp(void const*, unsigned short, unsigned int))
        [0x0000ba30 to 0x0000ba73] - ISR_TIMER1_COMPA_vect (section .text.ISR_TIMER1_COMPA_vect)
        [0x0000ba74 to 0x0000bab7] - NMI_Handler (section .init)
        [0x0000bab8 to 0x0000baf7] - EFile::swap(unsigned char, unsigned char) (section .text.EFile::swap(unsigned char, unsigned char))
        [0x0000baf8 to 0x0000bb37] - audioQueue::getToneLength(unsigned char) (section .text.audioQueue::getToneLength(unsigned char))
        [0x0000bb38 to 0x0000bb73] - crsf_send_data (section .text.crsf_send_data)
        [0x0000bb74 to 0x0000bbaf] - editSlowDelay(unsigned char, unsigned char, unsigned char) (section .text.editSlowDelay(unsigned char, unsigned char, unsigned char))
        [0x0000bbb0 to 0x0000bbeb] - anaIn(unsigned char) (section .text.anaIn(unsigned char))
        [0x0000bbec to 0x0000bc27] - displayOneSwitch(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch(unsigned char, unsigned char, unsigned char))
        [0x0000bc28 to 0x0000bc63] - rangeBindAction(unsigned char, unsigned char) (section .text.rangeBindAction(unsigned char, unsigned char))
        [0x0000bc64 to 0x0000bc9f] - getRawTrimValue(unsigned char, unsigned char) (section .text.getRawTrimValue(unsigned char, unsigned char))
        [0x0000bca0 to 0x0000bcdb] - EeFsFormat() (section .text.EeFsFormat())
        [0x0000bcdc to 0x0000bd13] - audioQueue::driver() (section .text.audioQueue::driver())
        [0x0000bd14 to 0x0000bd4b] - put_curve(unsigned char, unsigned char, signed char, unsigned char) (section .text.put_curve(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000bd4c to 0x0000bd83] - REG(signed char, signed char, signed char) (section .text.REG(signed char, signed char, signed char))
        [0x0000bd84 to 0x0000bdbb] - bool getCrossfireTelemetryValue<4>(unsigned char, int&) (section .text.bool getCrossfireTelemetryValue<4>(unsigned char, int&))
        [0x0000bdbc to 0x0000bdf3] - bool getCrossfireTelemetryValue<3>(unsigned char, int&) (section .text.bool getCrossfireTelemetryValue<3>(unsigned char, int&))
        [0x0000bdf4 to 0x0000be2b] - bool getCrossfireTelemetryValue<2>(unsigned char, int&) (section .text.bool getCrossfireTelemetryValue<2>(unsigned char, int&))
        [0x0000be2c to 0x0000be63] - bool getCrossfireTelemetryValue<1>(unsigned char, int&) (section .text.bool getCrossfireTelemetryValue<1>(unsigned char, int&))
        [0x0000be64 to 0x0000be9b] - lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_char_inverse(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000be9c to 0x0000bed3] - get_dr_state(unsigned char) (section .text.get_dr_state(unsigned char))
        [0x0000bed4 to 0x0000bf0b] - resetTimern(unsigned char) (section .text.resetTimern(unsigned char))
        [0x0000bf0c to 0x0000bf43] - SetPRTTimPeriod (section .text.SetPRTTimPeriod)
        [0x0000bf44 to 0x0000bf7b] - PORTC_PORTD_IRQHandler (section .text.PORTC_PORTD_IRQHandler)
        [0x0000bf7c to 0x0000bfb3] - menuProcModelIndex(unsigned char)::n_Strings (section .rodata.menuProcModelIndex(unsigned char)::n_Strings)
        [0x0000bfb4 to 0x0000bfeb] - [.rodata..Lswitch.table.menuProcModelIndex(unsigned char)] (section .rodata..Lswitch.table.menuProcModelIndex(unsigned char))
        [0x0000bfec to 0x0000c01f] - pushMenu(void (*)(unsigned char)) (section .text.pushMenu(void (*)(unsigned char)))
        [0x0000c020 to 0x0000c053] - lcd_write_bits(unsigned char*, unsigned char) (section .text.lcd_write_bits(unsigned char*, unsigned char))
        [0x0000c054 to 0x0000c087] - getFlightPhase() (section .text.getFlightPhase())
        [0x0000c088 to 0x0000c0bb] - A7105_SetPower() (section .text.A7105_SetPower())
        [0x0000c0bc to 0x0000c0ef] - SPI_RADIO_SendBlock (section .text.SPI_RADIO_SendBlock)
        [0x0000c0f0 to 0x0000c11f] - EFile::create(unsigned char, unsigned char, unsigned short) (section .text.EFile::create(unsigned char, unsigned char, unsigned short))
        [0x0000c120 to 0x0000c14f] - EeFsFree(unsigned char) (section .text.EeFsFree(unsigned char))
        [0x0000c150 to 0x0000c17f] - modelSave(unsigned char) (section .text.modelSave(unsigned char))
        [0x0000c180 to 0x0000c1af] - char2idx(char) (section .text.char2idx(char))
        [0x0000c1b0 to 0x0000c1df] - EeFsOpen() (section .text.EeFsOpen())
        [0x0000c1e0 to 0x0000c20f] - eeDirty(unsigned char) (section .text.eeDirty(unsigned char))
        [0x0000c210 to 0x0000c23f] - eeLoadModelForBackup(unsigned char) (section .text.eeLoadModelForBackup(unsigned char))
        [0x0000c240 to 0x0000c26f] - convert_failsafe_ppm(unsigned char) (section .text.convert_failsafe_ppm(unsigned char))
        [0x0000c270 to 0x0000c29f] - displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayVoiceRate(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c2a0 to 0x0000c2cf] - A7105_ReadData(unsigned char) (section .text.A7105_ReadData(unsigned char))
        [0x0000c2d0 to 0x0000c2ff] - TPM2_IRQHandler (section .text.TPM2_IRQHandler)
        [0x0000c300 to 0x0000c32b] - SX127xDriver::SX127xDriver() (section .text.SX127xDriver::SX127xDriver())
        [0x0000c32c to 0x0000c357] - crsf_init() (section .text.crsf_init())
        [0x0000c358 to 0x0000c383] - dispGvar(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.dispGvar(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c384 to 0x0000c3af] - popMenu(bool) (section .text.popMenu(bool))
        [0x0000c3b0 to 0x0000c3db] - putVoiceQueueLong(unsigned short) (section .text.putVoiceQueueLong(unsigned short))
        [0x0000c3dc to 0x0000c407] - menuMixersLimit(unsigned char) (section .text.menuMixersLimit(unsigned char))
        [0x0000c408 to 0x0000c433] - PING (section .text.PING)
        [0x0000c434 to 0x0000c45f] - menuProcIndex(unsigned char)::n_Strings (section .rodata.menuProcIndex(unsigned char)::n_Strings)
        [0x0000c460 to 0x0000c487] - mDelay (section .text.mDelay)
        [0x0000c488 to 0x0000c4af] - EFile::rm(unsigned char) (section .text.EFile::rm(unsigned char))
        [0x0000c4b0 to 0x0000c4d7] - EeFsAlloc() (section .text.EeFsAlloc())
        [0x0000c4d8 to 0x0000c4ff] - putsVolts(unsigned char, unsigned char, short, unsigned char) (section .text.putsVolts(unsigned char, unsigned char, short, unsigned char))
        [0x0000c500 to 0x0000c527] - putsVBat(unsigned char, unsigned char, unsigned char) (section .text.putsVBat(unsigned char, unsigned char, unsigned char))
        [0x0000c528 to 0x0000c54f] - lcd_plot(unsigned char, unsigned char) (section .text.lcd_plot(unsigned char, unsigned char))
        [0x0000c550 to 0x0000c577] - A7105_AntSwitch() (section .text.A7105_AntSwitch())
        [0x0000c578 to 0x0000c59f] - eeWaitComplete() (section .text.eeWaitComplete())
        [0x0000c5a0 to 0x0000c5c7] - switchDisplay(unsigned char, unsigned char) (section .text.switchDisplay(unsigned char, unsigned char))
        [0x0000c5c8 to 0x0000c5ef] - startPulses() (section .text.startPulses())
        [0x0000c5f0 to 0x0000c617] - progressBar() (section .text.progressBar())
        [0x0000c618 to 0x0000c63f] - evalOffset(signed char) (section .text.evalOffset(signed char))
        [0x0000c640 to 0x0000c667] - Reset_Handler (section .init)
        [0x0000c668 to 0x0000c68b] - EFile::openRd(unsigned char) (section .text.EFile::openRd(unsigned char))
        [0x0000c68c to 0x0000c6af] - curveAddress(unsigned char) (section .text.curveAddress(unsigned char))
        [0x0000c6b0 to 0x0000c6d3] - getSvFifo() (section .text.getSvFifo())
        [0x0000c6d4 to 0x0000c6f7] - ee_waite() (section .text.ee_waite())
        [0x0000c6f8 to 0x0000c71b] - reachMixerCountLimit() (section .text.reachMixerCountLimit())
        [0x0000c71c to 0x0000c73f] - dispFlightModename(unsigned char, unsigned char, unsigned char) (section .text.dispFlightModename(unsigned char, unsigned char, unsigned char))
        [0x0000c740 to 0x0000c763] - evalChkSum() (section .text.evalChkSum())
        [0x0000c764 to 0x0000c787] - LCD_DATA (section .text.LCD_DATA)
        [0x0000c788 to 0x0000c7ab] - processCrossfireTelemetryFrame()::power_values (section .rodata.processCrossfireTelemetryFrame()::power_values)
        [0x0000c7ac to 0x0000c7cb] - EFile::size() (section .text.EFile::size())
        [0x0000c7cc to 0x0000c7eb] - chainMenu(void (*)(unsigned char)) (section .text.chainMenu(void (*)(unsigned char)))
        [0x0000c7ec to 0x0000c80b] - crc8(unsigned char const*, unsigned int) (section .text.crc8(unsigned char const*, unsigned int))
        [0x0000c80c to 0x0000c82b] - checkCrossfireTelemetryFrameCRC() (section .text.checkCrossfireTelemetryFrameCRC())
        [0x0000c82c to 0x0000c84b] - processVoiceAlarms() (section .text.processVoiceAlarms())
        [0x0000c84c to 0x0000c86b] - putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char) (section .text.putsOffDecimal(unsigned char, unsigned char, unsigned short, unsigned char))
        [0x0000c86c to 0x0000c88b] - lcdSetRefVolt(unsigned char) (section .text.lcdSetRefVolt(unsigned char))
        [0x0000c88c to 0x0000c8ab] - backlightKey() (section .text.backlightKey())
        [0x0000c8ac to 0x0000c8cb] - pauseEvents(unsigned char) (section .text.pauseEvents(unsigned char))
        [0x0000c8cc to 0x0000c8eb] - menuPressed() (section .text.menuPressed())
        [0x0000c8ec to 0x0000c90b] - EeFsGetFree() (section .text.EeFsGetFree())
        [0x0000c90c to 0x0000c92b] - ISR_TIMER2_OVF_vect (section .text.ISR_TIMER2_OVF_vect)
        [0x0000c92c to 0x0000c947] - trace() (section .text.trace())
        [0x0000c948 to 0x0000c963] - audioVoiceDefevent(unsigned char, unsigned char) (section .text.audioVoiceDefevent(unsigned char, unsigned char))
        [0x0000c964 to 0x0000c97f] - throttleReversed() (section .text.throttleReversed())
        [0x0000c980 to 0x0000c99b] - putWarnSwitch(unsigned char, unsigned char) (section .text.putWarnSwitch(unsigned char, unsigned char))
        [0x0000c99c to 0x0000c9b7] - modeFixValue(unsigned char) (section .text.modeFixValue(unsigned char))
        [0x0000c9b8 to 0x0000c9d3] - displayTimer(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.displayTimer(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000c9d4 to 0x0000c9ef] - crsf_action() (section .text.crsf_action())
        [0x0000c9f0 to 0x0000ca0b] - killEvents(unsigned char) (section .text.killEvents(unsigned char))
        [0x0000ca0c to 0x0000ca27] - TPM1_IRQHandler (section .text.TPM1_IRQHandler)
        [0x0000ca28 to 0x0000ca43] - EnableGIO (section .text.EnableGIO)
        [0x0000ca44 to 0x0000ca5b] - clearKeyEvents() (section .text.clearKeyEvents())
        [0x0000ca5c to 0x0000ca73] - lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000ca74 to 0x0000ca8b] - putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsAttIdxTelemItems(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000ca8c to 0x0000caa3] - hyphinvMenuItem(unsigned char, unsigned char, unsigned char) (section .text.hyphinvMenuItem(unsigned char, unsigned char, unsigned char))
        [0x0000caa4 to 0x0000cabb] - GetChipID (section .text.GetChipID)
        [0x0000cabc to 0x0000cacf] - EFile::exists(unsigned char) (section .text.EFile::exists(unsigned char))
        [0x0000cad0 to 0x0000cae3] - EeFsFlush() (section .text.EeFsFlush())
        [0x0000cae4 to 0x0000caf7] - EeFsFlushFreelist() (section .text.EeFsFlushFreelist())
        [0x0000caf8 to 0x0000cb0b] - setVolume(unsigned char) (section .text.setVolume(unsigned char))
        [0x0000cb0c to 0x0000cb1f] - lcd_clear() (section .text.lcd_clear())
        [0x0000cb20 to 0x0000cb33] - idx2char(unsigned char) (section .text.idx2char(unsigned char))
        [0x0000cb34 to 0x0000cb47] - crsf_current_period() (section .text.crsf_current_period())
        [0x0000cb48 to 0x0000cb5b] - startSerialVoice() (section .text.startSerialVoice())
        [0x0000cb5c to 0x0000cb6f] - IS_EXPO_THROTTLE(unsigned char) (section .text.IS_EXPO_THROTTLE(unsigned char))
        [0x0000cb70 to 0x0000cb83] - checkIncDec_u0(short, unsigned char) (section .text.checkIncDec_u0(short, unsigned char))
        [0x0000cb84 to 0x0000cb97] - checkIncDec_0(signed char, signed char) (section .text.checkIncDec_0(signed char, signed char))
        [0x0000cb98 to 0x0000cbab] - audioDefevent(unsigned char) (section .text.audioDefevent(unsigned char))
        [0x0000cbac to 0x0000cbbf] - resetTimer1() (section .text.resetTimer1())
        [0x0000cbc0 to 0x0000cbd3] - displayNext() (section .text.displayNext())
        [0x0000cbd4 to 0x0000cbe7] - clearMixes() (section .text.clearMixes())
        [0x0000cbe8 to 0x0000cbfb] - audioEvent(unsigned char, unsigned short) (section .text.audioEvent(unsigned char, unsigned short))
        [0x0000cbfc to 0x0000cc0f] - DisableGIO (section .text.DisableGIO)
        [0x0000cc10 to 0x0000cc23] - CROSSFIRE_BAUDRATES (section .rodata.CROSSFIRE_BAUDRATES)
        [0x0000cc24 to 0x0000cc37] - _start (section .init._start)
        [0x0000cc38 to 0x0000cc47] - rw_0 (section .text.rw_0)
        [0x0000cc48 to 0x0000cc57] - rs_1 (section .text.rs_1)
        [0x0000cc58 to 0x0000cc67] - rs_0 (section .text.rs_0)
        [0x0000cc68 to 0x0000cc77] - rd_1 (section .text.rd_1)
        [0x0000cc78 to 0x0000cc87] - rd_0 (section .text.rd_0)
        [0x0000cc88 to 0x0000cc97] - CS_STATE(unsigned char) (section .text.CS_STATE(unsigned char))
        [0x0000cc98 to 0x0000cca7] - lcdSetContrast() (section .text.lcdSetContrast())
        [0x0000cca8 to 0x0000ccb7] - checkIncDec_i8(signed char, signed char, signed char) (section .text.checkIncDec_i8(signed char, signed char, signed char))
        [0x0000ccb8 to 0x0000ccc7] - mixaddress(unsigned char) (section .text.mixaddress(unsigned char))
        [0x0000ccc8 to 0x0000ccd7] - _GLOBAL__sub_I_er9x.cpp (section .text._GLOBAL__sub_I_er9x.cpp)
        [0x0000ccd8 to 0x0000cce7] - _GLOBAL__sub_I_SX127x.cpp (section .text._GLOBAL__sub_I_SX127x.cpp)
        [0x0000cce8 to 0x0000ccf7] - TX_RX_PutVal (section .text.TX_RX_PutVal)
        [0x0000ccf8 to 0x0000cd07] - GetPPMTimCompareInterruptFlag (section .text.GetPPMTimCompareInterruptFlag)
        [0x0000cd08 to 0x0000cd17] - GetPPMOutState (section .text.GetPPMOutState)
        [0x0000cd18 to 0x0000cd27] - ClearPPMTimCompareInterruptFlag (section .text.ClearPPMTimCompareInterruptFlag)
        [0x0000cd28 to 0x0000cd37] - Buzzer_SetVal (section .text.Buzzer_SetVal)
        [0x0000cd38 to 0x0000cd47] - Buzzer_ClrVal (section .text.Buzzer_ClrVal)
        [0x0000cd48 to 0x0000cd53] - rst_1 (section .text.rst_1)
        [0x0000cd54 to 0x0000cd5f] - rst_0 (section .text.rst_0)
        [0x0000cd60 to 0x0000cd6b] - cs_0 (section .text.cs_0)
        [0x0000cd6c to 0x0000cd77] - backlight_on (section .text.backlight_on)
        [0x0000cd78 to 0x0000cd83] - backlight_off (section .text.backlight_off)
        [0x0000cd84 to 0x0000cd8f] - a7105_csn_on (section .text.a7105_csn_on)
        [0x0000cd90 to 0x0000cd9b] - a7105_csn_off (section .text.a7105_csn_off)
        [0x0000cd9c to 0x0000cda7] - SX127xHal::SX127xHal() (section .text.SX127xHal::SX127xHal())
        [0x0000cda8 to 0x0000cdb3] - get_tmr10ms() (section .text.get_tmr10ms())
        [0x0000cdb4 to 0x0000cdbf] - SetPPMTimCompare (section .text.SetPPMTimCompare)
        [0x0000cdc0 to 0x0000cdcb] - RF1_SetVal (section .text.RF1_SetVal)
        [0x0000cdcc to 0x0000cdd7] - RF1_ClrVal (section .text.RF1_ClrVal)
        [0x0000cdd8 to 0x0000cde3] - RF0_SetVal (section .text.RF0_SetVal)
        [0x0000cde4 to 0x0000cdef] - RF0_ClrVal (section .text.RF0_ClrVal)
        [0x0000cdf0 to 0x0000cdfb] - GetPPMTimCompare (section .text.GetPPMTimCompare)
        [0x0000cdfc to 0x0000ce07] - GetPPMTimCapture (section .text.GetPPMTimCapture)
        [0x0000ce08 to 0x0000ce13] - EnablePRTTim (section .text.EnablePRTTim)
        [0x0000ce14 to 0x0000ce1f] - EnablePPMTim (section .text.EnablePPMTim)
        [0x0000ce20 to 0x0000ce2b] - EnablePPMOut (section .text.EnablePPMOut)
        [0x0000ce2c to 0x0000ce37] - DisablePRTTim (section .text.DisablePRTTim)
        [0x0000ce38 to 0x0000ce43] - DisablePPMOut (section .text.DisablePPMOut)
        [0x0000ce44 to 0x0000cf45] - voice_numeric(short, unsigned char, unsigned char) (section .text.voice_numeric(short, unsigned char, unsigned char))
        [0x0000cf46 to 0x0000d025] - EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char) (section .text.EFile::writeRlc(unsigned char, unsigned char, unsigned char*, unsigned short, unsigned char))
        [0x0000d026 to 0x0000d0a9] - putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char) (section .text.putsTime(unsigned char, unsigned char, short, unsigned char, unsigned char))
        [0x0000d0aa to 0x0000d11d] - intpol(short, unsigned char) (section .text.intpol(short, unsigned char))
        [0x0000d11e to 0x0000d18f] - EFile::readRlc(unsigned char*, unsigned short) (section .text.EFile::readRlc(unsigned char*, unsigned short))
        [0x0000d190 to 0x0000d1fb] - displayIndex(char const* const*, unsigned char, unsigned char, unsigned char) (section .text.displayIndex(char const* const*, unsigned char, unsigned char, unsigned char))
        [0x0000d1fc to 0x0000d25f] - VarioTab (section .rodata.VarioTab)
        [0x0000d260 to 0x0000d2b9] - telltale(unsigned char, signed char, signed char) (section .text.telltale(unsigned char, signed char, signed char))
        [0x0000d2ba to 0x0000d303] - lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_hbar(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d304 to 0x0000d349] - lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_rect_xor(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d34a to 0x0000d38b] - getTrimFlightPhase(unsigned char, unsigned char) (section .text.getTrimFlightPhase(unsigned char, unsigned char))
        [0x0000d38c to 0x0000d3cd] - lcd_outhex4(unsigned char, unsigned char, unsigned short) (section .text.lcd_outhex4(unsigned char, unsigned char, unsigned short))
        [0x0000d3ce to 0x0000d40d] - __aeabi_idivmod (section .text.libc.__aeabi_idivmod)
        [0x0000d40e to 0x0000d44b] - displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char) (section .text.displayOneSwitch3Pos(unsigned char, unsigned char, unsigned char))
        [0x0000d44c to 0x0000d487] - __divsi3 (section .text.libc.__int32_div)
        [0x0000d488 to 0x0000d4c3] - expo(short, short) (section .text.expo(short, short))
        [0x0000d4c4 to 0x0000d4fb] - edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char) (section .text.edit_dr_switch(unsigned char, unsigned char, signed char, unsigned char, unsigned char))
        [0x0000d4fc to 0x0000d52f] - putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char) (section .text.putsMomentDrSwitches(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000d530 to 0x0000d561] - lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsAtt(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000d562 to 0x0000d58f] - GENERIC_CRC14::GENERIC_CRC14(unsigned short) (section .text.GENERIC_CRC14::GENERIC_CRC14(unsigned short))
        [0x0000d590 to 0x0000d5bb] - A7105_WriteID(unsigned int) (section .text.A7105_WriteID(unsigned int))
        [0x0000d5bc to 0x0000d5e7] - A7105_ReadReg(unsigned char) (section .text.A7105_ReadReg(unsigned char))
        [0x0000d5e8 to 0x0000d611] - __aeabi_uidivmod (section .text.libc.__aeabi_uidivmod)
        [0x0000d612 to 0x0000d63b] - lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsnAtt(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000d63c to 0x0000d663] - __udivsi3 (section .text.libc.__uint32_div)
        [0x0000d664 to 0x0000d68b] - doVoiceAlarmSource(t_voiceAlarm*) (section .text.doVoiceAlarmSource(t_voiceAlarm*))
        [0x0000d68c to 0x0000d6b3] - A7105_Reset() (section .text.A7105_Reset())
        [0x0000d6b4 to 0x0000d6d9] - lcd_puts_Pskip(unsigned char, char const*, unsigned char) (section .text.lcd_puts_Pskip(unsigned char, char const*, unsigned char))
        [0x0000d6da to 0x0000d6fd] - div (section .text.libc.div)
        [0x0000d6fe to 0x0000d721] - __lshrdi3 (section .text.libc.__int64_lsr)
        [0x0000d722 to 0x0000d745] - __ashldi3 (section .text.libc.__int64_lsl)
        [0x0000d746 to 0x0000d769] - scalerDecimal(unsigned char, unsigned char, unsigned char) (section .text.scalerDecimal(unsigned char, unsigned char, unsigned char))
        [0x0000d76a to 0x0000d78b] - memmove (section .text.libc.memmove)
        [0x0000d78c to 0x0000d7ad] - expou(unsigned short, unsigned short) (section .text.expou(unsigned short, unsigned short))
        [0x0000d7ae to 0x0000d7cf] - getCurrentSwitchStates() (section .text.getCurrentSwitchStates())
        [0x0000d7d0 to 0x0000d7ef] - lcdSendCtl(unsigned char) (section .text.lcdSendCtl(unsigned char))
        [0x0000d7f0 to 0x0000d80f] - stickMoveValue() (section .text.stickMoveValue())
        [0x0000d810 to 0x0000d82d] - memcmp (section .text.libc.memcmp)
        [0x0000d82e to 0x0000d84b] - A7105_WriteReg(unsigned char, unsigned char) (section .text.A7105_WriteReg(unsigned char, unsigned char))
        [0x0000d84c to 0x0000d867] - onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.onoffMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000d868 to 0x0000d883] - validateName(char*, unsigned char) (section .text.validateName(char*, unsigned char))
        [0x0000d884 to 0x0000d89f] - voiceMinutes(short) (section .text.voiceMinutes(short))
        [0x0000d8a0 to 0x0000d8bb] - A7105_Strobe(unsigned char) (section .text.A7105_Strobe(unsigned char))
        [0x0000d8bc to 0x0000d8d5] - serialVoiceWaitByte(unsigned char) (section .text.serialVoiceWaitByte(unsigned char))
        [0x0000d8d6 to 0x0000d8ef] - lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char) (section .text.lcd_putsAttIdx(unsigned char, unsigned char, char const*, unsigned char, unsigned char))
        [0x0000d8f0 to 0x0000d907] - StubbornSender::ResetState() (section .text.StubbornSender::ResetState())
        [0x0000d908 to 0x0000d91f] - EeFsRead(unsigned char, unsigned char) (section .text.EeFsRead(unsigned char, unsigned char))
        [0x0000d920 to 0x0000d935] - memcpy (section .text.libc.memcpy)
        [0x0000d936 to 0x0000d94b] - EeFsSetLink(unsigned char, unsigned char) (section .text.EeFsSetLink(unsigned char, unsigned char))
        [0x0000d94c to 0x0000d961] - gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char) (section .text.gvarMenuItem125(unsigned char, unsigned char, signed char, unsigned char))
        [0x0000d962 to 0x0000d977] - calc100toRESX(signed char) (section .text.calc100toRESX(signed char))
        [0x0000d978 to 0x0000d98b] - __aeabi_memclr8 (section .text.libc.__aeabi_memset)
        [0x0000d98c to 0x0000d99f] - StubbornReceiver::StubbornReceiver(unsigned char) (section .text.StubbornReceiver::StubbornReceiver(unsigned char))
        [0x0000d9a0 to 0x0000d9b3] - setNameP(char*, char const*) (section .text.setNameP(char*, char const*))
        [0x0000d9b4 to 0x0000d9c7] - lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*) (section .text.lcd_xlabel_decimal(unsigned char, unsigned char, unsigned short, unsigned char, char const*))
        [0x0000d9c8 to 0x0000d9db] - lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.lcd_2_digits(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000d9dc to 0x0000d9ed] - onoffItem(unsigned char, unsigned char, unsigned char) (section .text.onoffItem(unsigned char, unsigned char, unsigned char))
        [0x0000d9ee to 0x0000d9ff] - offonItem(unsigned char, unsigned char, unsigned char) (section .text.offonItem(unsigned char, unsigned char, unsigned char))
        [0x0000da00 to 0x0000da11] - offonMenuItem(unsigned char, unsigned char, char const*, unsigned char) (section .text.offonMenuItem(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000da12 to 0x0000da23] - putc_0_1(unsigned char, unsigned char, unsigned char) (section .text.putc_0_1(unsigned char, unsigned char, unsigned char))
        [0x0000da24 to 0x0000da33] - putsChn(unsigned char, unsigned char, unsigned char, unsigned char) (section .text.putsChn(unsigned char, unsigned char, unsigned char, unsigned char))
        [0x0000da34 to 0x0000da43] - TITLEP(char const*) (section .text.TITLEP(char const*))
        [0x0000da44 to 0x0000da53] - lcd_puts_Pleft(unsigned char, char const*) (section .text.lcd_puts_Pleft(unsigned char, char const*))
        [0x0000da54 to 0x0000da63] - calc1000toRESX(short) (section .text.calc1000toRESX(short))
        [0x0000da64 to 0x0000da73] - putsTimeNoAtt(unsigned char, unsigned char, short) (section .text.putsTimeNoAtt(unsigned char, unsigned char, short))
        [0x0000da74 to 0x0000da83] - lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char) (section .text.lcd_outdezAtt(unsigned char, unsigned char, short, unsigned char))
        [0x0000da84 to 0x0000da93] - getTrimValue(unsigned char, unsigned char) (section .text.getTrimValue(unsigned char, unsigned char))
        [0x0000da94 to 0x0000daa3] - lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char) (section .text.lcd_putsn_P(unsigned char, unsigned char, char const*, unsigned char))
        [0x0000daa4 to 0x0000dab3] - A7105_Sleep() (section .text.A7105_Sleep())
        [0x0000dab4 to 0x0000dac1] - main (section .text.main)
        [0x0000dac2 to 0x0000dacf] - StubbornSender::StubbornSender(unsigned char) (section .text.StubbornSender::StubbornSender(unsigned char))
        [0x0000dad0 to 0x0000dadd] - brSubHead(char const*) (section .text.brSubHead(char const*))
        [0x0000dade to 0x0000daeb] - message(char const*) (section .text.message(char const*))
        [0x0000daec to 0x0000daf9] - keyDown() (section .text.keyDown())
        [0x0000dafa to 0x0000db07] - putVoiceQueueUpper(unsigned char) (section .text.putVoiceQueueUpper(unsigned char))
        [0x0000db08 to 0x0000db15] - REG100_100(signed char) (section .text.REG100_100(signed char))
        [0x0000db16 to 0x0000db21] - switchPosition(unsigned char) (section .text.switchPosition(unsigned char))
        [0x0000db22 to 0x0000db2d] - eeModelExists(unsigned char) (section .text.eeModelExists(unsigned char))
        [0x0000db2e to 0x0000db39] - getSwitch00(signed char) (section .text.getSwitch00(signed char))
        [0x0000db3a to 0x0000db43] - EeFsGetLink(unsigned char) (section .text.EeFsGetLink(unsigned char))
        [0x0000db44 to 0x0000db4d] - lcd_hline(unsigned char, unsigned char, signed char) (section .text.lcd_hline(unsigned char, unsigned char, signed char))
        [0x0000db4e to 0x0000db57] - lcd_putc(unsigned char, unsigned char, char) (section .text.lcd_putc(unsigned char, unsigned char, char))
        [0x0000db58 to 0x0000db61] - alert(char const*) (section .text.alert(char const*))
        [0x0000db62 to 0x0000db6b] - resetTimer2() (section .text.resetTimer2())
        [0x0000db6c to 0x0000db75] - checkIncDec(signed char, signed char, signed char, unsigned char) (section .text.checkIncDec(signed char, signed char, signed char, unsigned char))
        [0x0000db76 to 0x0000db7f] - lcd_puts_P(unsigned char, unsigned char, char const*) (section .text.lcd_puts_P(unsigned char, unsigned char, char const*))
        [0x0000db80 to 0x0000db89] - lcd_outdez(unsigned char, unsigned char, short) (section .text.lcd_outdez(unsigned char, unsigned char, short))
        [0x0000db8a to 0x0000db91] - audioQueue::busy() (section .text.audioQueue::busy())
        [0x0000db92 to 0x0000db99] - A7105_SetTxRxMode(unsigned char) (section .text.A7105_SetTxRxMode(unsigned char))
        [0x0000db9a to 0x0000dba1] - putVoiceQueue(unsigned char) (section .text.putVoiceQueue(unsigned char))
        [0x0000dba2 to 0x0000dba5] - sei (section .text.sei)
        [0x0000dba6 to 0x0000dba9] - cli (section .text.cli)
        [0x0000dbaa to 0x0000dbad] - telemItemValid(unsigned char) (section .text.telemItemValid(unsigned char))
        [0x0000dbae to 0x0000dbaf] - audioQueue::audioQueue() (section .text.audioQueue::audioQueue())
        [0x0000dbb0 to 0x0000dbb1] - serialVoiceBlockSend(unsigned char*, unsigned char) (section .text.serialVoiceBlockSend(unsigned char*, unsigned char))
        [0x0000dbb2 to 0x0000dbb3] - stopSerialVoice() (section .text.stopSerialVoice())
        [0x0000dbb4 to 0x0000e117] - font_dblsize (section .rodata.font_dblsize)
        [0x0000e118 to 0x0000e306] - font (section .rodata.font)
        [0x0000e307 to 0x0000e406] - crc8tab (section .rodata.crc8tab)
        [0x0000e407 to 0x0000e4f4] - Str_telemItems (section .rodata.Str_telemItems)
        [0x0000e4f5 to 0x0000e59a] - Str_Chans_Gv (section .rodata.Str_Chans_Gv)
        [0x0000e59b to 0x0000e617] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000e618 to 0x0000e689] - Str_Cswitch (section .rodata.Str_Cswitch)
        [0x0000e68a to 0x0000e6eb] - Str_Sounds (section .rodata.Str_Sounds)
        [0x0000e6ec to 0x0000e743] - AFHDS2A_tel (section .rodata.AFHDS2A_tel)
        [0x0000e744 to 0x0000e795] - [.rodata..L.str.68] (section .rodata..L.str.68)
        [0x0000e796 to 0x0000e7e1] - [.rodata..L.str.62] (section .rodata..L.str.62)
        [0x0000e7e2 to 0x0000e82c] - sticks (section .rodata.sticks)
        [0x0000e82d to 0x0000e877] - [.rodata..L.str.128] (section .rodata..L.str.128)
        [0x0000e878 to 0x0000e8c1] - Curve_Str (section .rodata.Curve_Str)
        [0x0000e8c2 to 0x0000e908] - [.rodata..L.str.123] (section .rodata..L.str.123)
        [0x0000e909 to 0x0000e94b] - s_charTab (section .rodata.s_charTab)
        [0x0000e94c to 0x0000e98c] - Str_Switches (section .rodata.Str_Switches)
        [0x0000e98d to 0x0000e9cd] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000e9ce to 0x0000ea0c] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000ea0d to 0x0000ea46] - Str_Main_Popup (section .rodata.Str_Main_Popup)
        [0x0000ea47 to 0x0000ea80] - TelemIndex (section .rodata.TelemIndex)
        [0x0000ea81 to 0x0000eab6] - [.rodata..L.str.65] (section .rodata..L.str.65)
        [0x0000eab7 to 0x0000eaeb] - ModelPopList (section .rodata.ModelPopList)
        [0x0000eaec to 0x0000eb20] - [.rodata..L.str.121] (section .rodata..L.str.121)
        [0x0000eb21 to 0x0000eb54] - [.rodata..L.str.125] (section .rodata..L.str.125)
        [0x0000eb55 to 0x0000eb86] - AFHDS_A7105_regs (section .rodata.AFHDS_A7105_regs)
        [0x0000eb87 to 0x0000ebb8] - AFHDS2A_A7105_regs (section .rodata.AFHDS2A_A7105_regs)
        [0x0000ebb9 to 0x0000ebea] - [.rodata..L.str.118] (section .rodata..L.str.118)
        [0x0000ebeb to 0x0000ec18] - [.rodata..L.str.67] (section .rodata..L.str.67)
        [0x0000ec19 to 0x0000ec46] - [.rodata..L.str.64] (section .rodata..L.str.64)
        [0x0000ec47 to 0x0000ec74] - [.rodata..L.str.18] (section .rodata..L.str.18)
        [0x0000ec75 to 0x0000ec9f] - [.rodata..L.str.133] (section .rodata..L.str.133)
        [0x0000eca0 to 0x0000ecca] - [.rodata..L.str.13] (section .rodata..L.str.13)
        [0x0000eccb to 0x0000ecf5] - [.rodata..L.str.109] (section .rodata..L.str.109)
        [0x0000ecf6 to 0x0000ed1f] - UnitsString (section .rodata.UnitsString)
        [0x0000ed20 to 0x0000ed49] - Stamps (section .rodata.Stamps)
        [0x0000ed4a to 0x0000ed72] - Str_Gv_Source (section .rodata.Str_Gv_Source)
        [0x0000ed73 to 0x0000ed9b] - [.rodata..L.str.87] (section .rodata..L.str.87)
        [0x0000ed9c to 0x0000edc3] - [.rodata..L.str.63] (section .rodata..L.str.63)
        [0x0000edc4 to 0x0000edea] - MixPopList (section .rodata.MixPopList)
        [0x0000edeb to 0x0000ee10] - [.rodata..L.str.115] (section .rodata..L.str.115)
        [0x0000ee11 to 0x0000ee35] - [.rodata..L.str.88] (section .rodata..L.str.88)
        [0x0000ee36 to 0x0000ee5a] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000ee5b to 0x0000ee7c] - [.rodata..L.str.126] (section .rodata..L.str.126)
        [0x0000ee7d to 0x0000ee9d] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000ee9e to 0x0000eebd] - AFHDS_tx_channels (section .rodata.AFHDS_tx_channels)
        [0x0000eebe to 0x0000eedd] - [.rodata..L.str.91] (section .rodata..L.str.91)
        [0x0000eede to 0x0000eefd] - [.rodata..L.str.74] (section .rodata..L.str.74)
        [0x0000eefe to 0x0000ef1d] - [.rodata..L.str.131] (section .rodata..L.str.131)
        [0x0000ef1e to 0x0000ef3b] - SW_3_IDX (section .rodata.SW_3_IDX)
        [0x0000ef3c to 0x0000ef59] - [.rodata..L.str.29] (section .rodata..L.str.29)
        [0x0000ef5a to 0x0000ef77] - [.rodata..L.str.119] (section .rodata..L.str.119)
        [0x0000ef78 to 0x0000ef95] - [.rodata..L.str.110] (section .rodata..L.str.110)
        [0x0000ef96 to 0x0000efb1] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000efb2 to 0x0000efcd] - [.rodata..L.str.17] (section .rodata..L.str.17)
        [0x0000efce to 0x0000efe9] - [.rodata..L.str.122] (section .rodata..L.str.122)
        [0x0000efea to 0x0000f004] - [.rodata..L.str.102] (section .rodata..L.str.102)
        [0x0000f005 to 0x0000f01e] - [.rodata..L.str.70] (section .rodata..L.str.70)
        [0x0000f01f to 0x0000f037] - [.rodata..L.str.19] (section .rodata..L.str.19)
        [0x0000f038 to 0x0000f04f] - bchout_ar (section .rodata.bchout_ar)
        [0x0000f050 to 0x0000f067] - [.rodata..L.str.134] (section .rodata..L.str.134)
        [0x0000f068 to 0x0000f07f] - [.rodata..L.str.129] (section .rodata..L.str.129)
        [0x0000f080 to 0x0000f096] - [.rodata..L.str.45] (section .rodata..L.str.45)
        [0x0000f097 to 0x0000f0ac] - Str_On_Off_Both (section .rodata.Str_On_Off_Both)
        [0x0000f0ad to 0x0000f0c2] - [.rodata..L.str.94] (section .rodata..L.str.94)
        [0x0000f0c3 to 0x0000f0d8] - [.rodata..L.str.92] (section .rodata..L.str.92)
        [0x0000f0d9 to 0x0000f0ee] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f0ef to 0x0000f103] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f104 to 0x0000f117] - [.rodata..L.str.60] (section .rodata..L.str.60)
        [0x0000f118 to 0x0000f12b] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f12c to 0x0000f13f] - [.rodata..L.str.117] (section .rodata..L.str.117)
        [0x0000f140 to 0x0000f152] - [.rodata..L.str.55] (section .rodata..L.str.55)
        [0x0000f153 to 0x0000f165] - [.rodata..L.str.44] (section .rodata..L.str.44)
        [0x0000f166 to 0x0000f178] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f179 to 0x0000f18a] - modi12x3 (section .rodata.modi12x3)
        [0x0000f18b to 0x0000f19c] - [.rodata..L.str.85] (section .rodata..L.str.85)
        [0x0000f19d to 0x0000f1ae] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f1af to 0x0000f1c0] - [.rodata..L.str.27] (section .rodata..L.str.27)
        [0x0000f1c1 to 0x0000f1d2] - [.rodata..L.str.25] (section .rodata..L.str.25)
        [0x0000f1d3 to 0x0000f1e3] - menuWhenDone (section .rodata.menuWhenDone)
        [0x0000f1e4 to 0x0000f1f4] - [.rodata..L.str.83] (section .rodata..L.str.83)
        [0x0000f1f5 to 0x0000f205] - [.rodata..L.str.66] (section .rodata..L.str.66)
        [0x0000f206 to 0x0000f216] - [.rodata..L.str.57] (section .rodata..L.str.57)
        [0x0000f217 to 0x0000f227] - [.rodata..L.str.54] (section .rodata..L.str.54)
        [0x0000f228 to 0x0000f238] - [.rodata..L.str.50] (section .rodata..L.str.50)
        [0x0000f239 to 0x0000f249] - [.rodata..L.str.20] (section .rodata..L.str.20)
        [0x0000f24a to 0x0000f25a] - [.rodata..L.str.137] (section .rodata..L.str.137)
        [0x0000f25b to 0x0000f26b] - [.rodata..L.str.135] (section .rodata..L.str.135)
        [0x0000f26c to 0x0000f27c] - [.rodata..L.str.120] (section .rodata..L.str.120)
        [0x0000f27d to 0x0000f28c] - stickScramble (section .rodata.stickScramble)
        [0x0000f28d to 0x0000f29c] - Str_EEPROM_Overflow (section .rodata.Str_EEPROM_Overflow)
        [0x0000f29d to 0x0000f2ac] - [.rodata..L.str.90] (section .rodata..L.str.90)
        [0x0000f2ad to 0x0000f2bc] - [.rodata..L.str.78] (section .rodata..L.str.78)
        [0x0000f2bd to 0x0000f2cc] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000f2cd to 0x0000f2dc] - [.rodata..L.str.23] (section .rodata..L.str.23)
        [0x0000f2dd to 0x0000f2ec] - [.rodata..L.str.139] (section .rodata..L.str.139)
        [0x0000f2ed to 0x0000f2fc] - [.rodata..L.str.138] (section .rodata..L.str.138)
        [0x0000f2fd to 0x0000f30c] - [.rodata..L.str.124] (section .rodata..L.str.124)
        [0x0000f30d to 0x0000f31c] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f31d to 0x0000f32b] - Str_Beep_Countdown (section .rodata.Str_Beep_Countdown)
        [0x0000f32c to 0x0000f33a] - csTypeTable (section .rodata.csTypeTable)
        [0x0000f33b to 0x0000f349] - [.rodata..L.str.6] (section .rodata..L.str.6)
        [0x0000f34a to 0x0000f358] - [.rodata..L.str.5] (section .rodata..L.str.5)
        [0x0000f359 to 0x0000f367] - [.rodata..L.str.14] (section .rodata..L.str.14)
        [0x0000f368 to 0x0000f376] - [.rodata..L.str.132] (section .rodata..L.str.132)
        [0x0000f377 to 0x0000f385] - [.rodata..L.str.112] (section .rodata..L.str.112)
        [0x0000f386 to 0x0000f394] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000f395 to 0x0000f3a3] - [.rodata..L.str.106] (section .rodata..L.str.106)
        [0x0000f3a4 to 0x0000f3b1] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000f3b2 to 0x0000f3bf] - [.rodata..L.str.84] (section .rodata..L.str.84)
        [0x0000f3c0 to 0x0000f3cd] - [.rodata..L.str.69] (section .rodata..L.str.69)
        [0x0000f3ce to 0x0000f3db] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f3dc to 0x0000f3e9] - [.rodata..L.str.116] (section .rodata..L.str.116)
        [0x0000f3ea to 0x0000f3f7] - [.rodata..L.str.103] (section .rodata..L.str.103)
        [0x0000f3f8 to 0x0000f404] - [.rodata..L.str.79] (section .rodata..L.str.79)
        [0x0000f405 to 0x0000f411] - [.rodata..L.str.7] (section .rodata..L.str.7)
        [0x0000f412 to 0x0000f41e] - [.rodata..L.str.24] (section .rodata..L.str.24)
        [0x0000f41f to 0x0000f42b] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f42c to 0x0000f437] - Lcdinit (section .rodata.Lcdinit)
        [0x0000f438 to 0x0000f443] - Str_minute_Beep (section .rodata.Str_minute_Beep)
        [0x0000f444 to 0x0000f44f] - Str_Calibration (section .rodata.Str_Calibration)
        [0x0000f450 to 0x0000f45b] - Str_AudioHaptic (section .rodata.Str_AudioHaptic)
        [0x0000f45c to 0x0000f467] - [.rodata..L.str.93] (section .rodata..L.str.93)
        [0x0000f468 to 0x0000f473] - [.rodata..L.str.86] (section .rodata..L.str.86)
        [0x0000f474 to 0x0000f47f] - [.rodata..L.str.72] (section .rodata..L.str.72)
        [0x0000f480 to 0x0000f48b] - [.rodata..L.str.38] (section .rodata..L.str.38)
        [0x0000f48c to 0x0000f497] - [.rodata..L.str.21] (section .rodata..L.str.21)
        [0x0000f498 to 0x0000f4a3] - [.rodata..L.str.130] (section .rodata..L.str.130)
        [0x0000f4a4 to 0x0000f4ae] - Str_heli_setup (section .rodata.Str_heli_setup)
        [0x0000f4af to 0x0000f4b9] - Str_Cswitches (section .rodata.Str_Cswitches)
        [0x0000f4ba to 0x0000f4c4] - Str_Globals (section .rodata.Str_Globals)
        [0x0000f4c5 to 0x0000f4cf] - Str_Safety (section .rodata.Str_Safety)
        [0x0000f4d0 to 0x0000f4da] - [.rodata..L.str.95] (section .rodata..L.str.95)
        [0x0000f4db to 0x0000f4e5] - [.rodata..L.str.9] (section .rodata..L.str.9)
        [0x0000f4e6 to 0x0000f4f0] - [.rodata..L.str.80] (section .rodata..L.str.80)
        [0x0000f4f1 to 0x0000f4fb] - [.rodata..L.str.56] (section .rodata..L.str.56)
        [0x0000f4fc to 0x0000f506] - [.rodata..L.str.107] (section .rodata..L.str.107)
        [0x0000f507 to 0x0000f511] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000f512 to 0x0000f51c] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f51d to 0x0000f526] - Str_Telemetry (section .rodata.Str_Telemetry)
        [0x0000f527 to 0x0000f530] - Str_DiagSwtch (section .rodata.Str_DiagSwtch)
        [0x0000f531 to 0x0000f53a] - Str_TRE012AG (section .rodata.Str_TRE012AG)
        [0x0000f53b to 0x0000f544] - [.rodata..L.str.97] (section .rodata..L.str.97)
        [0x0000f545 to 0x0000f54e] - [.rodata..L.str.71] (section .rodata..L.str.71)
        [0x0000f54f to 0x0000f558] - [.rodata..L.str.39] (section .rodata..L.str.39)
        [0x0000f559 to 0x0000f562] - [.rodata..L.str.34] (section .rodata..L.str.34)
        [0x0000f563 to 0x0000f56c] - [.rodata..L.str.12] (section .rodata..L.str.12)
        [0x0000f56d to 0x0000f576] - [.rodata..L.str.113] (section .rodata..L.str.113)
        [0x0000f577 to 0x0000f580] - [.rodata..L.str] (section .rodata..L.str)
        [0x0000f581 to 0x0000f589] - Str_Protocol (section .rodata.Str_Protocol)
        [0x0000f58a to 0x0000f592] - Str_Hardware (section .rodata.Str_Hardware)
        [0x0000f593 to 0x0000f59b] - Str_Controls (section .rodata.Str_Controls)
        [0x0000f59c to 0x0000f5a4] - [.rodata..L.str.8] (section .rodata..L.str.8)
        [0x0000f5a5 to 0x0000f5ad] - [.rodata..L.str.61] (section .rodata..L.str.61)
        [0x0000f5ae to 0x0000f5b6] - [.rodata..L.str.43] (section .rodata..L.str.43)
        [0x0000f5b7 to 0x0000f5bf] - [.rodata..L.str.40] (section .rodata..L.str.40)
        [0x0000f5c0 to 0x0000f5c8] - [.rodata..L.str.36] (section .rodata..L.str.36)
        [0x0000f5c9 to 0x0000f5d1] - [.rodata..L.str.26] (section .rodata..L.str.26)
        [0x0000f5d2 to 0x0000f5da] - [.rodata..L.str.114] (section .rodata..L.str.114)
        [0x0000f5db to 0x0000f5e3] - [.rodata..L.str.105] (section .rodata..L.str.105)
        [0x0000f5e4 to 0x0000f5ec] - [.rodata..L.str.104] (section .rodata..L.str.104)
        [0x0000f5ed to 0x0000f5f5] - [.rodata..L.str.100] (section .rodata..L.str.100)
        [0x0000f5f6 to 0x0000f5fe] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000f5ff to 0x0000f606] - per10ms()::crossTrim (section .rodata.per10ms()::crossTrim)
        [0x0000f607 to 0x0000f60e] - UnitsText (section .rodata.UnitsText)
        [0x0000f60f to 0x0000f616] - _bitmask (section .rodata._bitmask)
        [0x0000f617 to 0x0000f61e] - Str_Expo (section .rodata.Str_Expo)
        [0x0000f61f to 0x0000f626] - rate (section .rodata.rate)
        [0x0000f627 to 0x0000f62e] - Str_Version (section .rodata.Str_Version)
        [0x0000f62f to 0x0000f636] - Str_Trainer (section .rodata.Str_Trainer)
        [0x0000f637 to 0x0000f63e] - Str_General (section .rodata.Str_General)
        [0x0000f63f to 0x0000f646] - Str_Display (section .rodata.Str_Display)
        [0x0000f647 to 0x0000f64e] - Str_DiagAna (section .rodata.Str_DiagAna)
        [0x0000f64f to 0x0000f656] - UnitsVoice (section .rodata.UnitsVoice)
        [0x0000f657 to 0x0000f65e] - [.rodata..L.str.82] (section .rodata..L.str.82)
        [0x0000f65f to 0x0000f666] - [.rodata..L.str.75] (section .rodata..L.str.75)
        [0x0000f667 to 0x0000f66e] - [.rodata..L.str.4] (section .rodata..L.str.4)
        [0x0000f66f to 0x0000f676] - [.rodata..L.str.33] (section .rodata..L.str.33)
        [0x0000f677 to 0x0000f67e] - [.rodata..L.str.32] (section .rodata..L.str.32)
        [0x0000f67f to 0x0000f686] - [.rodata..L.str.28] (section .rodata..L.str.28)
        [0x0000f687 to 0x0000f68e] - [.rodata..L.str.127] (section .rodata..L.str.127)
        [0x0000f68f to 0x0000f696] - [.rodata..L.str.101] (section .rodata..L.str.101)
        [0x0000f697 to 0x0000f69d] - Str_Alert (section .rodata.Str_Alert)
        [0x0000f69e to 0x0000f6a4] - ChannelToPin (section .rodata.ChannelToPin)
        [0x0000f6a5 to 0x0000f6ab] - Str_limits (section .rodata.Str_limits)
        [0x0000f6ac to 0x0000f6b2] - Str_Curves (section .rodata.Str_Curves)
        [0x0000f6b3 to 0x0000f6b9] - Str_Alarms (section .rodata.Str_Alarms)
        [0x0000f6ba to 0x0000f6c0] - [.rodata..L.str.96] (section .rodata..L.str.96)
        [0x0000f6c1 to 0x0000f6c7] - [.rodata..L.str.77] (section .rodata..L.str.77)
        [0x0000f6c8 to 0x0000f6ce] - [.rodata..L.str.37] (section .rodata..L.str.37)
        [0x0000f6cf to 0x0000f6d5] - [.rodata..L.str.35] (section .rodata..L.str.35)
        [0x0000f6d6 to 0x0000f6dc] - [.rodata..L.str.31] (section .rodata..L.str.31)
        [0x0000f6dd to 0x0000f6e3] - [.rodata..L.str.10] (section .rodata..L.str.10)
        [0x0000f6e4 to 0x0000f6ea] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000f6eb to 0x0000f6f0] - Str_Timer (section .rodata.Str_Timer)
        [0x0000f6f1 to 0x0000f6f6] - Str_Modes (section .rodata.Str_Modes)
        [0x0000f6f7 to 0x0000f6fc] - Str_Mixer (section .rodata.Str_Mixer)
        [0x0000f6fd to 0x0000f702] - Str_Curve (section .rodata.Str_Curve)
        [0x0000f703 to 0x0000f708] - Str_1_RETA (section .rodata.Str_1_RETA)
        [0x0000f709 to 0x0000f70e] - [.rodata..L.str.98] (section .rodata..L.str.98)
        [0x0000f70f to 0x0000f714] - [.rodata..L.str.41] (section .rodata..L.str.41)
        [0x0000f715 to 0x0000f71a] - [.rodata..L.str.16] (section .rodata..L.str.16)
        [0x0000f71b to 0x0000f720] - [.rodata..L.str.15] (section .rodata..L.str.15)
        [0x0000f721 to 0x0000f726] - [.rodata..L.str.108] (section .rodata..L.str.108)
        [0x0000f727 to 0x0000f72b] - Str_Name (section .rodata.Str_Name)
        [0x0000f72c to 0x0000f730] - CROSSFIRE_PERIODS (section .rodata.CROSSFIRE_PERIODS)
        [0x0000f731 to 0x0000f735] - Str_Hyphens (section .rodata.Str_Hyphens)
        [0x0000f736 to 0x0000f73a] - [.rodata..L.str.89] (section .rodata..L.str.89)
        [0x0000f73b to 0x0000f73f] - [.rodata..L.str.73] (section .rodata..L.str.73)
        [0x0000f740 to 0x0000f744] - [.rodata..L.str.51] (section .rodata..L.str.51)
        [0x0000f745 to 0x0000f749] - [.rodata..L.str.49] (section .rodata..L.str.49)
        [0x0000f74a to 0x0000f74e] - [.rodata..L.str.48] (section .rodata..L.str.48)
        [0x0000f74f to 0x0000f753] - [.rodata..L.str.42] (section .rodata..L.str.42)
        [0x0000f754 to 0x0000f758] - [.rodata..L.str.3] (section .rodata..L.str.3)
        [0x0000f759 to 0x0000f75d] - [.rodata..L.str.22] (section .rodata..L.str.22)
        [0x0000f75e to 0x0000f761] - menuProc0(unsigned char)::xt (section .rodata.menuProc0(unsigned char)::xt)
        [0x0000f762 to 0x0000f765] - Str_ON (section .rodata.Str_ON)
        [0x0000f766 to 0x0000f769] - Str_OFF (section .rodata.Str_OFF)
        [0x0000f76a to 0x0000f76d] - [.rodata..L.str.81] (section .rodata..L.str.81)
        [0x0000f76e to 0x0000f771] - [.rodata..L.str.76] (section .rodata..L.str.76)
        [0x0000f772 to 0x0000f775] - [.rodata..L.str.53] (section .rodata..L.str.53)
        [0x0000f776 to 0x0000f779] - [.rodata..L.str.52] (section .rodata..L.str.52)
        [0x0000f77a to 0x0000f77d] - [.rodata..L.str.47] (section .rodata..L.str.47)
        [0x0000f77e to 0x0000f781] - [.rodata..L.str.46] (section .rodata..L.str.46)
        [0x0000f782 to 0x0000f785] - [.rodata..L.str.30] (section .rodata..L.str.30)
        [0x0000f786 to 0x0000f789] - [.rodata..L.str.136] (section .rodata..L.str.136)
        [0x0000f78a to 0x0000f78d] - [.rodata..L.str.111] (section .rodata..L.str.111)
        [0x0000f78e to 0x0000f791] - [.rodata..L.str.1] (section .rodata..L.str.1)
        [0x0000f792 to 0x0000f794] - Str_SC (section .rodata.Str_SC)
        [0x0000f795 to 0x0000f797] - Str_GV (section .rodata.Str_GV)
        [0x0000f798 to 0x0000f79a] - [.rodata..L.str.99] (section .rodata..L.str.99)
        [0x0000f79b to 0x0000f79d] - [.rodata..L.str.59] (section .rodata..L.str.59)
        [0x0000f79e to 0x0000f7a0] - [.rodata..L.str.58] (section .rodata..L.str.58)
        [0x0000f7a1 to 0x0000f7a3] - [.rodata..L.str.2] (section .rodata..L.str.2)
        [0x0000f7a4 to 0x0000f7a6] - [.rodata..L.str.11] (section .rodata..L.str.11)
        [0x0000f7a7 size 0] - [.rodata.block.tdata.copy] (section .rodata.block.tdata.copy)
        [0x0000f7a8 to 0x0000f7ab] - [.init_array] (section .init_array)
        [0x0000f7ac to 0x0000f7af] - [.init_array] (section .init_array)
        [0x0000f7b0 to 0x0000f7b3] - [.init_array] (section .init_array)
        [0x0000f7b4 to 0x0000f7db] - __SEGGER_init_table__ (section .segger.init.table)
        [0x0000f7dc to 0x0000f7fb] - __SEGGER_init_ctors (section .segger.init.__SEGGER_init_ctors)
        [0x0000f7fc to 0x0000f817] - __SEGGER_init_heap (section .segger.init.__SEGGER_init_heap)
        [0x0000f818 to 0x0000f82b] - __SEGGER_init_data__ (section .segger.init.data)
        [0x0000f82c to 0x0000f83f] - __SEGGER_init_copy (section .segger.init.__SEGGER_init_copy)
        [0x0000f840 to 0x0000f851] - __SEGGER_init_zero (section .segger.init.__SEGGER_init_zero)
      Start program header at 0x1ffff800
        [0x1ffff800 to 0x1ffff807] - AFHDS2A_tel_status (section .bss.AFHDS2A_tel_status)
        [0x1ffff808 to 0x1ffffc07] - DisplayBuf (section .bss.DisplayBuf)
        [0x1ffffc08 to 0x1ffffd07] - Output (section .bss.Output)
        [0x1ffffd08 to 0x1ffffdb3] - AFHDS2A_tel_data (section .bss.AFHDS2A_tel_data)
        [0x1ffffdb4 to 0x1ffffe03] - Fade (section .bss.Fade)
        [0x1ffffe04 to 0x1ffffe43] - eeFs (section .bss.eeFs)
        [0x1ffffe44 to 0x1ffffe73] - Radio (section .bss.Radio)
        [0x1ffffe74 to 0x1ffffe9b] - packet (section .bss.packet)
        [0x1ffffe9c to 0x1ffffeaf] - g_menuStack (section .bss.g_menuStack)
        [0x1ffffeb0 to 0x1ffffebf] - WorkBuff (section .bss.WorkBuff)
        [0x1ffffec0 to 0x1ffffecf] - MspSender (section .bss.MspSender)
        [0x1ffffed0 to 0x1ffffedf] - LoadBuff (section .bss.LoadBuff)
        [0x1ffffee0 to 0x1ffffeeb] - i2c_buffer (section .bss.i2c_buffer)
        [0x1ffffeec to 0x1ffffef7] - moduleSyncStatus (section .bss.moduleSyncStatus)
        [0x1ffffef8 to 0x1fffff03] - TelemetryReceiver (section .bss.TelemetryReceiver)
        [0x1fffff04 to 0x1fffff0f] - LQCalc (section .bss.LQCalc)
        [0x1fffff10 to 0x1fffff13] - telemetryErrors (section .bss.telemetryErrors)
        [0x1fffff14 to 0x1fffff17] - hal (section .bss.hal)
        [0x1fffff18 to 0x1fffff1b] - g_tmr10ms (section .bss.g_tmr10ms)
        [0x1fffff1c to 0x1fffff1f] - crossfireTelemetryCallback (section .bss.crossfireTelemetryCallback)
        [0x1fffff20 to 0x1fffff23] - perMain()::lastTMR (section .bss.perMain()::lastTMR)
        [0x1fffff24 to 0x1fffff27] - Vario_driver()::toneCounter (section .bss.Vario_driver()::toneCounter)
        [0x1fffff28 to 0x1fffff2b] - SX127xHal::instance (section .bss.SX127xHal::instance)
        [0x1fffff2c to 0x1fffff2f] - SX127xDriver::instance (section .bss.SX127xDriver::instance)
        [0x1fffff30 to 0x1fffff33] - g_crsf_read_callback (section .bss.g_crsf_read_callback)
        [0x1fffff34 to 0x1fffff37] - SPI_BufferPtr (section .bss.SPI_BufferPtr)
        [0x1fffff38 to 0x1fffff3b] - ID (section .bss.ID)
        [0x1fffff3c to 0x1fffff3f] - AlertMessage (section .bss.AlertMessage)
        [0x1fffff40 to 0x20000141] - ota_crc (section .bss.ota_crc)
        [0x20000142 to 0x200001d1] - pulses2MHz (section .bss.pulses2MHz)
        [0x200001d2 to 0x2000023b] - Xmem (section .bss.Xmem)
        [0x2000023c to 0x2000026f] - Voice (section .bss.Voice)
        [0x20000270 to 0x2000028f] - s_timer (section .bss.s_timer)
        [0x20000290 to 0x200002af] - g_chans512 (section .bss.g_chans512)
        [0x200002b0 to 0x200002cf] - Ex_chans (section .bss.Ex_chans)
        [0x200002d0 to 0x200002e7] - CsTimer (section .bss.CsTimer)
        [0x200002e8 to 0x200002f7] - s_anaFilt (section .bss.s_anaFilt)
        [0x200002f8 to 0x20000307] - g_ppmIns (section .bss.g_ppmIns)
        [0x20000308 to 0x20000317] - Nvs_timer (section .bss.Nvs_timer)
        [0x20000318 to 0x20000325] - calibratedStick (section .bss.calibratedStick)
        [0x20000326 to 0x2000032f] - theWriteFile (section .bss.theWriteFile)
        [0x20000330 to 0x20000339] - theFile (section .bss.theFile)
        [0x2000033a to 0x20000343] - P1values (section .bss.P1values)
        [0x20000344 to 0x2000034b] - TimeGlobals (section .bss.TimeGlobals)
        [0x2000034c to 0x20000351] - Inactivity (section .bss.Inactivity)
        [0x20000352 to 0x20000353] - tmrEEPROM (section .bss.tmrEEPROM)
        [0x20000354 to 0x20000355] - g_tmr16KHz (section .bss.g_tmr16KHz)
        [0x20000356 to 0x20000357] - g_latency (section .bss.g_latency)
        [0x20000358 to 0x20000359] - g_LightOffCounter (section .bss.g_LightOffCounter)
        [0x2000035a to 0x2000035b] - trace()::s_time (section .bss.trace()::s_time)
        [0x2000035c to 0x2000035d] - ISR_TIMER3_CAPT_vect::lastCapt (section .bss.ISR_TIMER3_CAPT_vect::lastCapt)
        [0x2000035e to 0x2000035f] - menuBackupRestore(unsigned char)::count (section .bss.menuBackupRestore(unsigned char)::count)
        [0x20000360 to 0x20000361] - ActionAFHDS2A::packet_counter (section .bss.ActionAFHDS2A::packet_counter)
        [0x20000362 to 0x20000363] - mainSequence()::timer (section .bss.mainSequence()::timer)
        [0x20000364 to 0x20000365] - s_eeDirtyTime10ms (section .bss.s_eeDirtyTime10ms)
        [0x20000366 to 0x20000367] - SPI_Size (section .bss.SPI_Size)
        [0x20000368 to 0x20000369] - GAltOffset (section .bss.GAltOffset)
        [0x2000036a to 0x2000036b] - B3_comp_value (section .bss.B3_comp_value)
        [0x2000036c to 0x2000036d] - AltOffset (section .bss.AltOffset)
        [0x2000036e to 0x20000755] - g_model (section .bss.g_model)
        [0x20000756 to 0x200007d5] - telemetryRxBuffer (section .bss.telemetryRxBuffer)
        [0x200007d6 to 0x2000084b] - g_eeGeneral (section .bss.g_eeGeneral)
        [0x2000084c to 0x2000088c] - g_crossfire (section .bss.g_crossfire)
        [0x2000088d to 0x200008c4] - audio (section .bss.audio)
        [0x200008c5 to 0x200008f1] - keys (section .bss.keys)
        [0x200008f2 to 0x2000091c] - AFHDS2A_tel_res_cnt (section .bss.AFHDS2A_tel_res_cnt)
        [0x2000091d to 0x2000092e] - SvFifo (section .bss.SvFifo)
        [0x2000092f to 0x2000093e] - outputTelemetryBuffer (section .bss.outputTelemetryBuffer)
        [0x2000093f to 0x2000094e] - hopping_frequency (section .bss.hopping_frequency)
        [0x2000094f to 0x2000095a] - Last_switch (section .bss.Last_switch)
        [0x2000095b to 0x20000964] - TimerConfig (section .bss.TimerConfig)
        [0x20000965 to 0x2000096d] - Rotary (section .bss.Rotary)
        [0x2000096e to 0x20000975] - Nvs_state (section .bss.Nvs_state)
        [0x20000976 to 0x20000979] - phyStick (section .bss.phyStick)
        [0x2000097a to 0x2000097d] - PopupData (section .bss.PopupData)
        [0x2000097e to 0x20000980] - g_crsf_config (section .bss.g_crsf_config)
        [0x20000981 to 0x20000983] - MenuControl (section .bss.MenuControl)
        [0x20000984 to 0x20000984] - tick10ms (section .bss.tick10ms)
        [0x20000985 to 0x20000985] - telemetryRxBufferCount (section .bss.telemetryRxBufferCount)
        [0x20000986 to 0x20000986] - sysFlags (section .bss.sysFlags)
        [0x20000987 to 0x20000987] - stickMoved (section .bss.stickMoved)
        [0x20000988 to 0x20000988] - serialDat0 (section .bss.serialDat0)
        [0x20000989 to 0x20000989] - scroll_disabled (section .bss.scroll_disabled)
        [0x2000098a to 0x2000098a] - scrollUD (section .bss.scrollUD)
        [0x2000098b to 0x2000098b] - scrollLR (section .bss.scrollLR)
        [0x2000098c to 0x2000098c] - s_pgOfs (section .bss.s_pgOfs)
        [0x2000098d to 0x2000098d] - s_noHi (section .bss.s_noHi)
        [0x2000098e to 0x2000098e] - s_moveMode (section .bss.s_moveMode)
        [0x2000098f to 0x2000098f] - s_mixMaxSel (section .bss.s_mixMaxSel)
        [0x20000990 to 0x20000990] - s_evt (section .bss.s_evt)
        [0x20000991 to 0x20000991] - s_editing (section .bss.s_editing)
        [0x20000992 to 0x20000992] - s_editMode (section .bss.s_editMode)
        [0x20000993 to 0x20000993] - pxxFlag (section .bss.pxxFlag)
        [0x20000994 to 0x20000994] - protocol_flags (section .bss.protocol_flags)
        [0x20000995 to 0x20000995] - ppmInState (section .bss.ppmInState)
        [0x20000996 to 0x20000996] - ppmInAvailable (section .bss.ppmInAvailable)
        [0x20000997 to 0x20000997] - plotType (section .bss.plotType)
        [0x20000998 to 0x20000998] - packet_count (section .bss.packet_count)
        [0x20000999 to 0x20000999] - outputTelemetryBufferTrigger (section .bss.outputTelemetryBufferTrigger)
        [0x2000099a to 0x2000099a] - outputTelemetryBufferSize (section .bss.outputTelemetryBufferSize)
        [0x2000099b to 0x2000099b] - mixToDelete (section .bss.mixToDelete)
        [0x2000099c to 0x2000099c] - hopping_frequency_no (section .bss.hopping_frequency_no)
        [0x2000099d to 0x2000099d] - heartbeat (section .bss.heartbeat)
        [0x2000099e to 0x2000099e] - g_vbat100mV (section .bss.g_vbat100mV)
        [0x2000099f to 0x2000099f] - g_posHorz (section .bss.g_posHorz)
        [0x200009a0 to 0x200009a0] - g_menuStackPtr (section .bss.g_menuStackPtr)
        [0x200009a1 to 0x200009a1] - g_blinkTmr10ms (section .bss.g_blinkTmr10ms)
        [0x200009a2 to 0x200009a2] - bpanaCenter (section .bss.bpanaCenter)
        [0x200009a3 to 0x200009a3] - bind_phase (section .bss.bind_phase)
        [0x200009a4 to 0x200009a4] - MState2::check_columns(unsigned char, unsigned char)::lateUp (section .bss.MState2::check_columns(unsigned char, unsigned char)::lateUp)
        [0x200009a5 to 0x200009a5] - audioQueue::driver()::toneCounter (section .bss.audioQueue::driver()::toneCounter)
        [0x200009a6 to 0x200009a6] - perMain()::repeater (section .bss.perMain()::repeater)
        [0x200009a7 to 0x200009a7] - perMain()::alertKey (section .bss.perMain()::alertKey)
        [0x200009a8 to 0x200009a8] - perMain()::s_batCheck (section .bss.perMain()::s_batCheck)
        [0x200009a9 to 0x200009a9] - menuProc0(unsigned char)::trimSwLock (section .bss.menuProc0(unsigned char)::trimSwLock)
        [0x200009aa to 0x200009aa] - per10ms()::current (section .bss.per10ms()::current)
        [0x200009ab to 0x200009ab] - perOut(short*, unsigned char)::sticky (section .bss.perOut(short*, unsigned char)::sticky)
        [0x200009ac to 0x200009ac] - check_backlight_voice()::tmr10ms (section .bss.check_backlight_voice()::tmr10ms)
        [0x200009ad to 0x200009ad] - menuProcModelSelect(unsigned char)::mstate2 (section .bss.menuProcModelSelect(unsigned char)::mstate2)
        [0x200009ae to 0x200009ae] - menuProcModelSelect(unsigned char)::sel_editMode (section .bss.menuProcModelSelect(unsigned char)::sel_editMode)
        [0x200009af to 0x200009af] - menuProcVoiceAlarm(unsigned char)::mstate2 (section .bss.menuProcVoiceAlarm(unsigned char)::mstate2)
        [0x200009b0 to 0x200009b0] - menuProcModelIndex(unsigned char)::mstate (section .bss.menuProcModelIndex(unsigned char)::mstate)
        [0x200009b1 to 0x200009b1] - menuProcTelemetry(unsigned char)::mstate2 (section .bss.menuProcTelemetry(unsigned char)::mstate2)
        [0x200009b2 to 0x200009b2] - menuBackupRestore(unsigned char)::mstate2 (section .bss.menuBackupRestore(unsigned char)::mstate2)
        [0x200009b3 to 0x200009b3] - menuProcVoiceOne(unsigned char)::mstate2 (section .bss.menuProcVoiceOne(unsigned char)::mstate2)
        [0x200009b4 to 0x200009b4] - menuProcProtocol(unsigned char)::mstate2 (section .bss.menuProcProtocol(unsigned char)::mstate2)
        [0x200009b5 to 0x200009b5] - menuProcCurveOne(unsigned char)::mstate2 (section .bss.menuProcCurveOne(unsigned char)::mstate2)
        [0x200009b6 to 0x200009b6] - menuProcCurveOne(unsigned char)::dfltCrv (section .bss.menuProcCurveOne(unsigned char)::dfltCrv)
        [0x200009b7 to 0x200009b7] - menuSetFailsafe(unsigned char)::mstate2 (section .bss.menuSetFailsafe(unsigned char)::mstate2)
        [0x200009b8 to 0x200009b8] - menuProcGlobals(unsigned char)::mstate2 (section .bss.menuProcGlobals(unsigned char)::mstate2)
        [0x200009b9 to 0x200009b9] - menuModelPhases(unsigned char)::mstate2 (section .bss.menuModelPhases(unsigned char)::mstate2)
        [0x200009ba to 0x200009ba] - A7105_AntSwitch()::sw (section .bss.A7105_AntSwitch()::sw)
        [0x200009bb to 0x200009bb] - menuProcMixOne(unsigned char)::mstate2 (section .bss.menuProcMixOne(unsigned char)::mstate2)
        [0x200009bc to 0x200009bc] - menuRangeBind(unsigned char)::timer (section .bss.menuRangeBind(unsigned char)::timer)
        [0x200009bd to 0x200009bd] - menuProcIndex(unsigned char)::mstate (section .bss.menuProcIndex(unsigned char)::mstate)
        [0x200009be to 0x200009be] - menuProcCurve(unsigned char)::mstate2 (section .bss.menuProcCurve(unsigned char)::mstate2)
        [0x200009bf to 0x200009bf] - ActionAFHDS2A::packet_type (section .bss.ActionAFHDS2A::packet_type)
        [0x200009c0 to 0x200009c0] - menuScaleOne(unsigned char)::mstate2 (section .bss.menuScaleOne(unsigned char)::mstate2)
        [0x200009c1 to 0x200009c1] - menuPhaseOne(unsigned char)::mstate2 (section .bss.menuPhaseOne(unsigned char)::mstate2)
        [0x200009c2 to 0x200009c2] - perOutPhase(short*, unsigned char)::lastPhase (section .bss.perOutPhase(short*, unsigned char)::lastPhase)
        [0x200009c3 to 0x200009c3] - menuRXSetup(unsigned char)::mstate2 (section .bss.menuRXSetup(unsigned char)::mstate2)
        [0x200009c4 to 0x200009c4] - menuProcMix(unsigned char)::mstate2 (section .bss.menuProcMix(unsigned char)::mstate2)
        [0x200009c5 to 0x200009c5] - s_currIdx (section .bss.s_currIdx)
        [0x200009c6 to 0x200009c6] - Columns (section .bss.Columns)
        [0x200009c7 to 0x200009c7] - inputs_subview (section .bss.inputs_subview)
        [0x200009c8 to 0x200009c8] - s_eeLongTimer (section .bss.s_eeLongTimer)
        [0x200009c9 to 0x200009c9] - LongMenuTimer (section .bss.LongMenuTimer)
        [0x200009ca to 0x200009ca] - s_moveMixIdx (section .bss.s_moveMixIdx)
        [0x200009cb to 0x200009cb] - s_eeDirtyMsk (section .bss.s_eeDirtyMsk)
        [0x200009cc to 0x200009cc] - s_currMixIdx (section .bss.s_currMixIdx)
        [0x200009cd to 0x200009cd] - s_currDestCh (section .bss.s_currDestCh)
        [0x200009ce to 0x200009ce] - s_curveChan (section .bss.s_curveChan)
        [0x200009cf to 0x200009cf] - IlinesCount (section .bss.IlinesCount)
        [0x200009d0 to 0x200009d0] - s_expoChan (section .bss.s_expoChan)
        [0x200009d1 to 0x200009d1] - VarioPlay (section .bss.VarioPlay)
        [0x200009d2 to 0x200009d2] - ThrottleStickyOn (section .bss.ThrottleStickyOn)
        [0x200009d3 to 0x200009d3] - Tevent (section .bss.Tevent)
        [0x200009d4 to 0x200009d4] - SystemOptions (section .bss.SystemOptions)
        [0x200009d5 to 0x200009d5] - StickScrollTimer (section .bss.StickScrollTimer)
        [0x200009d6 to 0x200009d6] - StickScrollAllowed (section .bss.StickScrollAllowed)
        [0x200009d7 to 0x200009d7] - StepSize (section .bss.StepSize)
        [0x200009d8 to 0x200009d8] - RotaryState (section .bss.RotaryState)
        [0x200009d9 to 0x200009d9] - RadioState (section .bss.RadioState)
        [0x200009da to 0x200009da] - RadioActive (section .bss.RadioActive)
        [0x200009db to 0x200009db] - PausePulses (section .bss.PausePulses)
        [0x200009dc to 0x200009dc] - Main_running (section .bss.Main_running)
        [0x200009dd to 0x200009dd] - M_longMenuTimer (section .bss.M_longMenuTimer)
        [0x200009de to 0x200009de] - Lcd_lastPos (section .bss.Lcd_lastPos)
        [0x200009df to 0x200009df] - LcdLock (section .bss.LcdLock)
        [0x200009e0 to 0x200009e0] - InverseBlink (section .bss.InverseBlink)
        [0x200009e1 to 0x200009e1] - EnterMenu (section .bss.EnterMenu)
        [0x200009e2 to 0x200009e2] - EepromActive (section .bss.EepromActive)
        [0x200009e3 to 0x200009e3] - Ee_lock (section .bss.Ee_lock)
        [0x200009e4 to 0x200009e4] - EditType (section .bss.EditType)
        [0x200009e5 to 0x200009e5] - EditColumns (section .bss.EditColumns)
        [0x200009e6 to 0x200009e6] - DupSub (section .bss.DupSub)
        [0x200009e7 to 0x200009e7] - DupIfNonzero (section .bss.DupIfNonzero)
        [0x200009e8 to 0x200009e8] - Current_protocol (section .bss.Current_protocol)
        [0x200009e9 to 0x200009e9] - CurrentVolume (section .bss.CurrentVolume)
        [0x200009ea to 0x200009ea] - CurrentPhase (section .bss.CurrentPhase)
        [0x200009eb to 0x200009eb] - CalcScaleNest (section .bss.CalcScaleNest)
        [0x200009ec to 0x200009ec] - Backup_RestoreRunning (section .bss.Backup_RestoreRunning)
        [0x200009ed to 0x200009ed] - prev_power (section .data.prev_power)
        [0x200009ee to 0x200009ef] - A7105_AdjustLOBaseFreq()::old_offset (section .data.A7105_AdjustLOBaseFreq()::old_offset)
        [0x200009f0 to 0x200009f3] - g_crossfile_baudrate_index (section .data.g_crossfile_baudrate_index)
        [0x200009f4 to 0x200009f7] - AFHDS2A_update_telemetry()::Dacc (section .data.AFHDS2A_update_telemetry()::Dacc)
        [0x200009f8 to 0x200009fb] - ISR_TIMER1_COMPA_vect::pulsePtr (section .data.ISR_TIMER1_COMPA_vect::pulsePtr)
        [0x200009fc to 0x200009ff] - AlarmControl (section .data.AlarmControl)
        [0x20000a00 to 0x20000a00] - frskyUsrStreaming (section .data.frskyUsrStreaming)
        [0x20000a08 to 0x20000b07] - [.bss.block.heap] (section .bss.block.heap)
      Start program header at 0x20001700
        [0x20001700 to 0x200017ff] - [.bss.block.stack] (section .bss.block.stack)
  Make symbol table
  Finalize copy blocks
  Finalize integrity check sections
  Patch section headers
  Patch program headers
  Patch file header


***************************************************************************************
***                                                                                 ***
***                                  Empty selects                                  ***
***                                                                                 ***
***************************************************************************************

